<!--Saved by Quest 5.4.4873.16527-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Snack">
    <gameid>39702944-ce39-4243-8459-2aaad4c4d15e</gameid>
    <version>0.2.1</version>
    <firstpublished>2014</firstpublished>
    <category type="string"></category>
    <gridmap />
    <cover>snake logo.png</cover>
    <author>Team Interrobang</author>
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <start type="script">
      // set up all the photorecepots in the game
      init_photoreceptor (photoreceptor0)
      // All of the initial "slots" of the snake are filled with the player's current room
      player.game_start = 1
      player.snake_rooms = NewObjectList()
      curRoom = ObjectListItem(ListParents(player),0)
      for (index, 0, player.length-1) {
        list add (player.snake_rooms, curRoom)
      }
      get_name
    </start>
  </game>
  <object name="Prototype">
    <inherit name="editor_room" />
    <inherit name="not_snake_room" />
    <object name="r00">
      <inherit name="editor_room" />
      <description>You can see a vent on the wall, but the room is otherwise unremarkable.</description>
      <descprefix>You are in</descprefix>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="r01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r01, this)
        </look>
      </exit>
      <exit alias="south" to="r10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r10, this)
        </look>
      </exit>
      <exit name="Out Vent" alias="into vent" to="r22">
        <inherit name="indirection" />
        <locked />
        <lockmessage>It looks like it opens from the inside.</lockmessage>
        <look type="script">
          look_room (vent00, this)
        </look>
      </exit>
    </object>
    <object name="r01">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="r00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r00, this)
        </look>
      </exit>
      <exit alias="east" to="r02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r02, this)
        </look>
      </exit>
      <exit alias="south" to="r11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r11, this)
        </look>
      </exit>
    </object>
    <object name="r02">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="r01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r01, this)
        </look>
      </exit>
      <exit alias="south" to="r12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r12, this)
        </look>
      </exit>
    </object>
    <object name="r10">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r00">
        <inherit name="northdirection" />
      </exit>
      <exit alias="south" to="r20">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="r11">
        <inherit name="eastdirection" />
      </exit>
    </object>
    <object name="r11">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r01, this)
        </look>
      </exit>
      <exit alias="west" to="r10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r10, this)
        </look>
      </exit>
      <exit alias="east" to="r12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r12, this)
        </look>
      </exit>
      <exit alias="south" to="r21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r21, this)
        </look>
      </exit>
      <object name="player">
        <inherit name="editor_object" />
        <inherit name="editor_player" />
        <maxobjects type="int">1</maxobjects>
        <containermaxobjects>You want to grab it, but you're already holding something.</containermaxobjects>
        <length type="int">4</length>
        <attr name="show_debug" type="int">0</attr>
      </object>
    </object>
    <object name="r12">
      <inherit name="editor_room" />
      <alias>room</alias>
      <description>There's a door on the east wall with a large heart on it. Connected to the door is a key card reader.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <beforeenter type="script">
        picture ("door_heart.png")
      </beforeenter>
      <exit alias="north" to="r02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r02, this)
        </look>
      </exit>
      <exit alias="west" to="r11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r11, this)
        </look>
      </exit>
      <exit alias="south" to="r22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r22, this)
        </look>
      </exit>
      <exit name="prototypeFinishExit" alias="east" to="i00">
        <inherit name="eastdirection" />
        <locked />
        <runscript type="boolean">false</runscript>
        <look type="script">
          look_room (i00, this)
        </look>
      </exit>
      <object name="cardReader">
        <inherit name="editor_object" />
        <alias>Key Card Reader</alias>
        <alt type="stringlist">
          <value>reader</value>
          <value>key card reader</value>
          <value>card reader</value>
        </alt>
        <takemsg>It's bolted to the wall. Also, why would you want it, anyway?</takemsg>
        <look type="script">
          picture ("card reader.png")
          msg ("The key card reader glistens with the sheen of new plastic. It looks like state-of-the-art technology.")
        </look>
      </object>
    </object>
    <object name="r20">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <beforeenter type="script">
        if (Contains (r20,box)) {
          picture ("crate vent.png")
        }
      </beforeenter>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r10, this)
        </look>
      </exit>
      <exit alias="east" to="r21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r21, this)
        </look>
      </exit>
      <exit name="vent20in" alias="into vent" to="vent20">
        <inherit name="indirection" />
        <locked />
        <runscript type="boolean">false</runscript>
        <lockmessage>The box is blocking the vent.</lockmessage>
        <look type="script">
          look_room (vent20, this)
        </look>
      </exit>
      <object name="box">
        <inherit name="editor_object" />
        <look>The large box appears to be very heavy. There doesn't seem to be a way to open it, but if you had to hazard a guess as to the nature of its contents, you'd probably go with...spiders? Very dense spiders.</look>
        <push type="script"><![CDATA[
          if (player.length >= 5) {
            msg ("You slam into the box with all of your weight, and manage to push it aside. You feel a sense of accomplishment somewhat disproportionate to the task of moving a box.")
            UnlockExit (vent20in)
            RemoveObject (box)
          }
          else {
            msg ("You feel exhausted, too weak to even push a box. You're so hungry you could eat a grue, and you don't even know what that is.")
          }
        ]]></push>
      </object>
    </object>
    <object name="r21">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r11, this)
        </look>
      </exit>
      <exit alias="east" to="r22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r22, this)
        </look>
      </exit>
      <exit alias="west" to="r20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r20, this)
        </look>
      </exit>
    </object>
    <object name="r22">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <beforeenter type="script">
        if (Contains (r22,deadRat)) {
          picture ("deadrat.png")
        }
      </beforeenter>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r12, this)
        </look>
      </exit>
      <exit alias="west" to="r21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r21, this)
        </look>
      </exit>
      <object name="deadRat">
        <inherit name="editor_object" />
        <alias>dead rat</alias>
        <alt type="stringlist">
          <value>rat</value>
          <value>dead rat</value>
        </alt>
        <take type="boolean">false</take>
        <look>A dead, but not-yet-rotting rat...so it probably isn't toxic.</look>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <eat type="script">
          grow_snake
          msg ("Delicious! You feel...invigorated. Virile. Voluptuous......you're starting to make yourself uncomfortable.")
          RemoveObject (deadRat)
        </eat>
      </object>
    </object>
    <object name="vent">
      <inherit name="editor_room" />
      <object name="vent00">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <description>The duct ahead of you looks like it curves back up, and it will probably end in one of the rooms above you.</description>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="south" to="vent10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent10, this)
          </look>
        </exit>
        <exit alias="out" to="r00">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r00, this)
          </look>
        </exit>
      </object>
      <object name="vent10">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <description>It's dark.</description>
        <onexit type="script">
        </onexit>
        <beforeenter type="script">
          if (Contains (vent10,keyCard)) {
            picture ("keycard_heart1.png")
          }
        </beforeenter>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="north" to="vent00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent00, this)
          </look>
        </exit>
        <exit alias="south" to="vent20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent20, this)
          </look>
        </exit>
        <object name="keyCard">
          <inherit name="editor_object" />
          <alias>Heart Key Card</alias>
          <take />
          <alt type="stringlist">
            <value>key</value>
            <value>keycard</value>
            <value>card</value>
            <value>key card</value>
            <value>heart key card</value>
            <value>heart key</value>
            <value>heart keycard</value>
          </alt>
          <takemsg>You pick up the key card.</takemsg>
          <use />
          <look type="script">
            picture ("keycard_heart1.png")
            msg ("The key card shines with a familiar glisten. It brings back memories of a key card reader you've seen in your travels, back in the old country: like Mama used to make. Or maybe that was elsewhere in this room. You're still filling the holes in your swiss-cheese memory.")
          </look>
          <selfuseon type="scriptdictionary">
            <item key="cardReader">
              msg ("Bleep, boop, doop! Now that you're done scat singing, you use the key card in the reader, and the door opens silently.")
              UnlockExit (prototypeFinishExit)
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="vent20">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <description>It slopes down on a curve. It probably goes under the floor and to the north.</description>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="north" to="vent10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent10, this)
          </look>
        </exit>
        <exit alias="out" to="r20">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r20, this)
          </look>
        </exit>
      </object>
    </object>
  </object>
  <command>
    <pattern>debug</pattern>
    <script>
      if (player.show_debug = 0) {
        player.show_debug = 1
        msg ("Debug now on. Cheater.")
      }
      else {
        player.show_debug = 0
        msg ("Debug now off.")
      }
    </script>
  </command>
  <command>
    <pattern>test_changerms</pattern>
    <script>
      change_rooms
    </script>
  </command>
  <command>
    <pattern>test_clearrms</pattern>
    <script>
      clear_rooms
    </script>
  </command>
  <command>
    <pattern>test_grow</pattern>
    <script>
      grow_snake
    </script>
  </command>
  <command>
    <pattern>test_list</pattern>
    <script>
      list_rooms
    </script>
  </command>
  <verb>
    <property>consume</property>
    <pattern>consume</pattern>
    <defaultexpression>"You can't consume " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>swallow</property>
    <pattern>swallow</pattern>
    <defaultexpression>"You can't swallow " + object.article + "."</defaultexpression>
  </verb>
  <object name="FirePuzzle">
    <inherit name="editor_room" />
    <object name="f00">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>You're at the far right side of the desk. </description>
      <enter type="script">
        change_rooms
      </enter>
      <onexit type="script">
      </onexit>
      <exit alias="south" to="f10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f10, this)
        </look>
      </exit>
      <object name="typewriter">
        <inherit name="editor_object" />
        <take type="boolean">false</take>
        <look>It's an old-fashioned typewriter. Someone must be using it to write an absolute masterpiece. Writing on computers is for talentless hacks, as we all know.</look>
        <takemsg>It weighs, like...a ton. No way, José!</takemsg>
      </object>
      <object name="thesis">
        <inherit name="editor_object" />
        <look>This thesis looks like it's the product of months—possibly years—of work, slavishly hammering away at the typewriter. That's a LOT of paper. It would be a shame if something were to happen to it!</look>
        <wasburned type="boolean">false</wasburned>
        <take type="script">
          if (player.length = 10) {
            msg ("You stretch out and clamp down on it. You've got it securely. You ought to do something with it right away; there's no time to talk!")
            AddToInventory (thesis)
          }
          else {
            msg ("You try to heft the stack of papers up, but you're too weak—if only you'd had a balanced breakfast like your parents taught you. You consider picking it up one page at a time, but by your count, there are...at LEAST two and a half bajillion pages there. Then again, you were never very good at math.")
          }
        </take>
        <burn type="script"><![CDATA[
          if (Got(thesis)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.tipped = true) {
                if (bunsen burner.flame = true) {
                  msg ("You drop the thesis into the fire, watching the tendrils lick at it until it becomes a tiny inferno. You try (in vain) to remember the last time you saw Flames overwhelm anything.The thesis fire begins to fill the room with smoke. “Thesis making it really hard to see/breathe!” you exclaim (you dork). How did you even speak that kind of punctuation? The fire alarm is going off, by the way.<br/><br/>You hear some shuffling and some meat monster noises in the room to the north. After awhile, the noises stop. Except for the fire alarm. That will never stop.")
                  set (thesis, "wasburned", true)
                  RemoveObject (thesis)
                }
                else {
                  msg ("You try to lift the thesis in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? Well, I suppose it is. But it's not even turned on!")
                }
              }
              else {
                msg ("You try to lift the thesis all the way up to the fire, but you just don't seem to have the reach that you used to. Should have done more Pilates, maybe. Regardless, you're going to want to think about this laterally. As in, bring the fire down to surface level.")
              }
            }
            else {
              msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.Spoiler: it doesn't work.")
            }
          }
          else {
            msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.Spoiler: it doesn't work.")
          }
        ]]></burn>
      </object>
      <exit alias="east" to="f01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f01, this)
        </look>
      </exit>
    </object>
    <object name="f01">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[To the south east is a stainless steel lab bench. To the west is a desk against the wall. The desk is so close you can nearly touch it! Nearly. You've gotta Truffle Shuffle a little farther over.<br/><br/>The north wall is a tinted glass window, through which you can barely make something out.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f02, this)
        </look>
      </exit>
      <exit alias="south" to="f11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f11, this)
        </look>
      </exit>
      <exit alias="west" to="f00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f00, this)
        </look>
      </exit>
      <object name="tinted window1">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f02">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[You pause to loiter on the far side of the lab bench. My, how far you've come! Circumnavigating a full room. You feel your insides swelling with pride. Oh, your mistake, it's just gas.<br/><br/>To the south is the lab bench. The north wall is a tinted glass window, through which you can barely make something out.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f03">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f03, this)
        </look>
      </exit>
      <exit alias="west" to="f01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f01, this)
        </look>
      </exit>
      <exit alias="south" to="f12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f12, this)
        </look>
      </exit>
      <object name="tinted window2">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f03">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[To the south is the lab bench. To the north is one side of a double door. The doors are swung shut. As you gaze towards the doors, a nostalgic phrase rushes into your mind: "Haste makes waste!"<br/><br/>Psh. Everyone knows that the egregrious over-production of goods rampant in our consumer-centric society is what makes waste. Thanks for nothing, brain.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f04">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f04, this)
        </look>
      </exit>
      <exit alias="west" to="f02">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f02, this)
        </look>
      </exit>
      <exit alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f13, this)
        </look>
      </exit>
      <exit alias="north" to="p21">
        <inherit name="northdirection" />
        <look type="script"><![CDATA[
          look_room (p21, this)
          if (thesis.wasburned = false) {
            msg ("You peer through the crack between the double doors. You can see movement. You hear stomping. Some sort of fleshy, smelly meat beasts are on the other side of these doors. They're producing some sort of ghastly meat noises by squeezing air through their meat. You know how when you slap or flap meat, it makes a noise? They're talking by flapping their meat at each other.<br/><br/>The scene makes you retch and feel faint. But there doesn't seem anywhere else to go except through these doors. Maybe there's a way to use the technology of these foul creatures against them, to make them vacate their room?")
          }
          else {
            msg ("You peer through the crack between the double doors. No more meat noises!")
          }
        ]]></look>
      </exit>
      <object name="double doors1">
        <inherit name="editor_object" />
        <inherit name="plural" />
        <takemsg>It's a door. What do you even do when you try to "take" a door? Did you expect to pull it off its hinges and cart it away with you? Did you really think that would be a solution to one of the puzzles in this game?</takemsg>
        <alias>double door</alias>
        <look type="script"><![CDATA[
          if (thesis.wasburned = false) {
            msg ("You peer through the crack between the double doors. You can see movement. You hear stomping. Some sort of fleshy, smelly meat beasts are on the other side of these doors. They're producing some sort of ghastly meat noises by squeezing air through their meat. You know how when you slap or flap meat, it makes a noise? They're talking by flapping their meat at each other.<br/><br/>The scene makes you retch and feel faint. But there doesn't seem anywhere else to go except through these doors. Maybe there's a way to use the technology of these foul creatures against them, to make them vacate their room?")
          }
          else {
            msg ("You peer through the crack between the double doors. No more meat noises!")
          }
        ]]></look>
      </object>
    </object>
    <object name="f04">
      <inherit name="editor_room" />
      <description><![CDATA[To the south east is the lab bench. To the north is one side of a double door. The doors are swung shut. As you gaze towards the doors, a nostalgic phrase rushes into your mind: "Look before you leap!"<br/><br/>Psh. There's nothing to jump off of here. Thanks for nothing, brain.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="f03">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f03, this)
        </look>
      </exit>
      <exit alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f14, this)
        </look>
      </exit>
      <exit alias="north" to="p22">
        <inherit name="northdirection" />
        <look type="script"><![CDATA[
          look_room (p22, this)
          if (thesis.wasburned = false) {
            msg ("You peer through the crack between the double doors. You can see movement. You hear stomping. Some sort of fleshy, smelly meat beasts are on the other side of these doors. They're producing some sort of ghastly meat noises by squeezing air through their meat. You know how when you slap or flap meat, it makes a noise? They're talking by flapping their meat at each other.<br/><br/>The scene makes you retch and feel faint. But there doesn't seem anywhere else to go except through these doors. Maybe there's a way to use the technology of these foul creatures against them, to make them vacate their room?")
          }
          else {
            msg ("You peer through the crack between the double doors. No more meat noises!")
          }
        ]]></look>
      </exit>
      <object name="double doors2">
        <inherit name="editor_object" />
        <inherit name="plural" />
        <takemsg>It's a door. What do you even do when you try to "take" a door? Did you expect to pull it off its hinges and cart it away with you? Did you really think that would be a solution to one of the puzzles in this game?</takemsg>
        <alias>double door</alias>
        <look type="script"><![CDATA[
          if (thesis.wasburned = false) {
            msg ("You peer through the crack between the double doors. You can see movement. You hear stomping. Some sort of fleshy, smelly meat beasts are on the other side of these doors. They're producing some sort of ghastly meat noises by squeezing air through their meat. You know how when you slap or flap meat, it makes a noise? They're talking by flapping their meat at each other.<br/><br/>The scene makes you retch and feel faint. But there doesn't seem anywhere else to go except through these doors. Maybe there's a way to use the technology of these foul creatures against them, to make them vacate their room?")
          }
          else {
            msg ("You peer through the crack between the double doors. No more meat noises!")
          }
        ]]></look>
      </object>
    </object>
    <object name="f10">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>You move over to take a look at the center of the desk. The space is generally bare, save for a small coffee pot that a lazy programmer has glued down so that you can't interact with it. You don't even feel like affirming the existence of such a mundane applliance by looking at it.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f00, this)
        </look>
      </exit>
      <exit alias="south" to="f20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f20, this)
        </look>
      </exit>
      <exit alias="east" to="f11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f11, this)
        </look>
      </exit>
      <object name="photo">
        <inherit name="editor_object" />
        <alias>photo of terrible beasts</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <take />
        <takemsg>Clumsily, you knock the frame over and shatter it—not unlike Lennie, unaware of your own strength, only desiring to...what? You haven't read “Of Mice and Men”? Come on. Well, you've got the photo now. It's all papery.</takemsg>
        <look type="script"><![CDATA[
          picture ("family_photo.png")
          msg ("Oh gawd, oh, ugh, just, you can't even...<br/>It's worse than you thought. The scaly-tentacled superflously-optacled meat beasts that inhabit this place are truly a terror. You wouldn't be surprised if, slightly after this image was taken, the matriarch of the brood mercilessly devoured the young.<br/>Ugh, it's unspeakable.")
        ]]></look>
        <burn type="script">
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames!Just kidding. You're not quite a dragon.")
            }
          }
          else {
            msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames! Just kidding. You're not quite a dragon.")
          }
        </burn>
      </object>
    </object>
    <object name="f11">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>To the east is a stainless steel lab bench. To the west is a desk against the wall. The desk is so close you can nearly touch it! Nearly. You've gotta shake it like a polaroid picture a little farther over.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f12, this)
        </look>
      </exit>
      <exit alias="north" to="f01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f01, this)
        </look>
      </exit>
      <exit alias="south" to="f21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f21, this)
        </look>
      </exit>
      <exit alias="west" to="f10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f10, this)
        </look>
      </exit>
    </object>
    <object name="f12">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>You approach the left side of the lab bench. Its surface is stainless steel and cold to the touch. You hate things that are cold to the touch. Then again, you also hate stains. You decide that this bench is okay after all.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f02, this)
        </look>
      </exit>
      <exit alias="south" to="f22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f22, this)
        </look>
      </exit>
      <exit alias="west" to="f11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f11, this)
        </look>
      </exit>
      <exit alias="east" to="f13">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f13, this)
        </look>
      </exit>
      <object name="crumpled paper">
        <inherit name="editor_object" />
        <look>There's a bit of crumpled-up paper; it has some illegible scribbling on it. You resist the urge to make a joke about doctors writing prescriptions.</look>
        <take />
        <takemsg>You pick it up. Crinkle crinkle.</takemsg>
        <burn type="script">
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
            }
          }
          else {
            msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
          }
        </burn>
      </object>
    </object>
    <object name="f13">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>You approach the right side of the lab bench. It looks like a good place to do science. You're not a scientist though, so you think the bench looks pretty frustratingly outside the realm of anything that you could find pleasure in.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f14">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f14, this)
        </look>
      </exit>
      <exit alias="west" to="f12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f12, this)
        </look>
      </exit>
      <exit alias="south" to="f23">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f23, this)
        </look>
      </exit>
      <exit alias="north" to="f03">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f03, this)
        </look>
      </exit>
      <object name="bunsen burner">
        <inherit name="editor_object" />
        <tipped type="boolean">false</tipped>
        <flame type="boolean">false</flame>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>hug</value>
          <value>eat</value>
          <value>attack</value>
          <value>inspect</value>
        </displayverbs>
        <takemsg>No, you shouldn't take it. It looks like its job is to do science, and this is clearly the science table. Only one thing gets to be taken from its home today, and that's you!</takemsg>
        <look type="script">
          msg ("There is a Bunsen burner sitting on the table. ")
          if (bunsen burner.flame = false) {
            msg ("There's no fire.")
            if (bunsen burner.tipped = true) {
              picture ("bunsen_tipped.png")
              msg ("It's been tipped onto its side.")
            }
            else {
              picture ("bunsen_off.png")
            }
          }
          else {
            msg ("A hot, blue flame is burning at its tip.")
            if (bunsen burner.tipped = true) {
              picture ("bunsen_tipped_on.png")
              msg ("It's been tipped onto its side.")
            }
            else {
              picture ("bunsen_on.png")
            }
          }
        </look>
        <hug type="script">
          if (bunsen burner.tipped = false) {
            msg ("It looks like it could use some TLC. You sidle up to embrace it, but bump into it in the process. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </hug>
        <eat type="script">
          if (bunsen burner.tipped = false) {
            msg ("You've always loved the taste of gas, metal, and fire. You think it might be a good idea to put this thing in your mouth. You try to fit it into your face, but you drop it and it falls over.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </eat>
        <attack type="script">
          if (bunsen burner.tipped = false) {
            msg ("What did you say? Are you talkin' to me? C'est à moi que tu parles?You coil up to give the Bunsen burner the ol' what-for. At the slightest tap, it falls onto its side. Guess you showed that thing.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </attack>
        <inspect type="script">
          if (bunsen burner.tipped = false) {
            msg ("You move in to take a look, but bump into it. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </inspect>
      </object>
      <object name="hose">
        <inherit name="editor_object" />
        <attached type="int">1</attached>
        <take type="script">
          AddToInventory (hose)
          msg ("You take that hose. It's yours.")
          set (hose, "attached", 0)
          set (bunsen burner, "flame", false)
        </take>
        <look type="script">
          if (hose.attached = 0) {
            msg ("It's a rubber hose with threaded ends that could be conceivably be connected from one thing to another...if you were REALLY crazy.")
          }
          if (hose.attached = 1) {
            msg ("It's a rubber hose. It's connecting the gas valve to the Bunsen burner.")
          }
          if (hose.attached = 2) {
            msg ("It's a rubber hose. One end is connected to the tap, and the other end is hanging off the counter.")
          }
        </look>
      </object>
      <object name="gas valve">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Turn on</value>
          <value>Turn off</value>
        </displayverbs>
        <switchonmsg>You turn the gas valve to the "on" position.</switchonmsg>
        <switchoffmsg>You turn the gas valve to the "off" position.</switchoffmsg>
        <alt type="stringlist">
          <value>valve</value>
          <value>gas</value>
        </alt>
        <look type="script">
          if (IsSwitchedOn(gas valve)) {
            msg ("It says it's on, which probably explains the hissing sound. Maybe.")
          }
          else {
            msg ("It's a valve...for gas...that fuels things...that burn gas. It's...pretty self-explanatory?")
          }
        </look>
        <onswitchon type="script">
          if (hose.attached = 1) {
            set (bunsen burner, "flame", true)
          }
        </onswitchon>
        <onswitchoff type="script">
          set (bunsen burner, "flame", false)
        </onswitchoff>
        <use type="script">
          if (this.switchedon) {
            msg (DynamicTemplate("AlreadySwitchedOn", this))
          }
          else {
            if (HasString(this, "switchonmsg")) {
              msg (this.switchonmsg)
            }
            else {
              msg (DynamicTemplate("SwitchedOn", this))
            }
            this.switchedon = true
          }
        </use>
      </object>
    </object>
    <object name="f14">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[A ceiling fan humms loudly above you. The on/off cord hangs low enough that you could pull it with ease. <br/><br/>On the east wall, there's a large sign.<br/><br/>To the west is a lab bench, and farther to the north are some double doors.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f04">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f04, this, this)
        </look>
      </exit>
      <exit alias="south" to="f24">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f24, this, this)
        </look>
      </exit>
      <exit alias="west" to="f13">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f13, this)
        </look>
      </exit>
      <object name="sign">
        <inherit name="editor_object" />
        <look><![CDATA[You saw the sign. And it opened up your eyes, you saw the sign.<br/>Life is demanding without understanding.<br/>You saw the sign, and it opened up your eyes you saw the sign.<br/>No one's gonna drag you up to get into the light where you belong.<br/>But where do you belong?<br/><br/>"Where do you belong?" you wonder.<br/><br/><br/>Where do you belong?]]></look>
        <takemsg>This sign is an ethereal artifact not from our mortal plane. You can't simply take it. No, the Ace of Base message is one that transcends time and space.</takemsg>
      </object>
      <object name="cord">
        <inherit name="editor_object" />
        <pull>Pulling the cord does absolutely nothing. Your disappointment is immeasurable.</pull>
        <use type="boolean">false</use>
        <look>The ceiling fan's cord hangs tantalizingly within your grasp.</look>
      </object>
      <object name="fan">
        <inherit name="editor_object" />
        <look>The ceiling fan humms loudly above you. It doesn't even seem to be moving much air. It's more of a loud humm device. You would not be surprised if its father was a lawn mower and its mother was a compostable Sun Chips bag.</look>
      </object>
    </object>
    <object name="f20">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>You sidle over to the left-most side of the desk that spans the whole west wall. </description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f10, this)
        </look>
      </exit>
      <exit alias="east" to="f21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f21, this)
        </look>
      </exit>
      <object name="cage">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <alias>small cage</alias>
        <scenery type="boolean">false</scenery>
        <look>A small wire cage sits on the desk. There's a small, brown, fluffy lump inside.</look>
        <alt type="stringlist">
          <value>cage</value>
        </alt>
        <isopen type="boolean">false</isopen>
        <transparent />
        <openmsg>You bump the latch and the door swings open.</openmsg>
        <closemsg>You nudge the door closed.</closemsg>
        <takemsg>It looks like it's bolted to the desk, so there's no way to take it.</takemsg>
        <object name="hamster">
          <inherit name="editor_object" />
          <alt type="stringlist">
            <value>Mr. Pippy</value>
          </alt>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <takemsg>The little scamp wriggles away and into a corner. Looks like Mr. Pippy is a strong, beautiful hamster who don't need nobody to take him nowhere.</takemsg>
          <look type="script"><![CDATA[
            picture ("mrpippy.png")
            msg ("The small, brown lump looks back at you... Aww, look at his wittle snubby wubby face! He's probably got a cute name like Mr. Pippy or Captain Butternut Pluffles or Terence Peterson the Nibble Nabster. Someone probably loves him very, very much. It would be a tragedy if something awful were to happen to him.<br/><br/>Is that a stomach rumbling you hear?")
          ]]></look>
          <eat type="script">
            if (cage.isopen) {
              grow_snake
              msg ("You're so hungry. You dart forward, pick up the hamster, and swallow it all in one motion. The adorable Pippy makes a tiny squeak, and then all is silent.")
              RemoveObject (hamster)
            }
            else {
              msg ("You try to grab the hamster, but the cage is latched closed!")
            }
          </eat>
        </object>
      </object>
    </object>
    <object name="f21">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description>To the north east is a stainless steel lab bench. To the west is a desk against the wall. The desk is so close you can nearly touch it! Nearly. You've gotta wiggle dat booty a little farther over.</description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f22, this)
        </look>
      </exit>
      <exit alias="west" to="f20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f20, this)
        </look>
      </exit>
      <exit alias="north" to="f11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f11, this)
        </look>
      </exit>
    </object>
    <object name="f22">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[As you move through the room you notice a poster on the wall.<br/><br/>To the north is a stainless steel lab bench. To the west is a desk against the wall.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f23">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f23, this)
        </look>
      </exit>
      <exit alias="west" to="f21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f21, this)
        </look>
      </exit>
      <exit alias="north" to="f12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f12, this)
        </look>
      </exit>
      <object name="poster">
        <inherit name="editor_object" />
        <look>The poster reads "A good breakfast starts with eggs." You find the sentiment so revolting, you nearly vomit.</look>
        <takemsg>It's terrible. You won't do it.</takemsg>
      </object>
    </object>
    <object name="f23">
      <inherit name="editor_room" />
      <alias>lab room</alias>
      <description><![CDATA[This room feels empty and cold. The tiles are a stark white. You were never much for interior decorating, but this just feels blasé.<br/><br/>To the north is a stainless steel lab bench. To the west is a desk against the wall.]]></description>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f24">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f24, this)
        </look>
      </exit>
      <exit alias="west" to="f22">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f22, this)
        </look>
      </exit>
      <exit alias="north" to="f13">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f13, this)
        </look>
      </exit>
    </object>
    <object name="f24">
      <inherit name="editor_room" />
      <description>The passage gives way to a sprawling room with a tiled floor. Off to the north, you see large, closed double doors. To the north west, a stainless steel lab table sits in the center of the room. Farther west, you can see another desk against the wall. You'll have to move closer to get a better look at any of the room's furnishings.</description>
      <alias>lab room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f14">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f14, this)
        </look>
      </exit>
      <exit alias="west" to="f23">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f23, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches00">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches00, this)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <property>hug</property>
    <pattern>hug</pattern>
    <defaultexpression>"You can't hug " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>attack</property>
    <pattern>attack</pattern>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>inspect</property>
    <pattern>inspect</pattern>
    <defaultexpression>"You can't inspect " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>burn</property>
    <pattern>burn</pattern>
    <defaultexpression>"You can't burn " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>put paper in fire; put paper in flame; set paper on fire</pattern>
    <script>
      if (Got(crumpled paper)) {
        if (game.pov.parent = f13) {
          if (box.flame = true) {
            msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
          }
          else {
            msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
    </script>
  </command>
  <command>
    <pattern>attach hose to bunsen burner; attach hose to gas; attach hose to gas valve; use hose on valve; use hose on gas; use hose on bunsen burner</pattern>
    <unresolved type="string"></unresolved>
    <script>
      if (Got(hose)) {
        if (game.pov.parent = f13) {
          msg ("You attach the hose to the Bunsen burner on one end and to the gas valve on the other..")
          RemoveObject (hose)
          set (hose, "attached", 1)
          if (IsSwitchedOn(gas valve)) {
            msg ("The bunsen burner's flame turns on.")
            set (bunsen burner, "flame", true)
          }
        }
        else {
          msg ("You're not near anything you can attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.You scrub.")
      }
    </script>
  </command>
  <command>
    <pattern>put photo in fire; put photo in flame; set photo on fire</pattern>
    <script>
      if (Got(photo)) {
        if (game.pov.parent = f13) {
          if (bunsen burner.flame = true) {
            msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
            destroy ("photo")
          }
          else {
            msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
      else {
        msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
      }
    </script>
  </command>
  <object name="PlantPuzzle">
    <inherit name="editor_room" />
    <object name="p01">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <description type="script">
        if (ListContains(ScopeVisible(), pile of dirt)) {
          if (pile of dirt.grown = false) {
            if (hose.attached = 2) {
              if (IsSwitchedOn(faucet)) {
                msg ("The water runs out of the end of the hose, and starts forming a puddle on the floor. As the puddle spreads across the room, the dirt begins to moisten. You soon hear a sharp crunching noise as something within the dirt springs to life. Suddenly, a huge plant coils out of the dirt, and grows upwards in a spiral, reaching towards the light streaming in through the open window.Wonderful what science can do these days, no?")
                MakeObjectVisible (plant)
              }
              else {
                msg ("The end of the hose is pointing toward the pile of dry dirt, but nothing is coming out. It's almost as if the hose on its own is not a source of water.")
              }
            }
            else {
              msg ("Directly below the open window is a pile of dry dirt, with the remains of its smashed pot scattered around.")
            }
          }
          else {
            msg ("It's a pile of dirt, out of which is sprouting a magnificent vine that snakes up  toward the open window. You feel a growing sense of deep symbolism.")
          }
        }
        else {
        }
        msg ("To the east are a bunch of shelves with knick knacks and plants on them. To the west is a big, solid door that's firmly closed.")
      </description>
      <object name="window">
        <inherit name="editor_object" />
        <alias>open window</alias>
        <alt type="stringlist">
          <value>window</value>
        </alt>
        <look>High up near the ceiling, there's an open window. You can feel and smell fresh air through it. This is what must have cleared out the smoke! Smells like freedom! Too bad you were always the shortest kid in class, there's no way you can reach it from down here.</look>
        <takemsg>Um. It's a window. Technically it's an empty space. This is real life, not some cartoon where you can take a window off a wall with you, or some silly game where you can create orange and blue windows wherever you want.</takemsg>
      </object>
      <object name="pile of dirt">
        <inherit name="editor_object" />
        <visible type="boolean">false</visible>
        <alt type="stringlist">
          <value>bean plant</value>
          <value>dirt</value>
        </alt>
        <grown type="boolean">false</grown>
        <takemsg>You put some of the dirt in your pockets. Or at least you would, if you had pockets. Come on, man. It's dirt.</takemsg>
        <look type="script">
          if (pile of dirt.grown = false) {
            if (hose.attached = 2) {
              if (IsSwitchedOn(faucet)) {
                msg ("The water runs out of the end of the hose, and starts forming a puddle on the floor. As the puddle spreads across the room, the dirt begins to moisten. You soon hear a sharp crunching noise as something within the dirt springs to life. Suddenly, a huge plant coils out of the dirt, and grows upwards in a spiral, reaching towards the light streaming in through the open window.Wonderful what science can do these days, no?")
                MakeObjectVisible (plant)
              }
              else {
                msg ("The end of the hose is pointing toward the pile of dry dirt, but nothing is coming out. It's almost as if the hose itself is not a source of water.")
              }
            }
            else {
              msg ("Directly below the open window is a pile of dry dirt, with the remains of its smashed pot scattered around.")
            }
          }
          else {
            msg ("It's a pile of dirt, out of which is sprouting a magnificent vine that snakes up  toward the open window. You feel a growing sense of deep symbolism.")
          }
        </look>
      </object>
      <object name="plant">
        <inherit name="editor_object" />
        <alias>tall bean plant</alias>
        <alt type="stringlist">
          <value>plant</value>
          <value>vine</value>
          <value>beanstalk</value>
        </alt>
        <visible type="boolean">false</visible>
        <takemsg>You can't take this majestic creature. It's just been given new life in its sprawling pile of dirt. You wish you could be happy living in a pile of dirt.</takemsg>
        <look>Like little Johnny Appleseed, you have created this magnificent biological manifestation from the sweat of your brow. Like Jack the Giant Slayer, you have done it entirely accidentally, by halphazardly throwing some seeds and some dirt and some water together. You swell with pride.</look>
        <climb type="script">
          game_win
        </climb>
        <climbup type="script">
          game_win
        </climbup>
      </object>
      <exit alias="south" to="p11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p11, this)
        </look>
      </exit>
      <exit alias="east" to="p02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p02, this)
        </look>
      </exit>
      <object name="door">
        <inherit name="editor_object" />
        <look>There's a door to the west that the monsters left through. It's shut tight, though. There's no way to open it. Trust me, I programmed this part of the game. There's no way.</look>
        <takemsg>It's a door. What do you even do when you try to "take" a door? Did you expect to pull it off its hinges and cart it away with you? Did you really think that would be a solution to one of the puzzles in this game?</takemsg>
      </object>
    </object>
    <object name="p02">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <description><![CDATA[There's a big ol' shelf in the corner of this room. You climb up on top of it. You think you might be able to see your house from here! Oh, no... no, you can't. You're indoors.<br/><br/>If you look hard enough, you think you can see the end of the game from here, though.]]></description>
      <enter type="script">
        change_rooms
      </enter>
      <object name="bean plant">
        <inherit name="editor_object" />
        <look>Its label says "Superior-growth, military-strength developmental prototype beanstalk". It's in a clay pot (which doesn't look military-strength) on the top of this shelf.There doesn't appear to be anything growing in the pot, and the soil is dry.</look>
        <alt type="stringlist">
          <value>pot</value>
          <value>clay pot</value>
          <value>bean plant</value>
        </alt>
        <alias>pot of dirt</alias>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Push</value>
          <value>Throw</value>
        </displayverbs>
        <takemsg>You don't want that pot. Just say no.</takemsg>
        <throw type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below the window to the west.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </throw>
        <push type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below the window to the west.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </push>
      </object>
      <exit alias="west" to="p01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p01, this)
        </look>
      </exit>
      <exit alias="south" to="p12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p12, this)
        </look>
      </exit>
    </object>
    <object name="p10">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <description>In this corner of the room, wedged between the wall and the shelves of plants, is a sink. The sound of running water is almost as soothing as the noise made by a japanese shishi-odoshi. Well, not really. You just really wanted a chance to say the word "shishi-odoshi."</description>
      <enter type="script">
        change_rooms
      </enter>
      <object name="sink">
        <inherit name="editor_object" />
        <look><![CDATA[The sink is slightly filled with water, but is draining steadily. You consider three options for getting water out of this sink:<br/>1) Plug up the drain<br/>2) Carry the water in a vessel<br/>3) Redirect the water coming from the tap.<br/>You focus all of your psychic powers into trying to determine the answer. It's foggy...  you see... that only one option will work... and its number rhymes with "shmee"...]]></look>
      </object>
      <object name="faucet">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <alt type="stringlist">
          <value>tap</value>
          <value>running faucet</value>
        </alt>
        <switchonmsg>The handle sticks a little, but you manage to turn the faucet on, and water is rushing out. Better hope this place is rent-controlled.</switchonmsg>
        <switchoffmsg>You shut the water off. Only YOU can protect the environment!</switchoffmsg>
        <switchedon />
        <look type="script">
          if (IsSwitchedOn(faucet)) {
            msg ("It's a faucet. Water is pouring out. The water is draining down into the sink below, but maybe there's a way that you can direct it? You think you may have seen something a little earlier that you could use to direct the flow of fluids.")
          }
          else {
            msg ("It's a faucet. It's off.")
          }
          if (hose.attached = 2) {
            msg ("There is a rubber hose attached to the nozzle. ")
          }
        </look>
      </object>
      <exit alias="east" to="p11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p11, this)
        </look>
      </exit>
      <exit alias="south" to="p20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p20, this)
        </look>
      </exit>
    </object>
    <object name="p11">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <description type="script">
        if (hose.attached = 2) {
          msg ("There's a pool of water on the floor. Demonstrating the remarkable relationship of cause and effect, attaching the hose to the faucet has caused water to pool on the floor. Splish splash. ")
        }
        else {
          msg ("You're in the center of the room, and there is nothing remarkable here. You contemplate spinning on your heels round and round with your arms outstretched, pretending to be a tornado knocking all the things off the shelves. But for some reason, before you can contemplate too long, you are seized with the feeling that that's a terrible idea. ")
        }
      </description>
      <exit alias="north" to="p01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p01, this)
        </look>
      </exit>
      <exit alias="east" to="p12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p12, this)
        </look>
      </exit>
      <exit alias="west" to="p10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p10, this)
        </look>
      </exit>
      <exit alias="south" to="p21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p21, this)
        </look>
      </exit>
    </object>
    <object name="p12">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <description>There are some more shelves along this wall, covered mostly in jars of plants. You thrust your face into a shrubbery. It makes you feel like you're home again.</description>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="p02">
        <inherit name="northdirection" />
        <lookonly type="boolean">false</lookonly>
        <look type="script">
          look_room (p02, this)
        </look>
      </exit>
      <exit alias="south" to="p22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p22, this)
        </look>
      </exit>
      <exit alias="west" to="p11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p11, this)
        </look>
      </exit>
    </object>
    <object name="p20">
      <inherit name="editor_room" />
      <alias>greenhouse room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <description type="script">
        picture ("meatplant.png")
        msg ("There's a shelf against the wall here, on which sits a number of plants in pots and containers. ")
      </description>
      <object name="meat plant">
        <inherit name="editor_object" />
        <alias>meaty plant</alias>
        <look><![CDATA[The label on one of the plants says "Experimental DNA hybrid for Synthetic Meat Production." Its leaves look like tasty little steaks. Has science gone too far?!?!<br/><br/><br/>"No," you think. "Steaks are friggin delicious."]]></look>
        <eat type="script">
          msg ("You swallow that meat plant whole!That's not a sentence you read every day.")
          grow_snake
          RemoveObject (meat plant)
        </eat>
      </object>
      <exit alias="north" to="p10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11, this)
        </look>
      </exit>
      <exit alias="east" to="p21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p21, this)
        </look>
      </exit>
    </object>
    <object name="p21">
      <inherit name="editor_room" />
      <description><![CDATA[This room has grey walls, a grey floor, and a grey ceiling. There is literally nothing in this room. Were you to spend a weekend here, it would not be a weekend well spent.<br/><br/>Oh wait, it's just smoky from the fire you made. Once the smoke clears, you can see a bit more.<br/><br/>You're in a small room. It feels humid, like a green house. Shelves line the north east wall. To the west are more shelves and a sink. Just ahead of you, you can see an open window with bright light shining in. The fresh air is the most pleasant thing you've smelled all day!]]></description>
      <alias>greenhouse room</alias>
      <has_humans />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit alias="south" to="f03">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f03, this)
        </look>
      </exit>
      <exit alias="north" to="p11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11, this)
        </look>
      </exit>
      <exit alias="west" to="p20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p20, this)
        </look>
      </exit>
      <exit alias="east" to="p22">
        <inherit name="eastdirection" />
        <runscript />
        <look type="script">
          look_room (p22, this)
        </look>
      </exit>
    </object>
    <object name="p22">
      <inherit name="editor_room" />
      <description><![CDATA[This room has grey walls, a grey floor, and a grey ceiling. There is literally nothing in this room. Were you to spend a weekend here, it would not be a weekend well spent.<br/><br/>Oh wait, it's just smoky from the fire you made. Once the smoke clears, you can see a bit more.<br/><br/>You're in a small room. It feels humid, like a green house. Shelves line the north east wall. To the west are more shelves and a sink. Just ahead of you, you can see an open window with bright light shining in. The fresh air is the most pleasant thing you've smelled all day!]]></description>
      <alias>greenhouse room</alias>
      <has_humans />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit alias="north" to="p12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p12, this)
        </look>
      </exit>
      <exit alias="south" to="f04">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f04, this)
        </look>
      </exit>
      <exit alias="west" to="p21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p21, this)
        </look>
      </exit>
    </object>
  </object>
  <command>
    <pattern>attach hose to faucet; attach hose to tap; put hose on faucet; put hose on tap; use hose on faucet; use hose on tap</pattern>
    <script>
      if (Got(hose)) {
        if (game.pov.parent = p10) {
          msg ("You attach the hose to the running faucet. The other end hangs off the end of the sink.")
          RemoveObject (hose)
          set (hose, "attached", 2)
        }
        else {
          msg ("You're not near anything to attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.You scrub.")
      }
    </script>
  </command>
  <verb>
    <property>pushoffshelf</property>
    <pattern>push off shelf</pattern>
    <defaultexpression>"You can't push off shelf " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>climbup</property>
    <pattern>climb up</pattern>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>push pot off shelf; push pot of dirt off shelf; push plant off shelf</pattern>
    <script>
      if (game.pov.parent = p02) {
        if (ListContains(ScopeVisible(), bean plant)) {
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            RemoveObject (bean plant)
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        }
      }
    </script>
  </command>
  <object name="TwoRoomPuzzle">
    <inherit name="editor_room" />
    <object name="StartRoom">
      <inherit name="editor_room" />
      <object name="tr_start00">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_start01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start01, this)
          </look>
        </exit>
        <exit alias="south" to="tr_start10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start10, this)
          </look>
        </exit>
      </object>
      <object name="tr_start01">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start00, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start02">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start02, this)
          </look>
        </exit>
        <exit alias="south" to="tr_start11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start11, this)
          </look>
        </exit>
      </object>
      <object name="tr_start02">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <firstenter type="script">
          msg ("This room is crazy large, and there's nothing in it. Zip. Squat. You've haven't space so underutilized since the shuttle program got shut down. Well, maybe not that bad, there are a few things at the far end.")
        </firstenter>
        <exit alias="west" to="tr_start01">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start01, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start03">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start03, this)
          </look>
        </exit>
        <exit alias="south" to="tr_start12">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start12, this)
          </look>
        </exit>
        <exit alias="north" to="i11">
          <inherit name="northdirection" />
          <lookonly type="boolean">false</lookonly>
          <look type="script">
            look_room (i11, this)
          </look>
        </exit>
      </object>
      <object name="tr_start03">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start02">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start02, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start04">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start04, this)
          </look>
        </exit>
        <exit alias="south" to="tr_start13">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start13, this)
          </look>
        </exit>
      </object>
      <object name="tr_start04">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start03">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start03, this)
          </look>
        </exit>
        <exit alias="south" to="tr_start14">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start14, this)
          </look>
        </exit>
      </object>
      <object name="tr_start10">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_start11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start11, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start00, this)
          </look>
        </exit>
        <object name="keyCard1">
          <inherit name="editor_object" />
          <alias>Key Card</alias>
          <take />
          <alt type="stringlist">
            <value>key</value>
            <value>keycard</value>
            <value>card</value>
            <value>key card</value>
          </alt>
          <takemsg>You pick up the key card.</takemsg>
          <use />
          <look type="script">
            msg ("The key card shines with a familiar glisten. It brings back memories of...memories. You're in some sort of quantum loop, obviously. ARE YOU TRIPPING OUT YET?!?")
          </look>
          <selfuseon type="scriptdictionary">
            <item key="cardReader1">
              msg ("The card reader signals its approval with a noise inimitable through onomatopoeia.")
              UnlockExit (tr_star11_to_tr_small01)
            </item>
            <item key="cardReader2">
              msg ("The reader accepts the card, sucking it in; out of the slot is unleashed a flood of wailing, tormented screams: the sound of thousands of souls who have died in previous save files, trying in vain to escape the eternal prison that is this puzzle room, never to find solace.No pressure.")
              UnlockExit (tr_start13_to_tr_large00)
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="tr_start11">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start10, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start12">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start12, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start01, this)
          </look>
        </exit>
        <exit name="tr_star11_to_tr_small01" alias="south" to="tr_small01">
          <inherit name="southdirection" />
          <locked />
          <look type="script">
            look_room (tr_small01, this)
          </look>
        </exit>
        <object name="cardReader1">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's...glued to the wall. But, like, a really strong glue. Never you mind.</takemsg>
          <look>The key card reader glistens with the sheen of new—no, wait. Ew, gross, what IS that? Never mind. The device appears to be operational.</look>
        </object>
      </object>
      <object name="tr_start12">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start11">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start11, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start13">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start13, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start02">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start02, this)
          </look>
        </exit>
      </object>
      <object name="tr_start13">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start12">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start12, this)
          </look>
        </exit>
        <exit alias="east" to="tr_start14">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start14, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start03">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start03, this)
          </look>
        </exit>
        <exit name="tr_start13_to_tr_large00" alias="south" to="tr_large00">
          <inherit name="southdirection" />
          <locked />
          <look type="script">
            look_room (tr_large00, this)
          </look>
        </exit>
        <object name="cardReader2">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's cemented to the wall, and you forgot your jackhammer. Nice going.</takemsg>
          <look>The key card reader glistens with the sheen of new metal (not to be confused with nu metal, which is a pretentious way of saying "alternative" metal, and is a garbage genre anyhow).</look>
        </object>
      </object>
      <object name="tr_start14">
        <inherit name="editor_room" />
        <alias>large, empty room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start13">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start13, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start04">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start04, this)
          </look>
        </exit>
        <object name="scale">
          <inherit name="editor_object" />
          <drop type="boolean">false</drop>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <lie type="script"><![CDATA[
            if (player.length < 7) {
              msg ("The scale beeps, but nothing else happens. Clearly, you have not satisfied the almighty guardian device.")
            }
            else {
              UnlockExit (tr_start14_to_t_torches00)
              msg ("The scale beeps. Just as you give up hope and go to look for another dirty rat to eat, you hear the clicking noise of a door unlocking.")
            }
          ]]></lie>
        </object>
        <exit name="tr_start14_to_t_torches00" alias="east" to="t_torches00">
          <inherit name="eastdirection" />
          <locked />
        </exit>
      </object>
    </object>
    <object name="SmallRoom">
      <inherit name="editor_object" />
      <object name="tr_small00">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small01, this)
          </look>
        </exit>
        <exit alias="south" to="tr_small10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small10, this)
          </look>
        </exit>
      </object>
      <object name="tr_small01">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <firstenter type="script">
          msg ("This room has a warm draft. You hate warm drafts.")
        </firstenter>
        <exit alias="west" to="tr_small00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small00, this)
          </look>
        </exit>
        <exit alias="south" to="tr_small11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small11, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start11, this)
          </look>
        </exit>
        <object name="deadRat1">
          <inherit name="editor_object" />
          <alias>dead rat</alias>
          <alt type="stringlist">
            <value>rat</value>
            <value>dead rat</value>
          </alt>
          <take type="boolean">false</take>
          <look>A dead, but perfectly edible rat. Only a fool would pass up such a rat.</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            grow_snake
            msg ("Packing on the pounds, there, aren't you? Look, someone had to tell you. Really, you should be thankful. Don't get so damn emotional!")
            RemoveObject (deadRat1)
          </eat>
        </object>
      </object>
      <object name="tr_small10">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small11, this)
          </look>
        </exit>
        <exit alias="north" to="tr_small00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small00, this)
          </look>
        </exit>
        <exit alias="south" to="tr_small20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small20, this)
          </look>
        </exit>
      </object>
      <object name="tr_small11">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_small10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small10, this)
          </look>
        </exit>
        <exit alias="north" to="tr_small01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small01, this)
          </look>
        </exit>
        <exit alias="south" to="tr_small21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small21, this)
          </look>
        </exit>
      </object>
      <object name="tr_small20">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small21, this)
          </look>
        </exit>
        <exit alias="north" to="tr_small10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small10, this)
          </look>
        </exit>
      </object>
      <object name="tr_small21">
        <inherit name="editor_room" />
        <alias>storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_small20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small20, this)
          </look>
        </exit>
        <exit alias="north" to="tr_small11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small11, this)
          </look>
        </exit>
      </object>
    </object>
    <object name="LargeRoom">
      <inherit name="editor_room" />
      <object name="tr_large00">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <firstenter type="script">
          msg ("This room has a cold draft. You hate cold drafts.")
        </firstenter>
        <exit alias="east" to="tr_large01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large01, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large10, this)
          </look>
        </exit>
        <exit alias="north" to="tr_start13">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start13, this)
          </look>
        </exit>
      </object>
      <object name="tr_large01">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large00, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large11, this)
          </look>
        </exit>
      </object>
      <object name="tr_large10">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large11, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large00, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large20, this)
          </look>
        </exit>
        <object name="deadRat2">
          <inherit name="editor_object" />
          <alias>dead rat</alias>
          <alt type="stringlist">
            <value>rat</value>
            <value>dead rat</value>
          </alt>
          <take type="boolean">false</take>
          <look>A less-dead, but equally edible rat. You're not going to let it suffer, are you?</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            grow_snake
            msg ("The rat goes straight to your ample midsection as you put it out of its misery....or maybe that rat was just getting better, and you've swooped in and taken its life before it could even tell its family it loved them. Looks like you'll just have to spend the rest of your days wondering: what if?")
            RemoveObject (deadRat2)
          </eat>
        </object>
      </object>
      <object name="tr_large11">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large10, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large01, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large21, this)
          </look>
        </exit>
      </object>
      <object name="tr_large20">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large21, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large10, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large30">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large30, this)
          </look>
        </exit>
      </object>
      <object name="tr_large21">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large20, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large11, this)
          </look>
        </exit>
        <exit alias="south" to="tr_large31">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large31, this)
          </look>
        </exit>
      </object>
      <object name="tr_large30">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large31">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large31, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large20">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large20, this)
          </look>
        </exit>
      </object>
      <object name="tr_large31">
        <inherit name="editor_room" />
        <alias>large cold-storage room</alias>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large30">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large30, this)
          </look>
        </exit>
        <exit alias="north" to="tr_large21">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large21, this)
          </look>
        </exit>
      </object>
    </object>
  </object>
  <object name="TorchPuzzle">
    <inherit name="editor_room" />
    <object name="t_torches00">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        msg ("This space is....huge. Yet really dark. Palpably dark. You could almost eat the darkness like cotton candy.")
      </firstenter>
      <exit alias="east" to="t_torches01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches01, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches10, this)
        </look>
      </exit>
      <exit alias="west" to="tr_start14">
        <inherit name="westdirection" />
        <locked type="boolean">false</locked>
      </exit>
      <object name="light3_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
      <object name="photoreceptor0">
        <inherit name="editor_object" />
        <inherit name="photoreceptor_base" />
        <attr name="light_req" type="int">6</attr>
        <alias>door control</alias>
      </object>
      <exit name="t_torches00_to_f24" alias="north" to="f24">
        <inherit name="northdirection" />
        <locked />
        <runscript />
        <attr name="grid_length" type="int">7</attr>
        <look type="script">
          look_room (f24, this)
        </look>
        <script type="script"><![CDATA[
          if (player.length < 9) {
            msg ("The door rattles as you push it, but it's still latched. Oh, there's a handle! It's too bad you can't reach it. Maybe you can find a way to get up there...")
          }
          else {
            MoveObject (player, f24)
          }
        ]]></script>
      </exit>
    </object>
    <object name="t_torches01">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches00, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches02, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches11, this)
        </look>
      </exit>
    </object>
    <object name="t_torches02">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches01, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches12, this)
        </look>
      </exit>
    </object>
    <object name="t_torches10">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches11, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches00, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches20, this)
        </look>
      </exit>
    </object>
    <object name="t_torches11">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches10, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches12, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches01, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches21, this)
        </look>
      </exit>
      <object name="light3_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches12">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches11, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches02, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches22, this)
        </look>
      </exit>
      <object name="light6_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">6</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches20">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches21, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches10, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches30">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches30, this)
        </look>
      </exit>
      <object name="light5_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">5</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches21">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches20, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches22, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches11, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches31">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches31, this)
        </look>
      </exit>
    </object>
    <object name="t_torches22">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches21, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches12, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches32">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches32, this)
        </look>
      </exit>
    </object>
    <object name="t_torches30">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches31">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches31, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches20">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches20, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches40">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches40, this)
        </look>
      </exit>
    </object>
    <object name="t_torches31">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches30">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches30, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches32">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches32, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches21">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches21, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches41">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches41, this)
        </look>
      </exit>
      <object name="light7_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">7</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches32">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches31">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches31, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches22">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches22, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches42">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches42, this)
        </look>
      </exit>
      <object name="light2_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches40">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches41">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches41, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches30">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches30, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches50">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches50, this)
        </look>
      </exit>
      <object name="light9_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">9</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches41">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches40">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches40, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches42">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches42, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches31">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches31, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches51">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches51, this)
        </look>
      </exit>
    </object>
    <object name="t_torches42">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches41">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches41, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches32">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches32, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches52">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches52, this)
        </look>
      </exit>
    </object>
    <object name="t_torches50">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches51">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches51, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches40">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches40, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches60">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches60, this)
        </look>
      </exit>
    </object>
    <object name="t_torches51">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches50">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches50, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches52">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches52, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches41">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches41, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches61">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches61, this)
        </look>
      </exit>
      <object name="light11_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">11</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches52">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches51">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches51, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches42">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches42, this)
        </look>
      </exit>
      <exit alias="south" to="t_torches62">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches62, this)
        </look>
      </exit>
      <object name="light2_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches60">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches61">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches61, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches50">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches50, this)
        </look>
      </exit>
      <object name="light13_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">13</attr>
        <lightsource type="boolean">false</lightsource>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Shake</value>
        </displayverbs>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches61">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches60">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches60, this)
        </look>
      </exit>
      <exit alias="east" to="t_torches62">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches62, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches51">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches51, this)
        </look>
      </exit>
    </object>
    <object name="t_torches62">
      <inherit name="editor_room" />
      <alias>oppresively dark room</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches61">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches61, this)
        </look>
      </exit>
      <exit alias="north" to="t_torches52">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches52, this)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <pattern>shake</pattern>
    <property>shake</property>
    <defaulttext>"You can't shake " + object.article + "."</defaulttext>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <pattern>power on</pattern>
    <property>poweron</property>
    <defaultexpression>"You can't power on " + object.article + "."</defaultexpression>
  </verb>
  <object name="IkeaShelfPuzzle">
    <inherit name="editor_object" />
    <object name="i00">
      <inherit name="editor_room" />
      <alias>study</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="i01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (i01, this)
        </look>
      </exit>
      <exit alias="south" to="i10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i10, this)
        </look>
      </exit>
      <exit alias="west" to="r12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r12, this)
        </look>
      </exit>
    </object>
    <object name="i01">
      <inherit name="editor_room" />
      <alias>study</alias>
      <description><![CDATA[This side of the room is ornately detailed. Thick red carpets line the floor, and gilded bookcases stand floor to ceiling on each side. Velvet banners hang from the walls, brandishing the seals of wealthy european houses. Architectural cues guide your eyes to the meeting of the two walls, the center of which houses an enormous fireplace. Atop the fireplace sits a handpainted oil painting, that shimmers from the glow of the fire.<br/>]]></description>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="i00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i00, this)
        </look>
      </exit>
      <exit alias="south" to="i11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i11, this)
        </look>
      </exit>
      <object name="painting">
        <inherit name="editor_object" />
        <alt type="stringlist">
          <value>painting</value>
        </alt>
        <look>The painting is a portrait of Troy Pavlek. He appears to be the biggest thing in the world right now.</look>
        <takemsg>You think about stealing the painting, but you can't shake the thought "What would Troy do?"</takemsg>
      </object>
    </object>
    <object name="i10">
      <inherit name="editor_room" />
      <alias>study</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="i11">
        <inherit name="eastdirection" />
        <runscript />
        <look type="script">
          look_room (i11, this)
        </look>
        <script type="script">
          if (GetBoolean(ikeaShelf, "on")) {
            msg ("You're going to have to climb off of the shelf first.")
          }
          else {
            MoveObject (player, i11)
          }
        </script>
      </exit>
      <exit alias="north" to="i00">
        <inherit name="northdirection" />
        <runscript />
        <look type="script">
          look_room (i00, this)
        </look>
        <script type="script">
          if (GetBoolean(ikeaShelf, "on")) {
            msg ("You're going to have to climb off of the shelf first.")
          }
          else {
            MoveObject (player, i00)
          }
        </script>
      </exit>
      <object name="ikeaShelf">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <alias>Ikea shelf</alias>
        <isopen type="boolean">false</isopen>
        <hidechildren type="boolean">false</hidechildren>
        <open type="boolean">false</open>
        <close type="boolean">false</close>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Climb</value>
        </displayverbs>
        <drag type="script">
          if (GetBoolean(ikeaShelf, "broken")) {
            msg ("You snatch the shelf and begin to drag it.")
            AddToInventory (this)
          }
          else {
            msg ("The shelf is too heavy to drag in its current state.")
          }
        </drag>
        <look type="script"><![CDATA[
          if (player.length < 7) {
            msg ("It's an Ikea shelf. Solid, modern, and likely to collapse if looked at in the wrong way. It surely couldn't hold your weight, especially after you shamelessly gorged on rats.")
          }
          else {
            msg ("You look at the shelf sternly. It is intimidated by your strength and collapses immediately. Several wrapped food items fall out of one of the drawers.")
            MoveObject (snack0, this.parent)
            MoveObject (snack1, this.parent)
            RemoveObject (this)
            SetObjectFlagOn (ikeaShelf, "broken")
          }
        ]]></look>
        <climbup type="script"><![CDATA[
          if (player.length < 7) {
            msg ("You climb on the shelf. It is rickety, but it just barely manages to hold your weight.")
            SetObjectFlagOn (ikeaShelf, "on")
          }
          else if (GetBoolean(ikeaShelf, "broken")) {
            msg ("The shelf is already broken. You can't climb it.")
          }
          else {
            msg ("You look at " + this.alias + " with the intent to climb it. It is intimidated by your size and collapses immediately. Several wrapped food items fall out of one of the drawers.")
            MoveObject (snack0, this.parent)
            MoveObject (snack1, this.parent)
            RemoveObject (this)
            SetObjectFlagOn (ikeaShelf, "broken")
          }
        ]]></climbup>
        <climbdown type="script">
          msg ("You climb down off the shelf.")
          SetObjectFlagOff (ikeaShelf, "on")
        </climbdown>
        <object name="snack0">
          <inherit name="editor_object" />
          <alias>brightly coloured candy</alias>
          <alt type="stringlist">
            <value>snack</value>
            <value>candy</value>
          </alt>
          <take type="boolean">false</take>
          <look>Ooh! Candy!</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <visible />
          <eat type="script">
            grow_snake
            msg ("It tastes so good, but the shame burns so badly. Not that you care. You're just taking up ever more space as you go.")
            RemoveObject (this)
          </eat>
        </object>
        <object name="snack1">
          <inherit name="editor_object" />
          <alias>dull boring candy</alias>
          <alt type="stringlist">
            <value>snack</value>
            <value>candy</value>
          </alt>
          <take type="boolean">false</take>
          <look>Ooh! Candy!</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <visible />
          <eat type="script">
            grow_snake
            msg ("You down it all like nothing. Did your parents teach you no manners? You are grown now, but only in size.")
            RemoveObject (this)
          </eat>
        </object>
      </object>
    </object>
    <object name="i11">
      <inherit name="editor_room" />
      <alias>study</alias>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="i10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i10, this)
        </look>
      </exit>
      <exit alias="north" to="i01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (i01, this)
        </look>
      </exit>
      <exit alias="south" to="tr_start02">
        <inherit name="southdirection" />
        <look type="script">
          look_room (tr_start02, this)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <property>drag</property>
    <pattern>drag</pattern>
    <defaultexpression>"You can't drag " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>climbdown</property>
    <pattern>climb down</pattern>
    <defaultexpression>"You can't climb down " + object.article + "."</defaultexpression>
  </verb>
  <type name="not_snake_room" />
  <type name="shake_light_base">
    <attr name="max_dur" type="int">0</attr>
    <attr name="remaining_dur" type="int">0</attr>
    <alias>flashlight</alias>
    <target type="object">player</target>
    <shake type="script">
      msg ("You shake the flashlight. " + this.max_dur + " little lights blink on the side. What could they mean...?")
      in_list = false
      foreach (light, this.target.lights_list) {
        if (light = this) {
          in_list = true
        }
      }
      if (not in_list) {
        list add (this.target.lights_list, this)
      }
      this.remaining_dur = this.max_dur
    </shake>
  </type>
  <type name="photoreceptor_base">
    <attr name="light_req" type="int">0</attr>
    <initialized type="boolean">false</initialized>
    <attr name="powered_on" type="boolean">false</attr>
    <poweron type="script"><![CDATA[
      curr_light = 0
      foreach (light, this.lights_list) {
        if (light.remaining_dur > 0) {
          curr_light = curr_light + 1
        }
      }
      msg ("It looks like this unit is powerd by light. Reading the panel, it looks like it requires " + this.light_req + " light sources to fully power on,")
      if (curr_light < this.light_req) {
        msg ("but there are " + curr_light + " lights on in the room.")
      }
      else {
        this.powered_on = true
        msg ("and there is enought light! It powers on!")
      }
    ]]></poweron>
    <use type="script">
      if (this.powered_on) {
        msg ("The door control indicates the door is unlocked.")
        UnlockExit (t_torches00_to_f24)
      }
      else {
        msg ("This unit appears to need to be powered on before it can be used.")
      }
    </use>
  </type>
  <function name="change_rooms">
    // This function should be called at all transitions between rooms.
    // It handles the snake length as well as any other events that need
    // to be triggered at after each room transition
    change_rooms_snake
    change_rooms_shake_lights (photoreceptor0)
  </function>
  <function name="look_room" parameters="lookRoom, exit"><![CDATA[
    // This function is called when we look into a room. Test if that room is in our list.
    // indexHit corresponds to the snake's body part that we see, if we see it
    if (exit.locked) {
      msg ("You activate your x-ray vision and look through the locked door. Wait. No you don't.")
    }
    else {
      count = 0
      indexHit = 0
      foreach (rm, player.snake_rooms) {
        count = count + 1
        if (rm.name = lookRoom.name) {
          indexHit = count
        }
      }
      if (indexHit = player.length-1) {
        // We see our own body at the head, give a no turn back message
        msg ("You've just come from there. You wouldn't want to risk running into anything that may be following you...would you?")
      }
      else if (indexHit > 1) {
        // We see our own body in the middle, give a warning message
        msg ("You see a slimy, scaly body stretching across that room, nearly filling it. What a monstrosity!")
      }
      else if (indexHit = 1) {
        // We see our own tail, give an okay message
        msg ("You see the tip of a slimy, scaly tail. It looks like the monster is passing through. You're probably clear to go this way.")
      }
      else if (HasAttribute(lookRoom, "has_humans")) {
        if (thesis.wasburned = false) {
          msg ("You see some strange creatures milling about.")
        }
      }
      else {
        // No snake to see, give an all clear message
        msg ("That way is dark, empty and quiet. Not unlike your heart, you monster! Sorry.That was inappropriate.")
      }
    }
  ]]></function>
  <function name="clear_rooms">
    // This function "clears out" all of the current room tracking and resets it all to the player's current room.
    player.snake_rooms = NewObjectList()
    curRoom = ObjectListItem(ListParents(player),0)
    for (index, 0, player.length-1) {
      list add (player.snake_rooms, curRoom)
    }
  </function>
  <function name="grow_snake">
    // This function increases the snake's length by 1 and fixes the room tracking list to add on another "slot"
    // When the player changes rooms after they've "grown", it's like they get one room longer at the neck
    player.length = player.length + 1
    curRoom = ObjectListItem(ListParents(player),0)
    // We have to do this gross thing of putting the new element in its own list so that we can combine it with
    // the existing snake_rooms list in the correct order.
    curRoomList = NewObjectList()
    list add (curRoomList, curRoom)
    player.snake_rooms = ListCombine (curRoomList, player.snake_rooms)
    list_rooms
  </function>
  <function name="list_rooms">
    // This function lists the rooms the snake's body is in from tail to head.
    if (player.show_debug = 1) {
      msg ("Current rooms in the list are: ")
      msg ("-Tail")
      foreach (rm, player.snake_rooms) {
        msg ("-"+rm.name)
      }
      msg ("-Head")
    }
  </function>
  <function name="game_over">
    msg ("A slimy, scaly body spans the room. The pursuing creature and the one fleeing have come to a head, it seems! It's a flurry of fangs and blood as you try to defend yourself...and you fight valiantly, but are ultimately torn apart.Hint: You can look into a room before entering it. Remember to save!")
    finish
  </function>
  <function name="game_win">
    msg ("You slither up the beanstalk and out the window—out to freedom in the long, cool grass where you feel most at home.Congratulations: you have won Snake!")
    finish
  </function>
  <function name="humans_caught"><![CDATA[
    if (thesis.wasburned = false) {
      msg ("You throw caution to the wayside and do your best Kool-Aid man impression as you burt through the doors. Before you can even finish the \"OH\" of your \"OHHH YEAH,\" the beasts in the room seize upon you with shrieks that make your ears bleed. <br/><br/>You sure showed em', cowboy. Now you've gone and got wrangled, and the end is nigh. <br/><br/>Hint: You can look into a room before entering it.Remember to save!")
      finish
    }
  ]]></function>
  <function name="init_photoreceptor" parameters="photoreceptor">
    if (not photoreceptor.initialized) {
      // create list of light sources
      photoreceptor.lights_list = NewObjectList()
      photoreceptor.initialized = true
    }
  </function>
  <function name="change_rooms_snake">
    // This function handles movement into a "snake room" by storing a list
    // of the previously visited rooms, where index 0 is the snake's tail
    // and index (player.length-1) is the head
    if (player.game_start = 0) {
      curRoom = ObjectListItem(ListParents(player),0)
      if (not DoesInherit (curRoom, "not_snake_room")) {
        list_rooms
        // Remove the tail room at index 0
        tailRoom = ObjectListItem(player.snake_rooms, 0)
        list remove (player.snake_rooms, tailRoom)
        // Check whether the newest room is in the list already
        // indexHit corresponds to the snake's body part that we run into, if we run into it
        count = 0
        indexHit = 0
        foreach (rm, player.snake_rooms) {
          count = count + 1
          if (rm.name = curRoom.name) {
            indexHit = count
          }
        }
        // Now add in the new head room (we do this now even if we've bitten ourself)
        list add (player.snake_rooms, curRoom)
        if (indexHit = player.length-2) {
          // We hit our own body at the head, give a no turn back message
          msg ("You hear the sound of a heaving body dragging across the floor, but you proceed anyway.")
          game_over
        }
        else if (not indexHit = 0) {
          game_over
        }
        else {
          list_rooms
        }
      }
    }
    else {
      player.game_start = 0
    }
  </function>
  <function name="change_rooms_shake_lights" parameters="photoreceptor"><![CDATA[
    foreach (light, photoreceptor.lights_list) {
      if (light.remaining_dur > 0) {
        light.remaining_dur = (light.remaining_dur - 1)
        if (light.remaining_dur = 0) {
          msg ("A light turns off in the distance. It's probably one of those flashlights you turned on a minute ago.")
        }
      }
    }
  ]]></function>
  <function name="get_name">
    msg ("What is your name? 0: Aaron 1: Aedan")
    get input {
      if (result = "0") {
        msg ("My name is Aedan, and I don't know where I am.")
        msg ("")
        msg ("Let me back up.")
        msg ("")
        msg ("I grew up on the streets of Touboro, a small commune along the eastern border of Cameroon. It was hot, dry, and quiet. In a word, paradise.")
        msg ("")
        msg ("Now don't get me wrong, I've lived a life far from perfect. My father died when I was six months old, and the locals like to joke that my mother didn't even stick around for my birth. Had I been born into a colder climate I probably would've died before I learned to crawl. As it is, however, I learned to raise myself, and over time I've discovered three rules for surviving on the streets:")
        msg ("")
        msg ("   1. Stay warm")
        msg ("   2. Eat slowly")
        msg ("   3. Keep your head low to the ground")
        msg ("")
        msg ("If you keep to these, there's nothing on earth that you can't squirm out of. Unfortunately, as I've discovered, there are other things to worry about.")
        msg ("")
        msg ("Last night I laid under the stars, the world around me calm, still. Even the lark stays its cry come nightfall, and only the southern river separates a minute from an instant. But ashes to ashes, as the proverbs say, and peace soon came to pass. A bright light appeared in the sky above me, and a shapeless black mass lifted me from where I'd lain. Slate gray walls enclosed around me, and the world went black.")
        msg ("")
        msg ("Time went by. Perhaps minutes. Perhaps days. Sleep and wake blend together when the world disappears. Eventually the walls were lifted, and I woke up here.")
        msg ("")
        msg ("My name is Aedan, and I don't know where I am. But I do know that something brought me here, and that it's going to come back for me. I can't stay here. It's coming.")
        msg ("")
      }
      else if (result = "1") {
        msg ("My name is Aaron, and I don't know where I am.")
        msg ("")
        msg ("Let me back up.")
        msg ("")
        msg ("I grew up on the streets of Touboro, a small commune along the eastern border of Cameroon. It was hot, dry, and quiet. In a word, paradise.")
        msg ("")
        msg ("Now don't get me wrong, I've lived a life far from perfect. My father died when I was six months old, and the locals like to joke that my mother didn't even stick around for my birth. Had I been born into a colder climate I probably would've died before I learned to crawl. As it is, however, I learned to raise myself, and over time I've discovered three rules for surviving on the streets:")
        msg ("")
        msg ("   1. Stay warm")
        msg ("   2. Eat slowly")
        msg ("   3. Keep your head low to the ground")
        msg ("")
        msg ("If you keep to these, there's nothing on earth that you can't squirm out of. Unfortunately, as I've discovered, there are other things to worry about.")
        msg ("")
        msg ("Last night I laid under the stars, the world around me calm, still. Even the lark stays its cry come nightfall, and only the southern river separates a minute from an instant. But ashes to ashes, as the proverbs say, and peace soon came to pass. A bright light appeared in the sky above me, and a shapeless black mass lifted me from where I'd lain. Slate gray walls enclosed around me, and the world went black.")
        msg ("")
        msg ("Time went by. Perhaps minutes. Perhaps days. Sleep and wake blend together when the world disappears. Eventually the walls were lifted, and I woke up here.")
        msg ("")
        msg ("My name is Aaron, and I don't know where I am. But I do know that something brought me here, and that it's going to come back for me. I can't stay here. It's coming.")
        msg ("")
      }
      else {
        msg ("Your options were 0 and 1. Your name is now Dingus.")
        msg ("")
        msg ("My name is Dingus, and I don't know where I am.")
        msg ("")
        msg ("Let me back up.")
        msg ("")
        msg ("I grew up on the streets of Touboro, a small commune along the eastern border of Cameroon. It was hot, dry, and quiet. In a word, paradise.")
        msg ("")
        msg ("Now don't get me wrong, I've lived a life far from perfect. My father died when I was six months old, and the locals like to joke that my mother didn't even stick around for my birth. Had I been born into a colder climate I probably would've died before I learned to crawl. As it is, however, I learned to raise myself, and over time I've discovered three rules for surviving on the streets:")
        msg ("")
        msg ("   1. Stay warm")
        msg ("   2. Eat slowly")
        msg ("   3. Keep your head low to the ground")
        msg ("")
        msg ("If you keep to these, there's nothing on earth that you can't squirm out of. Unfortunately, as I've discovered, there are other things to worry about.")
        msg ("")
        msg ("Last night I laid under the stars, the world around me calm, still. Even the lark stays its cry come nightfall, and only the southern river separates a minute from an instant. But ashes to ashes, as the proverbs say, and peace soon came to pass. A bright light appeared in the sky above me, and a shapeless black mass lifted me from where I'd lain. Slate gray walls enclosed around me, and the world went black.")
        msg ("")
        msg ("Time went by. Perhaps minutes. Perhaps days. Sleep and wake blend together when the world disappears. Eventually the walls were lifted, and I woke up here.")
        msg ("")
        msg ("My name is Dingus, and I don't know where I am. But I do know that something brought me here, and that it's going to come back for me. I can't stay here. It's coming.")
        msg ("")
      }
    }
  </function>
  <walkthrough name="prototypeWalk">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="firstIkeaShelfWalk">
    <steps type="simplestringlist">
      go east
      go south
      go south
    </steps>
  </walkthrough>
  <walkthrough name="secondIkeaShelfWalk">
    <steps type="simplestringlist">
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
  <walkthrough name="twoRoomsWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="torchWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
    </steps>
  </walkthrough>
  <walkthrough name="toFinalLevel">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
  <walkthrough name="burnThesis">
    <steps type="simplestringlist">
      west
      west
      west
      west
      open small cage
      eat hamster
      north
      north
      take thesis
      east
      south
      east
      east
      turn on gas valve
      hug bunsen burner
      put thesis in fire
      burn thesis
      take hose
      north
      look at double door
    </steps>
  </walkthrough>
  <walkthrough name="startToFinish">
    <steps type="simplestringlist">
      north
      west
      eat meaty plant
      north
      use hose on faucet
      east
      north
      east
      push pot of dirt
      south
      south
      south
      south
      south
      west
      north
      look north
      north
      north
      north
      north
      look at open window
      look at tall bean plant
      climb tall bean plant
    </steps>
  </walkthrough>
</asl>