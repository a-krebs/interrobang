<!--Saved by Quest 5.4.4873.16527-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Snack">
    <gameid>39702944-ce39-4243-8459-2aaad4c4d15e</gameid>
    <version>0.2.1</version>
    <firstpublished>2014</firstpublished>
    <category type="string"></category>
    <gridmap />
    <cover>snake logo.png</cover>
    <author>Team Interrobang</author>
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <start type="script">
      // set up all the photorecepots in the game
      init_photoreceptor (photoreceptor0)
      // All of the initial "slots" of the snake are filled with the player's current room
      player.game_start = 1
      player.snake_rooms = NewObjectList()
      curRoom = ObjectListItem(ListParents(player),0)
      for (index, 0, player.length-1) {
        list add (player.snake_rooms, curRoom)
      }
            msg ("Groggy, you awaken in an unfamiliar room on a cold tile floor of green. You feel slimy and realize you have no idea how you got here. Your blood runs cold.<br/><br/>Pushing away the regret of whatever you may have done last night, you first notice the emptiness of the place, and the foreboding feeling that something is coming after you.")
    </start>
  </game>
  <object name="Prototype">
    <inherit name="editor_room" />
    <inherit name="not_snake_room" />
    <object name="r00">
      <inherit name="editor_room" />
      <description>You can see a vent on the wall, but the room is otherwise unremarkable.</description>
      <descprefix>You are in</descprefix>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="r01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r01)
        </look>
      </exit>
      <exit alias="south" to="r10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r10)
        </look>
      </exit>
      <exit name="Out Vent" alias="in" to="r22">
        <inherit name="indirection" />
        <locked />
        <lockmessage>It looks like it opens from the inside.</lockmessage>
        <look type="script">
          look_room (vent00)
        </look>
      </exit>
    </object>
    <object name="r01">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="r00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r00)
        </look>
      </exit>
      <exit alias="east" to="r02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r02)
        </look>
      </exit>
      <exit alias="south" to="r11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r11)
        </look>
      </exit>
    </object>
    <object name="r02">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="r01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r01)
        </look>
      </exit>
      <exit alias="south" to="r12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r12)
        </look>
      </exit>
    </object>
    <object name="r10">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r00">
        <inherit name="northdirection" />
      </exit>
      <exit alias="south" to="r20">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="r11">
        <inherit name="eastdirection" />
      </exit>
    </object>
    <object name="r11">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r01)
        </look>
      </exit>
      <exit alias="west" to="r10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r10)
        </look>
      </exit>
      <exit alias="east" to="r12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r12)
        </look>
      </exit>
      <exit alias="south" to="r21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r21)
        </look>
      </exit>
      <object name="player">
        <inherit name="editor_object" />
        <inherit name="editor_player" />
        <maxobjects type="int">1</maxobjects>
        <containermaxobjects>You want to grab it, but you can't seem to pull it off. You're already holding something.</containermaxobjects>
        <length type="int">4</length>
        <attr name="show_debug" type="int">0</attr>
      </object>
    </object>
    <object name="r12">
      <inherit name="editor_room" />
      <picture>card reader.png</picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r02)
        </look>
      </exit>
      <exit alias="west" to="r11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r11)
        </look>
      </exit>
      <exit alias="south" to="r22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r22)
        </look>
      </exit>
      <exit name="prototypeFinishExit" alias="east" to="i00">
        <inherit name="eastdirection" />
        <locked />
        <runscript type="boolean">false</runscript>
        <script type="script">
          ClearFramePicture
        </script>
        <look type="script">
          look_room (i00)
        </look>
      </exit>
      <object name="cardReader">
        <inherit name="editor_object" />
        <alias>Key Card Reader</alias>
        <alt type="stringlist">
          <value>reader</value>
          <value>key card reader</value>
          <value>card reader</value>
        </alt>
        <takemsg>It's bolted to the wall. Also, why would you want it, anyway?</takemsg>
        <look>The key card reader glistens with the sheen of new plastic. It looks like state-of-the-art technology.</look>
      </object>
    </object>
    <object name="r20">
      <inherit name="editor_room" />
      <picture type="string"></picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        if (Contains (r20,box)) {
          SetFramePicture ("crate vent.png")
        }
        change_rooms
      </enter>
      <exit alias="north" to="r10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r10)
        </look>
      </exit>
      <exit alias="east" to="r21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r21)
        </look>
      </exit>
      <exit name="vent20in" alias="in" to="vent20">
        <inherit name="indirection" />
        <locked />
        <runscript type="boolean">false</runscript>
        <lockmessage>The box is blocking the vent.</lockmessage>
        <look type="script">
          look_room (vent20)
        </look>
      </exit>
      <object name="box">
        <inherit name="editor_object" />
        <look>The large box appears to be very heavy. There doesn't seem to be a way to open it, but if you had to hazard a guess as to the nature of its contents, you'd probably go with...spiders? Very dense spiders.</look>
        <push type="script"><![CDATA[
          if (player.length >= 5) {
            msg ("You slam into the box with all of your weight, and manage to push it aside. You feel a sense of accomplishment somewhat disproportionate to the task of moving a box.")
            UnlockExit (vent20in)
            ClearFramePicture
            RemoveObject (box)
          }
          else {
            msg ("You feel exhausted, too weak to even push a box. You're so hungry you could eat a grue, and you don't even know what that is.")
          }
        ]]></push>
      </object>
    </object>
    <object name="r21">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="r11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r11)
        </look>
      </exit>
      <exit alias="east" to="r22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r22)
        </look>
      </exit>
      <exit alias="west" to="r20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r20)
        </look>
      </exit>
    </object>
    <object name="r22">
      <inherit name="editor_room" />
      <picture type="string"></picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        if (Contains (r22,deadRat)) {
          SetFramePicture ("deadrat.png")
        }
        change_rooms
      </enter>
      <exit alias="north" to="r12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r12)
        </look>
      </exit>
      <exit alias="west" to="r21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r21)
        </look>
      </exit>
      <object name="deadRat">
        <inherit name="editor_object" />
        <alias>dead rat</alias>
        <alt type="stringlist">
          <value>rat</value>
          <value>dead rat</value>
        </alt>
        <take type="boolean">false</take>
        <look>A dead, but not-yet-rotting rat...so it probably isn't toxic.</look>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <eat type="script">
          grow_snake
          msg ("Delicious! You feel...invigorated. Virile. Voluptuous...<br/><br/>...you're starting to make yourself uncomfortable.")
          ClearFramePicture
          RemoveObject (deadRat)
        </eat>
      </object>
    </object>
    <object name="vent">
      <inherit name="editor_room" />
      <object name="vent00">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="south" to="vent10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent10)
          </look>
        </exit>
        <exit alias="out" to="r00">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r00)
          </look>
        </exit>
      </object>
      <object name="vent10">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          if (Contains (vent10,keyCard)) {
            SetFramePicture ("keycard.png")
          }
          change_rooms
        </enter>
        <exit alias="north" to="vent00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent00)
          </look>
        </exit>
        <exit alias="south" to="vent20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent20)
          </look>
        </exit>
        <object name="keyCard">
          <inherit name="editor_object" />
          <alias>Key Card</alias>
          <take />
          <alt type="stringlist">
            <value>key</value>
            <value>keycard</value>
            <value>card</value>
            <value>key card</value>
          </alt>
          <takemsg>You pick up the key card.</takemsg>
          <use />
          <look>The key card shines with a familiar glisten. It brings back memories of a key card reader you've seen in your travels, back in the old country: like Mama used to make. Or maybe that was elsewhere in this room. You're still filling the holes in your swiss-cheese memory.</look>
          <ontake type="script">
            ClearFramePicture
          </ontake>
          <selfuseon type="scriptdictionary">
            <item key="cardReader">
              msg ("Bleep, boop, doop! Now that you're done scat singing, you use the key card in the reader, and the door opens silently.")
              UnlockExit (prototypeFinishExit)
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="vent20">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="north" to="vent10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent10)
          </look>
        </exit>
        <exit alias="out" to="r20">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r20)
          </look>
        </exit>
      </object>
    </object>
  </object>
  <command>
    <pattern>debug</pattern>
    <script>
      if (player.show_debug = 0) {
        player.show_debug = 1
        msg ("Debug now on. Cheater.")
      }
      else {
        player.show_debug = 0
        msg ("Debug now off.")
      }
    </script>
  </command>
  <command>
    <pattern>test_changerms</pattern>
    <script>
      change_rooms
    </script>
  </command>
  <command>
    <pattern>test_clearrms</pattern>
    <script>
      clear_rooms
    </script>
  </command>
  <command>
    <pattern>test_grow</pattern>
    <script>
      grow_snake
    </script>
  </command>
  <command>
    <pattern>test_list</pattern>
    <script>
      list_rooms
    </script>
  </command>
  <verb>
    <property>consume</property>
    <pattern>consume</pattern>
    <defaultexpression>"You can't consume " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>swallow</property>
    <pattern>swallow</pattern>
    <defaultexpression>"You can't swallow " + object.article + "."</defaultexpression>
  </verb>
  <object name="FirePuzzle">
    <inherit name="editor_room" />
    <object name="f00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <onexit type="script">
      </onexit>
      <exit alias="south" to="f10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
      <object name="typewriter">
        <inherit name="editor_object" />
        <take type="boolean">false</take>
        <look>It's an old-fashioned typewriter. Someone must be using it to write an absolute masterpiece. Writing on computers is for talentless hacks, as we all know.</look>
        <takemsg>It weighs, like...a ton. No way, José!</takemsg>
      </object>
      <object name="thesis">
        <inherit name="editor_object" />
        <look>This thesis looks like it's the product of months—possibly years—of work, slavishly hammering away at the typewriter. That's a LOT of paper. It would be a shame if something were to happen to it!</look>
        <wasburned type="boolean">false</wasburned>
        <take type="script">
          if (player.length = 10) {
            msg ("You stretch out and clamp down on it. You've got it securely. You ought to do something with it right away; there's no time to talk!")
            AddToInventory (thesis)
          }
          else {
            msg ("You try to heft the stack of papers up, but you're too weak—if only you'd had a balanced breakfast like your parents taught you. You consider picking it up one page at a time, but by your count, there are...at LEAST two and a half bajillion pages there. Then again, you were never very good at math.")
          }
        </take>
        <burn type="script">
          if (Got(thesis)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.tipped = true) {
                if (bunsen burner.flame = true) {
                  msg ("You drop the thesis into the fire, watching the tendrils lick at it until it becomes a tiny inferno. You try (in vain) to remember the last time you saw Flames overwhelm anything.<br/><br/>The thesis fire begins to fill the room with smoke. “Thesis making it really hard to see/breathe!” you exclaim (you dork). How did you even speak that kind of punctuation? The fire alarm is going off, by the way.")
                  set (thesis, "wasburned", true)
                  RemoveObject (thesis)
                }
                else {
                  msg ("You try to lift the thesis in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
                }
              }
              else {
                msg ("You try to lift the thesis all the way up to the fire, but you just don't seem to have the reach that you used to. Should have done more Pilates, maybe. Regardless, you're going to want to think about this laterally.")
              }
            }
            else {
              msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.<br/><br/>Spoiler: it doesn't work.")
            }
          }
          else {
            msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.<br/><br/>Spoiler: it doesn't work.")
          }
        </burn>
      </object>
      <exit alias="east" to="f01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
    </object>
    <object name="f01">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit alias="south" to="f11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <exit alias="west" to="f00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f00)
        </look>
      </exit>
      <object name="tinted window1">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f02">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f03">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit alias="west" to="f01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
      <exit to="f12">
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <object name="tinted window2">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f03">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f04">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit alias="west" to="f02">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
      <exit alias="north" to="p21">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="f04">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="f03">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f14)
        </look>
      </exit>
      <exit alias="north" to="p22">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
    </object>
    <object name="f10">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f00)
        </look>
      </exit>
      <exit alias="south" to="f20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f20)
        </look>
      </exit>
      <exit alias="east" to="f11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <object name="photo">
        <inherit name="editor_object" />
        <alias>photo of terrible beasts</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <look>It's a picture of...monsters? They look alien, yet somehow familiar. Your existentialism is acting up again.</look>
        <take />
        <takemsg>Clumsily, you knock the frame over and shatter it—not unlike Lennie, unaware of your own strength, only desiring to...what? You haven't read “Of Mice and Men”? Come on. Well, you've got the photo now.</takemsg>
        <burn type="script"><![CDATA[
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames!<br/><br/>Just kidding. You're not quite a dragon.")
            }
          }
          else {
            msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames! <br/><br/>Just kidding. You're not quite a dragon.")
          }
        ]]></burn>
      </object>
    </object>
    <object name="f11">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <exit alias="north" to="f01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
      <exit alias="south" to="f21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <exit alias="west" to="f10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
    </object>
    <object name="f12">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit alias="south" to="f22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit alias="west" to="f11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <exit alias="east" to="f13">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
      <object name="crumpled paper">
        <inherit name="editor_object" />
        <look>There's a bit of crumpled-up paper; it has some illegible scribbling on it. You resist the urge to make a joke about doctors writing prescriptions.</look>
        <take />
        <takemsg>You pick it up. Crinkle crinkle.</takemsg>
        <burn type="script"><![CDATA[
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!<br/><br/>Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
            }
          }
          else {
            msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!<br/><br/>Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
          }
        ]]></burn>
      </object>
    </object>
    <object name="f13">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f14">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f14)
        </look>
      </exit>
      <exit alias="west" to="f12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <exit alias="south" to="f23">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f23)
        </look>
      </exit>
      <exit alias="north" to="f03">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <object name="bunsen burner">
        <inherit name="editor_object" />
        <tipped type="boolean">false</tipped>
        <flame type="boolean">false</flame>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look type="script">
          msg ("There is a Bunsen burner sitting on the table. ")
          if (bunsen burner.tipped = true) {
            msg ("It's been tipped onto its side.")
          }
          if (bunsen burner.flame = false) {
            msg ("There's no fire.")
          }
          else {
            msg ("A hot, blue flame is burning at its tip.")
          }
        </look>
        <hug type="script">
          if (bunsen burner.tipped = false) {
            msg ("It looks like it could use some TLC. You sidle up to embrace it, but bump into it in the process. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </hug>
        <eat type="script">
          if (bunsen burner.tipped = false) {
            msg ("You've always loved the taste of gas, metal, and fire. You think it might be a good idea to put this thing in your mouth. You try to fit it into your face, but you drop it and it falls over.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </eat>
        <attack type="script">
          if (bunsen burner.tipped = false) {
            msg ("What did you say? Are you talkin' to me? C'est à moi que tu parles?<br/><br/>You coil up to give the Bunsen burner the ol' what-for. At the slightest tap, it falls onto its side. Guess you showed that thing.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </attack>
        <inspect type="script">
          if (bunsen burner.tipped = false) {
            msg ("You move in to take a look, but bump into it. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </inspect>
      </object>
      <object name="hose">
        <inherit name="editor_object" />
        <attached type="int">1</attached>
        <take type="script">
          AddToInventory (hose)
          msg ("You take that hose. It's yours.")
          set (hose, "attached", 0)
          set (bunsen burner, "flame", false)
        </take>
        <look type="script">
          if (hose.attached = 0) {
            msg ("It's a rubber hose with threaded ends that could be conceivably be connected from one thing to another...if you were REALLY crazy.")
          }
          if (hose.attached = 1) {
            msg ("It's a rubber hose. It's connecting the gas valve to the Bunsen burner.")
          }
          if (hose.attached = 2) {
            msg ("It's a rubber hose. One end is connected to the tap, and the other end is hanging off the counter.")
          }
        </look>
      </object>
      <object name="gas valve">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <switchonmsg>You turn the gas valve to the "on" position.</switchonmsg>
        <switchoffmsg>You turn the gas valve to the "off" position.</switchoffmsg>
        <look type="script">
          if (IsSwitchedOn(gas valve)) {
            msg ("It says it's on, which probably explains the hissing sound. Maybe.")
          }
          else {
            msg ("It's a valve...for gas...that fuels things...that burn gas. It's...pretty self-explanatory?")
          }
        </look>
        <onswitchon type="script">
          if (hose.attached = 1) {
            set (bunsen burner, "flame", true)
          }
        </onswitchon>
        <onswitchoff type="script">
          set (bunsen burner, "flame", false)
        </onswitchoff>
      </object>
    </object>
    <object name="f14">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f04">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit alias="south" to="f24">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f24)
        </look>
      </exit>
      <exit alias="west" to="f13">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
    </object>
    <object name="f20">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
      <exit alias="east" to="f21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <object name="cage">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <alias>small cage</alias>
        <scenery type="boolean">false</scenery>
        <look>A small wire cage sits on the desk. There's a small, brown lump inside.</look>
        <alt type="stringlist">
          <value>cage</value>
        </alt>
        <isopen type="boolean">false</isopen>
        <transparent />
        <openmsg>You bump the latch and the door swings open.</openmsg>
        <closemsg>You nudge the door closed.</closemsg>
        <object name="hamster">
          <inherit name="editor_object" />
          <look>The small, brown lump looks back at you...so cute! The little furry ball smells good. It probably has a cute name like Pippy or something. Someone probably loves it very, very much. It would be a tragedy if something awful were to happen to it.</look>
          <alt type="stringlist">
            <value>Mr. Pippy</value>
          </alt>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            if (cage.isopen) {
              grow_snake
              msg ("You're so hungry. You dart forward, pick up the hamster, and swallow it all in one motion. The adorable Pippy makes a tiny squeak, and then all is silent.")
              RemoveObject (hamster)
            }
            else {
              msg ("You try to grab the hamster, but the cage is latched closed!")
            }
          </eat>
        </object>
      </object>
    </object>
    <object name="f21">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit alias="west" to="f20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f20)
        </look>
      </exit>
      <exit alias="north" to="f11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
    </object>
    <object name="f22">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f23">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f23)
        </look>
      </exit>
      <exit alias="west" to="f21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <exit alias="north" to="f12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
    </object>
    <object name="f23">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="f24">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f24)
        </look>
      </exit>
      <exit alias="west" to="f22">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit alias="north" to="f13">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
    </object>
    <object name="f24">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="f14">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f14)
        </look>
      </exit>
      <exit alias="west" to="f23">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f23)
        </look>
      </exit>
      <exit alias="south" to="t_torches00">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <property>hug</property>
    <pattern>hug</pattern>
    <defaultexpression>"You can't hug " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>attack</property>
    <pattern>attack</pattern>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>inspect</property>
    <pattern>inspect</pattern>
    <defaultexpression>"You can't inspect " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>burn</property>
    <pattern>burn</pattern>
    <defaultexpression>"You can't burn " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>put paper in fire; put paper in flame; set paper on fire</pattern>
    <script><![CDATA[
      if (Got(crumpled paper)) {
        if (game.pov.parent = f13) {
          if (box.flame = true) {
            msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
          }
          else {
            msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!<br/><br/>Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
    ]]></script>
  </command>
  <command>
    <pattern>attach hose to bunsen burner; attach hose to gas; attach hose to gas valve; use hose on valve; use hose on gas; use hose on bunsen burner</pattern>
    <unresolved type="string"></unresolved>
    <script>
      if (Got(hose)) {
        if (game.pov.parent = f13) {
          msg ("You attach the hose to the Bunsen burner on one end and to the gas valve on the other..")
          RemoveObject (hose)
          set (hose, "attached", 1)
          if (IsSwitchedOn(gas valve)) {
            msg ("The bunsen burner's flame turns on.")
            set (bunsen burner, "flame", true)
          }
        }
        else {
          msg ("You're not near anything you can attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.<br/><br/>You scrub.")
      }
    </script>
  </command>
  <command>
    <pattern>put photo in fire; put photo in flame; set photo on fire</pattern>
    <script><![CDATA[
      if (Got(photo)) {
        if (game.pov.parent = f13) {
          if (bunsen burner.flame = true) {
            msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
            destroy ("photo")
          }
          else {
            msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!<br/><br/>Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
      else {
        msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!<br/><br/>Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
      }
    ]]></script>
  </command>
  <object name="PlantPuzzle">
    <inherit name="editor_room" />
    <object name="p01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="window">
        <inherit name="editor_object" />
        <alias>open window</alias>
        <alt type="stringlist">
          <value>window</value>
        </alt>
        <look>High up near the ceiling, there's an open window. You can feel and smell fresh air through it. This is what must have cleared out the smoke.</look>
      </object>
      <object name="pile of dirt">
        <inherit name="editor_object" />
        <visible type="boolean">false</visible>
        <alt type="stringlist">
          <value>bean plant</value>
          <value>dirt</value>
        </alt>
        <grown type="boolean">false</grown>
        <look type="script">
          if (pile of dirt.grown = false) {
            if (hose.attached = 2) {
              if (IsSwitchedOn(faucet)) {
                msg ("The water runs out of the end of the hose, and starts forming a puddle on the floor. As the puddle spreads across the room, the dirt begins to moisten. You soon hear a sharp crunching noise as something within the dirt springs to life. Suddenly, a huge plant coils out of the dirt, and grows upwards in a spiral, reaching towards the light streaming in through the open window.<br/><br/>Wonderful what science can do these days, no?")
                MakeObjectVisible (plant)
              }
              else {
                msg ("The end of the hose is pointing toward the pile of dry dirt, but nothing is coming out. It's almost as if the hose itself is not a source of water.")
              }
            }
            else {
              msg ("Directly below the open window is a pile of dry dirt, with the remains of its smashed pot scattered around.")
            }
          }
          else {
            msg ("It's a pile of dirt, out of which is sprouting a magnificent vine that snakes up  toward the open window. You feel a growing sense of deep symbolism.")
          }
        </look>
      </object>
      <object name="plant">
        <inherit name="editor_object" />
        <alias>tall bean plant</alias>
        <alt type="stringlist">
          <value>plant</value>
          <value>vine</value>
          <value>beanstalk</value>
        </alt>
        <visible type="boolean">false</visible>
        <climb type="script">
          game_win
        </climb>
        <climbup type="script">
          game_win
        </climbup>
      </object>
      <exit alias="south" to="p11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit alias="east" to="p02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p02)
        </look>
      </exit>
      <object name="door">
        <inherit name="editor_object" />
        <look>There's a door to the west that the monsters left through. It's shut tight, though. There's no way to open it.</look>
      </object>
    </object>
    <object name="p02">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="bean plant">
        <inherit name="editor_object" />
        <look>Its label says "Superior-growth, military-strength developmental prototype beanstalk". It's in a clay pot (which doesn't look military-strength) on the top of this shelf.<br/><br/>There doesn't appear to be anything growing in the pot, and the soil is dry.</look>
        <alt type="stringlist">
          <value>pot</value>
          <value>clay pot</value>
          <value>bean plant</value>
        </alt>
        <alias>pot of dirt</alias>
        <throw type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </throw>
        <push type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </push>
      </object>
      <exit alias="west" to="p01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p01)
        </look>
      </exit>
      <exit alias="south" to="p12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
    </object>
    <object name="p10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="sink">
        <inherit name="editor_object" />
        <look>The sink is slightly filled with water, but is draining steadily.</look>
      </object>
      <object name="faucet">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <alt type="stringlist">
          <value>tap</value>
          <value>running faucet</value>
        </alt>
        <switchonmsg>The handle sticks a little, but you manage to turn the faucet on, and water is rushing out. Better hope this place is rent-controlled.</switchonmsg>
        <switchoffmsg>You shut the water off. Only YOU can protect the environment!</switchoffmsg>
        <switchedon />
        <look type="script">
          if (IsSwitchedOn(faucet)) {
            msg ("It's a faucet. Water is pouring out.")
          }
          else {
            msg ("It's a faucet. It's off.")
          }
          if (hose.attached = 2) {
            msg ("There is a rubber hose attached to the nozzle. ")
          }
        </look>
      </object>
      <exit alias="east" to="p11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit alias="south" to="p20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p20)
        </look>
      </exit>
    </object>
    <object name="p11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="p01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p01)
        </look>
      </exit>
      <exit alias="east" to="p12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
      <exit alias="west" to="p10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p10)
        </look>
      </exit>
      <exit alias="south" to="p21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="p12">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="north" to="p02">
        <inherit name="northdirection" />
        <lookonly type="boolean">false</lookonly>
        <look type="script">
          look_room (p02)
        </look>
      </exit>
      <exit alias="south" to="p22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
      <exit alias="west" to="p11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
    </object>
    <object name="p20">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="meat plant">
        <inherit name="editor_object" />
        <alias>meaty plant</alias>
        <look>There's a plant on this shelf. The label says "Experimental DNA hybrid for Synthetic Meat Production." Its leaves look like tasty little steaks.</look>
        <eat type="script">
          msg ("You swallow that meat plant whole!<br/><br/>That's not a sentence you read every day.")
          grow_snake
          RemoveObject (meat plant)
        </eat>
      </object>
      <exit alias="north" to="p10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit to="p21">
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="p21">
      <inherit name="editor_room" />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit alias="south" to="f03">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit alias="north" to="p11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit alias="west" to="p20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p20)
        </look>
      </exit>
      <exit alias="east" to="p22">
        <inherit name="eastdirection" />
        <runscript />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
    </object>
    <object name="p22">
      <inherit name="editor_room" />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit alias="north" to="p12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
      <exit alias="south" to="f04">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit alias="west" to="p21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
  </object>
  <command>
    <pattern>attach hose to faucet; attach hose to tap; put hose on faucet; put hose on tap; use hose on faucet; use hose on tap</pattern>
    <script>
      if (Got(hose)) {
        if (game.pov.parent = p10) {
          msg ("You attach the hose to the running faucet. The other end hangs off the end of the sink.")
          RemoveObject (hose)
          set (hose, "attached", 2)
        }
        else {
          msg ("You're not near anything to attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.<br/><br/>You scrub.")
      }
    </script>
  </command>
  <verb>
    <property>pushoffshelf</property>
    <pattern>push off shelf</pattern>
    <defaultexpression>"You can't push off shelf " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>climbup</property>
    <pattern>climb up</pattern>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>push pot off shelf; push pot of dirt off shelf; push plant off shelf</pattern>
    <script>
      if (game.pov.parent = p02) {
        if (ListContains(ScopeVisible(), bean plant)) {
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            RemoveObject (bean plant)
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        }
      }
    </script>
  </command>
  <object name="TwoRoomPuzzle">
    <inherit name="editor_room" />
    <object name="StartRoom">
      <inherit name="editor_room" />
      <object name="tr_start00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_start01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
        </exit>
        <exit alias="south" to="tr_start10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start10)
          </look>
        </exit>
      </object>
      <object name="tr_start01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start00)
          </look>
        </exit>
        <exit alias="east" to="tr_start02">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
        </exit>
        <exit alias="south" to="tr_start11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
        </exit>
      </object>
      <object name="tr_start02">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <firstenter type="script">
          msg ("You hear a noise to the east! Maybe you should check it out.")
        </firstenter>
        <exit alias="west" to="tr_start01">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
        </exit>
        <exit alias="east" to="tr_start03">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
        </exit>
        <exit alias="south" to="tr_start12">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
        </exit>
        <exit alias="north" to="i11">
          <inherit name="northdirection" />
          <lookonly type="boolean">false</lookonly>
          <look type="script">
            look_room (i11)
          </look>
        </exit>
      </object>
      <object name="tr_start03">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start02">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
        </exit>
        <exit alias="east" to="tr_start04">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start04)
          </look>
        </exit>
        <exit alias="south" to="tr_start13">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
        </exit>
      </object>
      <object name="tr_start04">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start03">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
        </exit>
        <exit alias="south" to="tr_start14">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start14)
          </look>
        </exit>
      </object>
      <object name="tr_start10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_start11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
        </exit>
        <exit alias="north" to="tr_start00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start00)
          </look>
        </exit>
        <object name="keyCard1">
          <inherit name="editor_object" />
          <alias>Key Card</alias>
          <take />
          <alt type="stringlist">
            <value>key</value>
            <value>keycard</value>
            <value>card</value>
            <value>key card</value>
          </alt>
          <takemsg>You pick up the key card.</takemsg>
          <use />
          <look>The key card shines with a familiar glisten. It brings back memories of...memories. You're in some sort of quantum loop, obviously. ARE YOU TRIPPING OUT YET?!?</look>
          <ontake type="script">
            ClearFramePicture
          </ontake>
          <selfuseon type="scriptdictionary">
            <item key="cardReader1">
              msg ("The card reader signals its approval with a noise inimitable through onomatopoeia.")
              UnlockExit (tr_star11_to_tr_small01)
            </item>
            <item key="cardReader2">
              msg ("The reader accepts the card, sucking it in; out of the slot is unleashed a flood of wailing, tormented screams: the sound of thousands of souls who have died in previous save files, trying in vain to escape the eternal prison that is this puzzle room, never to find solace.<br/><br/>No pressure.")
              UnlockExit (tr_start13_to_tr_large00)
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="tr_start11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start10)
          </look>
        </exit>
        <exit alias="east" to="tr_start12">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
        </exit>
        <exit alias="north" to="tr_start01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
        </exit>
        <exit name="tr_star11_to_tr_small01" alias="south" to="tr_small01">
          <inherit name="southdirection" />
          <locked />
          <look type="script">
            look_room (tr_small01)
          </look>
        </exit>
        <object name="cardReader1">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's...glued to the wall. But, like, a really strong glue. Never you mind.</takemsg>
          <look>The key card reader glistens with the sheen of new—no, wait. Ew, gross, what IS that? Never mind. The device appears to be operational.</look>
        </object>
      </object>
      <object name="tr_start12">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start11">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
        </exit>
        <exit alias="east" to="tr_start13">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
        </exit>
        <exit alias="north" to="tr_start02">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
        </exit>
      </object>
      <object name="tr_start13">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start12">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
        </exit>
        <exit alias="east" to="tr_start14">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start14)
          </look>
        </exit>
        <exit alias="north" to="tr_start03">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
        </exit>
        <exit name="tr_start13_to_tr_large00" alias="south" to="tr_large00">
          <inherit name="southdirection" />
          <locked />
          <look type="script">
            look_room (tr_large00)
          </look>
        </exit>
        <object name="cardReader2">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's cemented to the wall, and you forgot your jackhammer. Nice going.</takemsg>
          <look>The key card reader glistens with the sheen of new metal (not to be confused with nu metal, which is a pretentious way of saying "alternative" metal, and is a garbage genre anyhow).</look>
        </object>
      </object>
      <object name="tr_start14">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_start13">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
        </exit>
        <exit alias="north" to="tr_start04">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start04)
          </look>
        </exit>
        <object name="scale">
          <inherit name="editor_object" />
          <drop type="boolean">false</drop>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <lie type="script"><![CDATA[
            if (player.length < 7) {
              msg ("The scale beeps, but nothing else happens. Clearly, you have not satisfied the almighty guardian device.")
            }
            else {
              UnlockExit (tr_start14_to_t_torches00)
              msg ("The scale beeps. Just as you give up hope and go to look for another dirty rat to eat, you hear the clicking noise of a door unlocking.")
            }
          ]]></lie>
        </object>
        <exit name="tr_start14_to_t_torches00" alias="east" to="t_torches00">
          <inherit name="eastdirection" />
          <locked />
        </exit>
      </object>
    </object>
    <object name="SmallRoom">
      <inherit name="editor_object" />
      <object name="tr_small00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small01)
          </look>
        </exit>
        <exit alias="south" to="tr_small10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
        </exit>
      </object>
      <object name="tr_small01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_small00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small00)
          </look>
        </exit>
        <exit alias="south" to="tr_small11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
        </exit>
        <exit alias="north" to="tr_start11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
        </exit>
        <object name="deadRat1">
          <inherit name="editor_object" />
          <alias>dead rat</alias>
          <alt type="stringlist">
            <value>rat</value>
            <value>dead rat</value>
          </alt>
          <take type="boolean">false</take>
          <look>A dead, but perfectly edible rat. Only a fool would pass up such a rat.</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            grow_snake
            msg ("Packing on the pounds, there, aren't you? Look, someone had to tell you. Really, you should be thankful. Don't get so damn emotional!")
            ClearFramePicture
            RemoveObject (deadRat1)
          </eat>
        </object>
      </object>
      <object name="tr_small10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
        </exit>
        <exit alias="north" to="tr_small00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small00)
          </look>
        </exit>
        <exit alias="south" to="tr_small20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small20)
          </look>
        </exit>
      </object>
      <object name="tr_small11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_small10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
        </exit>
        <exit alias="north" to="tr_small01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small01)
          </look>
        </exit>
        <exit alias="south" to="tr_small21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small21)
          </look>
        </exit>
      </object>
      <object name="tr_small20">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_small21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small21)
          </look>
        </exit>
        <exit alias="north" to="tr_small10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
        </exit>
      </object>
      <object name="tr_small21">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_small20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small20)
          </look>
        </exit>
        <exit alias="north" to="tr_small11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
        </exit>
      </object>
    </object>
    <object name="LargeRoom">
      <inherit name="editor_room" />
      <object name="tr_large00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large01)
          </look>
        </exit>
        <exit alias="south" to="tr_large10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
        </exit>
        <exit alias="north" to="tr_start13">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
        </exit>
      </object>
      <object name="tr_large01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large00)
          </look>
        </exit>
        <exit alias="south" to="tr_large11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
        </exit>
      </object>
      <object name="tr_large10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
        </exit>
        <exit alias="north" to="tr_large00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large00)
          </look>
        </exit>
        <exit alias="south" to="tr_large20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
        </exit>
        <object name="deadRat2">
          <inherit name="editor_object" />
          <alias>dead rat</alias>
          <alt type="stringlist">
            <value>rat</value>
            <value>dead rat</value>
          </alt>
          <take type="boolean">false</take>
          <look>A less-dead, but equally edible rat. You're not going to let it suffer, are you?</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            grow_snake
            msg ("The rat goes straight to your ample midsection as you put it out of its misery.<br/><br/>...or maybe that rat was just getting better, and you've swooped in and taken its life before it could even tell its family it loved them. Looks like you'll just have to spend the rest of your days wondering: what if?")
            ClearFramePicture
            RemoveObject (deadRat2)
          </eat>
        </object>
      </object>
      <object name="tr_large11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
        </exit>
        <exit alias="north" to="tr_large01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large01)
          </look>
        </exit>
        <exit alias="south" to="tr_large21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
        </exit>
      </object>
      <object name="tr_large20">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
        </exit>
        <exit alias="north" to="tr_large10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
        </exit>
        <exit alias="south" to="tr_large30">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large30)
          </look>
        </exit>
      </object>
      <object name="tr_large21">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
        </exit>
        <exit alias="north" to="tr_large11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
        </exit>
        <exit alias="south" to="tr_large31">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large31)
          </look>
        </exit>
      </object>
      <object name="tr_large30">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="east" to="tr_large31">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large31)
          </look>
        </exit>
        <exit alias="north" to="tr_large20">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
        </exit>
      </object>
      <object name="tr_large31">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <exit alias="west" to="tr_large30">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large30)
          </look>
        </exit>
        <exit alias="north" to="tr_large21">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
        </exit>
      </object>
    </object>
  </object>
  <object name="TorchPuzzle">
    <inherit name="editor_room" />
    <object name="t_torches00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
      </exit>
      <exit alias="south" to="t_torches10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
      </exit>
      <exit alias="west" to="tr_start14">
        <inherit name="westdirection" />
        <locked type="boolean">false</locked>
      </exit>
      <object name="light3_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
      <object name="photoreceptor0">
        <inherit name="editor_object" />
        <inherit name="photoreceptor_base" />
        <attr name="light_req" type="int">6</attr>
        <alias>door control</alias>
      </object>
      <exit name="t_torches00_to_f24" alias="north" to="f24">
        <inherit name="northdirection" />
        <locked />
        <runscript />
        <look type="script">
          look_room (f24)
        </look>
        <script type="script"><![CDATA[
          if (player.length < 9) {
            msg ("The door rattles as you push it, but it's still latched. Oh, there's a handle! It's too bad you can't reach it. Maybe you can find a way to get up there...")
          }
          else {
            MoveObject (player, f24)
          }
        ]]></script>
        <attr name="grid_length" type="int">7</attr>
      </exit>
    </object>
    <object name="t_torches01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
      </exit>
      <exit alias="east" to="t_torches02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches02)
        </look>
      </exit>
      <exit alias="south" to="t_torches11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
      </exit>
    </object>
    <object name="t_torches02">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
      </exit>
      <exit alias="south" to="t_torches12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
      </exit>
    </object>
    <object name="t_torches10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
      </exit>
      <exit alias="north" to="t_torches00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
      </exit>
      <exit alias="south" to="t_torches20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
      </exit>
    </object>
    <object name="t_torches11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
      </exit>
      <exit alias="east" to="t_torches12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
      </exit>
      <exit alias="north" to="t_torches01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
      </exit>
      <exit alias="south" to="t_torches21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
      </exit>
      <object name="light3_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches12">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
      </exit>
      <exit alias="north" to="t_torches02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches02)
        </look>
      </exit>
      <exit alias="south" to="t_torches22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
      </exit>
      <object name="light6_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">6</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches20">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
      </exit>
      <exit alias="north" to="t_torches10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
      </exit>
      <exit alias="south" to="t_torches30">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
      </exit>
      <object name="light5_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">5</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches21">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
      </exit>
      <exit alias="east" to="t_torches22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
      </exit>
      <exit alias="north" to="t_torches11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
      </exit>
      <exit alias="south" to="t_torches31">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
      </exit>
    </object>
    <object name="t_torches22">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
      </exit>
      <exit alias="north" to="t_torches12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
      </exit>
      <exit alias="south" to="t_torches32">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
      </exit>
    </object>
    <object name="t_torches30">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches31">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
      </exit>
      <exit alias="north" to="t_torches20">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
      </exit>
      <exit alias="south" to="t_torches40">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
      </exit>
    </object>
    <object name="t_torches31">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches30">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
      </exit>
      <exit alias="east" to="t_torches32">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
      </exit>
      <exit alias="north" to="t_torches21">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
      </exit>
      <exit alias="south" to="t_torches41">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
      </exit>
      <object name="light7_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">7</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches32">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches31">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
      </exit>
      <exit alias="north" to="t_torches22">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
      </exit>
      <exit alias="south" to="t_torches42">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
      </exit>
      <object name="light2_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches40">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches41">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
      </exit>
      <exit alias="north" to="t_torches30">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
      </exit>
      <exit alias="south" to="t_torches50">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
      </exit>
      <object name="light9_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">9</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches41">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches40">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
      </exit>
      <exit alias="east" to="t_torches42">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
      </exit>
      <exit alias="north" to="t_torches31">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
      </exit>
      <exit alias="south" to="t_torches51">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
      </exit>
    </object>
    <object name="t_torches42">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches41">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
      </exit>
      <exit alias="north" to="t_torches32">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
      </exit>
      <exit alias="south" to="t_torches52">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
      </exit>
    </object>
    <object name="t_torches50">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches51">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
      </exit>
      <exit alias="north" to="t_torches40">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
      </exit>
      <exit alias="south" to="t_torches60">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches60)
        </look>
      </exit>
    </object>
    <object name="t_torches51">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches50">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
      </exit>
      <exit alias="east" to="t_torches52">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
      </exit>
      <exit alias="north" to="t_torches41">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
      </exit>
      <exit alias="south" to="t_torches61">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
      </exit>
      <object name="light11_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">11</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches52">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches51">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
      </exit>
      <exit alias="north" to="t_torches42">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
      </exit>
      <exit alias="south" to="t_torches62">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches62)
        </look>
      </exit>
      <object name="light2_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches60">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="t_torches61">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
      </exit>
      <exit alias="north" to="t_torches50">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
      </exit>
      <object name="light13_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">13</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
      </object>
    </object>
    <object name="t_torches61">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches60">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches60)
        </look>
      </exit>
      <exit alias="east" to="t_torches62">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches62)
        </look>
      </exit>
      <exit alias="north" to="t_torches51">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
      </exit>
    </object>
    <object name="t_torches62">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="t_torches61">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
      </exit>
      <exit alias="north" to="t_torches52">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <pattern>shake</pattern>
    <property>shake</property>
    <defaulttext>"You can't shake " + object.article + "."</defaulttext>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <pattern>power on</pattern>
    <property>poweron</property>
    <defaultexpression>"You can't power on " + object.article + "."</defaultexpression>
  </verb>
  <object name="IkeaShelfPuzzle">
    <inherit name="editor_object" />
    <object name="i00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="i01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (i01)
        </look>
      </exit>
      <exit alias="south" to="i10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i10)
        </look>
      </exit>
      <exit alias="west" to="r12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r12)
        </look>
      </exit>
    </object>
    <object name="i01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="i00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i00)
        </look>
      </exit>
      <exit alias="south" to="i11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i11)
        </look>
      </exit>
    </object>
    <object name="i10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="east" to="i11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (i11)
        </look>
      </exit>
      <exit alias="north" to="i00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (i00)
        </look>
      </exit>
      <object name="ikeaShelf">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <alias>Ikea shelf</alias>
        <isopen type="boolean">false</isopen>
        <hidechildren type="boolean">false</hidechildren>
        <open type="boolean">false</open>
        <close type="boolean">false</close>
        <drag type="script">
          msg ("You snatch the shelf and begin to drag it.")
          AddToInventory (this)
        </drag>
        <look type="script"><![CDATA[
          if (player.length < 7) {
            msg ("It's an Ikea shelf. Solid, modern, and likely to collapse if looked at in the wrong way. It surely couldn't hold your weight, especially after you shamelessly gorged on rats.")
          }
          else {
            msg ("You look at " + this.alias + " sternly. It is intimidated by your strength and collapses immediately. Several wrapped food items fall out of one of the drawers.")
            MoveObject (snack0, this.parent)
            MoveObject (snack1, this.parent)
            RemoveObject (this)
          }
        ]]></look>
        <climbup type="script"><![CDATA[
          if (player.length < 7) {
            msg ("You climb on the shelf.")
          }
          else {
            msg ("You look at " + this.alias + " with the intent to climb it. It is intimidated by your size and collapses immediately. Several wrapped food items fall out of one of the drawers.")
            MoveObject (snack0, this.parent)
            MoveObject (snack1, this.parent)
            RemoveObject (this)
          }
        ]]></climbup>
        <object name="snack0">
          <inherit name="editor_object" />
          <alias>brightly coloured candy</alias>
          <alt type="stringlist">
            <value>snack</value>
            <value>candy</value>
          </alt>
          <take type="boolean">false</take>
          <look>Ooh! Candy!</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <visible />
          <eat type="script">
            grow_snake
            msg ("It tastes so good, but the shame burns so badly. Not that you care. You're just taking up ever more space as you go.")
            ClearFramePicture
            RemoveObject (this)
          </eat>
        </object>
        <object name="snack1">
          <inherit name="editor_object" />
          <alias>dull boring candy</alias>
          <alt type="stringlist">
            <value>snack</value>
            <value>candy</value>
          </alt>
          <take type="boolean">false</take>
          <look>Ooh! Candy!</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <visible />
          <eat type="script">
            grow_snake
            msg ("You down it all like nothing. Did your parents teach you no manners? You are grown now, but only in size.")
            ClearFramePicture
            RemoveObject (this)
          </eat>
        </object>
      </object>
    </object>
    <object name="i11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit alias="west" to="i10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i10)
        </look>
      </exit>
      <exit alias="north" to="i01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (i01)
        </look>
      </exit>
      <exit alias="south" to="tr_start02">
        <inherit name="southdirection" />
        <look type="script">
          look_room (tr_start02)
        </look>
      </exit>
    </object>
  </object>
  <verb>
    <property>drag</property>
    <pattern>drag</pattern>
    <defaultexpression>"You can't drag " + object.article + "."</defaultexpression>
  </verb>
  <type name="not_snake_room" />
  <type name="shake_light_base">
    <attr name="max_dur" type="int">0</attr>
    <attr name="remaining_dur" type="int">0</attr>
    <alias>flashlight</alias>
    <target type="object">player</target>
    <shake type="script">
      msg ("You shake the flashlight. " + this.max_dur + " little lights blink on the side. What could they mean...?")
      in_list = false
      foreach (light, this.target.lights_list) {
        if (light = this) {
          in_list = true
        }
      }
      if (not in_list) {
        list add (this.target.lights_list, this)
      }
      this.remaining_dur = this.max_dur
    </shake>
  </type>
  <type name="photoreceptor_base">
    <attr name="light_req" type="int">0</attr>
    <initialized type="boolean">false</initialized>
    <attr name="powered_on" type="boolean">false</attr>
    <poweron type="script"><![CDATA[
      curr_light = 0
      foreach (light, this.lights_list) {
        if (light.remaining_dur > 0) {
          curr_light = curr_light + 1
        }
      }
      msg ("It looks like this unit is powerd by light. Reading the panel, it looks like it requires " + this.light_req + " light sources to fully power on,")
      if (curr_light < this.light_req) {
        msg ("but there are " + curr_light + " lights on in the room.")
      }
      else {
        this.powered_on = true
        msg ("and there is enought light! It powers on!")
      }
    ]]></poweron>
    <use type="script">
      if (this.powered_on) {
        msg ("The door control indicates the door is unlocked.")
        UnlockExit (t_torches00_to_f24)
      }
      else {
        msg ("This unit appears to need to be powered on before it can be used.")
      }
    </use>
  </type>
  <function name="change_rooms">
    // This function should be called at all transitions between rooms.
    // It handles the snake length as well as any other events that need
    // to be triggered at after each room transition
    change_rooms_snake
    change_rooms_shake_lights (photoreceptor0)
  </function>
  <function name="look_room" parameters="lookRoom"><![CDATA[
    // This function is called when we look into a room. Test if that room is in our list.
    // indexHit corresponds to the snake's body part that we see, if we see it
    count = 0
    indexHit = 0
    foreach (rm, player.snake_rooms) {
      count = count + 1
      if (rm.name = lookRoom.name) {
        indexHit = count
      }
    }
    if (indexHit = player.length-1) {
      // We see our own body at the head, give a no turn back message
      msg ("You've just come from there. You wouldn't want to risk running into anything that may be following you...would you?")
    }
    else if (indexHit > 1) {
      // We see our own body in the middle, give a warning message
      msg ("You see a slimy, scaly body stretching across that room, nearly filling it. What a monstrosity!")
    }
    else if (indexHit = 1) {
      // We see our own tail, give an okay message
      msg ("You see the tip of a slimy, scaly tail. It looks like the monster is passing through. You're probably clear to go this way.")
    }
    else {
      // No snake to see, give an all clear message
      msg ("That way is dark, empty and quiet. Not unlike your heart, you monster!<br/><br/>Sorry. That was inappropriate.")
    }
  ]]></function>
  <function name="clear_rooms">
    // This function "clears out" all of the current room tracking and resets it all to the player's current room.
    player.snake_rooms = NewObjectList()
    curRoom = ObjectListItem(ListParents(player),0)
    for (index, 0, player.length-1) {
      list add (player.snake_rooms, curRoom)
    }
  </function>
  <function name="grow_snake">
    // This function increases the snake's length by 1 and fixes the room tracking list to add on another "slot"
    // When the player changes rooms after they've "grown", it's like they get one room longer at the neck
    player.length = player.length + 1
    curRoom = ObjectListItem(ListParents(player),0)
    // We have to do this gross thing of putting the new element in its own list so that we can combine it with
    // the existing snake_rooms list in the correct order.
    curRoomList = NewObjectList()
    list add (curRoomList, curRoom)
    player.snake_rooms = ListCombine (curRoomList, player.snake_rooms)
    list_rooms
  </function>
  <function name="list_rooms">
    // This function lists the rooms the snake's body is in from tail to head.
    if (player.show_debug = 1) {
      msg ("Current rooms in the list are: ")
      msg ("-Tail")
      foreach (rm, player.snake_rooms) {
        msg ("-"+rm.name)
      }
      msg ("-Head")
    }
  </function>
  <function name="game_over"><![CDATA[
    msg ("A slimy, scaly body spans the room. The pursuing creature and the one fleeing have come to a head, it seems! It's a flurry of fangs and blood as you try to defend yourself...and you fight valiantly, but are ultimately torn apart.<br/><br/>Hint: You can look into a room before entering it.<br/><br/>Remember to save!")
    ClearFramePicture
    finish
  ]]></function>
  <function name="game_win">
    msg ("You slither up the beanstalk and out the window—out to freedom in the long, cool grass where you feel most at home.<br/><br/>Congratulations: you have won Snake!")
    finish
  </function>
  <function name="humans_caught"><![CDATA[
    if (thesis.wasburned = false) {
      msg ("You got caught by the humans in this room! They don't seem very nice...guess you're hooped.<br/><br/>Hint: You can look into a room before entering it.<br/><br/>Remember to save!")
      finish
    }
  ]]></function>
  <function name="init_photoreceptor" parameters="photoreceptor">
    if (not photoreceptor.initialized) {
      // create list of light sources
      photoreceptor.lights_list = NewObjectList()
      photoreceptor.initialized = true
    }
  </function>
  <function name="change_rooms_snake">
    // This function handles movement into a "snake room" by storing a list
    // of the previously visited rooms, where index 0 is the snake's tail
    // and index (player.length-1) is the head
    if (player.game_start = 0) {
      curRoom = ObjectListItem(ListParents(player),0)
      if (not DoesInherit (curRoom, "not_snake_room")) {
        list_rooms
        // Remove the tail room at index 0
        tailRoom = ObjectListItem(player.snake_rooms, 0)
        list remove (player.snake_rooms, tailRoom)
        // Check whether the newest room is in the list already
        // indexHit corresponds to the snake's body part that we run into, if we run into it
        count = 0
        indexHit = 0
        foreach (rm, player.snake_rooms) {
          count = count + 1
          if (rm.name = curRoom.name) {
            indexHit = count
          }
        }
        // Now add in the new head room (we do this now even if we've bitten ourself)
        list add (player.snake_rooms, curRoom)
        if (indexHit = player.length-2) {
          // We hit our own body at the head, give a no turn back message
          msg ("You hear the sound of a heaving body dragging across the floor, but you proceed anyway.")
          game_over
        }
        else if (not indexHit = 0) {
          game_over
        }
        else {
          list_rooms
        }
      }
    }
    else {
      player.game_start = 0
    }
  </function>
  <function name="change_rooms_shake_lights" parameters="photoreceptor"><![CDATA[
    foreach (light, photoreceptor.lights_list) {
      if (light.remaining_dur > 0) {
        light.remaining_dur = (light.remaining_dur - 1)
        if (light.remaining_dur = 0) {
          msg ("A light has turned off.")
        }
      }
    }
  ]]></function>
  <walkthrough name="burnThesisWalk">
    <steps type="simplestringlist">
      go west
      west
      west
      west
      open small cage
      eat hamster
      north
      north
      take thesis
      east
      south
      east
      east
      turn on gas
      hug bunsen burner
      burn thesis
    </steps>
  </walkthrough>
  <walkthrough name="prototypeWalk">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="firstIkeaShelfWalk">
    <steps type="simplestringlist">
      go east
      go south
      go south
    </steps>
  </walkthrough>
  <walkthrough name="secondIkeaShelfWalk">
    <steps type="simplestringlist">
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
  <walkthrough name="twoRoomsWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="torchWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
    </steps>
  </walkthrough>
  <walkthrough name="toFinalLevel">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
</asl>