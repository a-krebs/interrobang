<!--Saved by Quest 5.4.4873.16527-->
<asl version="540" original="C:\Users\Owner\Documents\GitHub\interrobang\src\interrobang.aslx">
  <template name="LanguageId">en</template>
  <template name="UnresolvedObject">I can't see that.</template>
  <template name="UnresolvedLocation">You can't go there.</template>
  <template name="DefaultObjectDescription">Nothing out of the ordinary.</template>
  <template name="DefaultSelfDescription">Looking good.</template>
  <template name="SeeListHeader">You can see</template>
  <template name="GoListHeader">You can go</template>
  <template name="And">and</template>
  <template name="Or">or</template>
  <template name="NothingToUndo">Nothing to undo!</template>
  <template name="NotCarryingAnything">You are not carrying anything.</template>
  <template name="CarryingListHeader">You are carrying</template>
  <template name="UnrecognisedCommand">I don't understand your command.</template>
  <template name="YouAreIn">You are in</template>
  <template name="LookAt">Look at</template>
  <template name="Take">Take</template>
  <template name="SpeakTo">Speak to</template>
  <template name="Use">Use</template>
  <template name="Drop">Drop</template>
  <template name="GoTo">Go to</template>
  <template name="Go">Go</template>
  <template name="SwitchOn">Switch on</template>
  <template name="SwitchOff">Switch off</template>
  <template name="Open">Open</template>
  <template name="Close">Close</template>
  <template name="Eat">Eat</template>
  <template name="NeutralGender">it</template>
  <template name="MaleGender">he</template>
  <template name="FemaleGender">she</template>
  <template name="SelfGender">you</template>
  <template name="NeutralPluralGender">they</template>
  <template name="MalePluralGender">they</template>
  <template name="FemalePluralGender">they</template>
  <template name="NeutralArticle">it</template>
  <template name="MaleArticle">him</template>
  <template name="FemaleArticle">her</template>
  <template name="SelfArticle">yourself</template>
  <template name="NeutralPluralArticle">them</template>
  <template name="MalePluralArticle">them</template>
  <template name="FemalePluralArticle">them</template>
  <template name="SelfAlias">me</template>
  <template name="SelfAlt">myself; self</template>
  <template name="AllObjects">all; everything</template>
  <template name="ParserIgnorePrefixes">the; a; an</template>
  <template name="CannotDoThat">You can't do that.</template>
  <template name="Done">Done.</template>
  <template name="ContainerContentsPrefix">containing</template>
  <template name="SurfaceContentsPrefix">on which there is</template>
  <template name="LockedExit">That way is locked.</template>
  <template name="NoKey">You do not have the key.</template>
  <template name="UnlockMessage">Unlocked.</template>
  <template name="LockMessage">Locked.</template>
  <template name="DefaultOops">There is nothing to correct.</template>
  <template name="VerbObjectSeparator">with; using</template>
  <template name="DefaultMultiObjectVerb">That doesn't work.</template>
  <template name="MultiObjectVerbMenu">With which object?</template>
  <template name="UseOnMenu">On which object?</template>
  <template name="GiveToMenu">To which object?</template>
  <template name="NoObjectsAvailable">There are no objects available to do that with.</template>
  <template name="Yes">Yes</template>
  <template name="No">No</template>
  <template name="CompassNW">northwest</template>
  <template name="CompassN">north</template>
  <template name="CompassNE">northeast</template>
  <template name="CompassW">west</template>
  <template name="CompassE">east</template>
  <template name="CompassSW">southwest</template>
  <template name="CompassS">south</template>
  <template name="CompassSE">southeast</template>
  <template name="CompassUp">up</template>
  <template name="CompassDown">down</template>
  <template name="CompassIn">in</template>
  <template name="CompassOut">out</template>
  <template name="CompassDirectionPrefix"></template>
  <template name="CompassDirectionSuffix"></template>
  <template name="UpDownDirectionPrefix"></template>
  <template name="UpDownDirectionSuffix"></template>
  <template name="InOutDirectionPrefix"></template>
  <template name="InOutDirectionSuffix"></template>
  <template name="CompassNWShort">nw</template>
  <template name="CompassNShort">n</template>
  <template name="CompassNEShort">ne</template>
  <template name="CompassWShort">w</template>
  <template name="CompassEShort">e</template>
  <template name="CompassSWShort">sw</template>
  <template name="CompassSShort">s</template>
  <template name="CompassSEShort">se</template>
  <template name="CompassUpShort">u</template>
  <template name="CompassDownShort">d</template>
  <template name="CompassInShort"></template>
  <template name="CompassOutShort">o</template>
  <template name="InventoryLabel">Inventory</template>
  <template name="PlacesObjectsLabel">Places and Objects</template>
  <template name="CompassLabel">Compass</template>
  <template name="InButtonLabel">in</template>
  <template name="OutButtonLabel">out</template>
  <template name="EmptyListLabel">(empty)</template>
  <template name="NothingSelectedLabel">(nothing selected)</template>
  <template name="TypeHereLabel">Type here...</template>
  <template name="ContinueLabel">Continue...</template>
  <template name="go"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></template>
  <template name="lookdir"><![CDATA[^look (?<exit>north|east|south|west|northeast|northwest|southeast|southwest|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></template>
  <template name="look">^look$|^l$</template>
  <template name="lookat">look at; x; examine; exam; ex</template>
  <template name="take">take; get; pick up</template>
  <template name="undo">^undo$</template>
  <template name="inventory">^i$|^inv$|^inventory$</template>
  <template name="quit">^quit$</template>
  <template name="drop">drop</template>
  <template name="use">use</template>
  <template name="speakto">speak to; speak; talk to; talk</template>
  <template name="open">open</template>
  <template name="close">close</template>
  <template name="put"><![CDATA[^put (?<object1>.*) (on|in) (?<object2>.*)$]]></template>
  <template name="removefrom"><![CDATA[^remove (?<object1>.*) from (?<object2>.*)$]]></template>
  <template name="ask"><![CDATA[^ask (?<object>.*) about (?<text>.*)$]]></template>
  <template name="tell"><![CDATA[^tell (?<object>.*) about (?<text>.*)$]]></template>
  <template name="oops"><![CDATA[^oops (?<text>.*)$]]></template>
  <template name="buy">buy</template>
  <template name="climb">climb</template>
  <template name="drink">drink</template>
  <template name="eat">eat</template>
  <template name="givesingle">give</template>
  <template name="give"><![CDATA[^give (?<object1>.*) to (?<object2>.*)$]]></template>
  <template name="hit">hit</template>
  <template name="kill">kill</template>
  <template name="kiss">kiss</template>
  <template name="knock">knock</template>
  <template name="lick">lick</template>
  <template name="lie">lie on; lie upon; lie down on; lie down upon</template>
  <template name="listento">listen to</template>
  <template name="lock">lock</template>
  <template name="move">move</template>
  <template name="pull">pull</template>
  <template name="push">push</template>
  <template name="read">read</template>
  <template name="search">search</template>
  <template name="show">show</template>
  <template name="sit">sit on; sit upon; sit down on; sit down upon</template>
  <template name="smell">smell; sniff</template>
  <template name="taste">taste</template>
  <template name="throw">throw</template>
  <template name="tie">tie</template>
  <template name="touch">touch</template>
  <template name="turnon">turn on; turn #object# on; switch on; switch #object# on</template>
  <template name="turnoff">turn off; turn #object# off; switch off; switch #object# off</template>
  <template name="turn">turn</template>
  <template name="unlock">unlock</template>
  <template name="untie">untie</template>
  <template name="useon"><![CDATA[^use (?<object1>.*) (on|with) (?<object2>.*)$]]></template>
  <template name="wear">wear</template>
  <template name="listen">^listen$</template>
  <template name="DefaultListen">You can't hear much.</template>
  <template name="jump">^jump$</template>
  <template name="DefaultJump">You jump, but nothing happens.</template>
  <template name="sitdown">^sit$|^sit down$</template>
  <template name="DefaultSitDown">No time for lounging about now.</template>
  <template name="liedown">^lie$|^lie down$</template>
  <template name="DefaultLieDown">No time for lounging about now.</template>
  <template name="sleep">^sleep$|^rest$</template>
  <template name="DefaultSleep">No time for lounging about now.</template>
  <template name="wait">^wait$|^z$</template>
  <template name="DefaultWait">Time passes.</template>
  <template name="xyzzy">^xyzzy$</template>
  <template name="DefaultXyzzy">Surprisingly, absolutely nothing happens.</template>
  <template name="help">^help$|^\?$</template>
  <template name="save">^save$</template>
  <template name="DefaultHelp"><![CDATA[<u>Quick Help</u><br/><br/>
<b>- Objects:</b>  Try LOOK AT..., SPEAK TO..., TAKE..., DROP..., OPEN..., GIVE... TO..., USE... ON/WITH...<br/>
<b>- Inventory:</b>  See which items you are carrying by typing I, INV or INVENTORY.<br/>
<b>- Moving around:</b>  Press the compass buttons, or type GO NORTH, SOUTH, E, GO TO...<br/>
<b>- Shortcuts:</b>  Press the up arrow and down arrow to scroll through commands you have already typed in. Try X... as a shortcut for LOOK AT...]]></template>
  <template name="LanguageSpecificObjectTypes"></template>
  <template name="EditorVerbDefaultExpression">"You can't #verb# " + object.article + "."</template>
  <template name="EditorImageFormats">*.jpg;*.jpeg;*.png;*.gif</template>
  <template name="HTMLColorNames">AliceBlue;AntiqueWhite;Aqua;Aquamarine;Azure;Beige;Bisque;Black;BlanchedAlmond;Blue;BlueViolet;Brown;BurlyWood;CadetBlue;Chartreuse;Chocolate;Coral;CornflowerBlue;Cornsilk;Crimson;Cyan;DarkBlue;DarkCyan;DarkGoldenRod;DarkGray;DarkGrey;DarkGreen;DarkKhaki;DarkMagenta;DarkOliveGreen;Darkorange;DarkOrchid;DarkRed;DarkSalmon;DarkSeaGreen;DarkSlateBlue;DarkSlateGray;DarkSlateGrey;DarkTurquoise;DarkViolet;DeepPink;DeepSkyBlue;DimGray;DimGrey;DodgerBlue;FireBrick;FloralWhite;ForestGreen;Fuchsia;Gainsboro;GhostWhite;Gold;GoldenRod;Gray;Grey;Green;GreenYellow;HoneyDew;HotPink;IndianRed ;Indigo ;Ivory;Khaki;Lavender;LavenderBlush;LawnGreen;LemonChiffon;LightBlue;LightCoral;LightCyan;LightGoldenRodYellow;LightGray;LightGrey;LightGreen;LightPink;LightSalmon;LightSeaGreen;LightSkyBlue;LightSlateGray;LightSlateGrey;LightSteelBlue;LightYellow;Lime;LimeGreen;Linen;Magenta;Maroon;MediumAquaMarine;MediumBlue;MediumOrchid;MediumPurple;MediumSeaGreen;MediumSlateBlue;MediumSpringGreen;MediumTurquoise;MediumVioletRed;MidnightBlue;MintCream;MistyRose;Moccasin;NavajoWhite;Navy;OldLace;Olive;OliveDrab;Orange;OrangeRed;Orchid;PaleGoldenRod;PaleGreen;PaleTurquoise;PaleVioletRed;PapayaWhip;PeachPuff;Peru;Pink;Plum;PowderBlue;Purple;Red;RosyBrown;RoyalBlue;SaddleBrown;Salmon;SandyBrown;SeaGreen;SeaShell;Sienna;Silver;SkyBlue;SlateBlue;SlateGray;SlateGrey;Snow;SpringGreen;SteelBlue;Tan;Teal;Thistle;Tomato;Turquoise;Violet;Wheat;White;WhiteSmoke;Yellow;YellowGreen</template>
  <dynamictemplate name="TakeSuccessful">"You pick " + object.article + " up."</dynamictemplate>
  <dynamictemplate name="TakeUnsuccessful">"You can't take " + object.article + "."</dynamictemplate>
  <dynamictemplate name="FullInventory">WriteVerb(object, "be") + " to heavy to be taken."</dynamictemplate>
  <dynamictemplate name="MaxObjectsInInventory">"You can't carry any more items."</dynamictemplate>
  <dynamictemplate name="MaxObjectsInContainer">"You can't put more items in " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DropSuccessful">"You drop " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DropUnsuccessful">"You can't drop " + object.article + "."</dynamictemplate>
  <dynamictemplate name="AlreadyTaken">"You are already carrying " + object.article + "."</dynamictemplate>
  <dynamictemplate name="NotCarrying">"You are not carrying " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantUse">"You can't use " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantGive">"You can't give " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSpeakTo">WriteVerb(object, "say") + " nothing."</dynamictemplate>
  <dynamictemplate name="ObjectNotOpen">CapFirst(GetDisplayAlias(object)) + " " + Conjugate(object, "be") + " not open."</dynamictemplate>
  <dynamictemplate name="AlreadyOpen">WriteVerb(object, "be") + " already open."</dynamictemplate>
  <dynamictemplate name="AlreadyClosed">WriteVerb(object, "be") + " already closed."</dynamictemplate>
  <dynamictemplate name="CantOpen">"You can't open " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantClose">"You can't close " + object.article + "."</dynamictemplate>
  <dynamictemplate name="OpenSuccessful">"You open " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CloseSuccessful">"You close " + object.article + "."</dynamictemplate>
  <dynamictemplate name="AlreadyThere">WriteVerb(object, "be") + " already there."</dynamictemplate>
  <dynamictemplate name="ObjectContains">WriteVerb(object, "contain")</dynamictemplate>
  <dynamictemplate name="ContainerFull">WriteVerb(object, "be") + " full."</dynamictemplate>
  <dynamictemplate name="DisambiguateMenu">"Please choose which '" + text + "' you mean:"</dynamictemplate>
  <dynamictemplate name="UndoTurn">"Undo: " + text</dynamictemplate>
  <dynamictemplate name="DefaultAsk">WriteVerb(object, "do") + " not reply."</dynamictemplate>
  <dynamictemplate name="DefaultTell">WriteVerb(object, "do") + " not reply."</dynamictemplate>
  <dynamictemplate name="LockedObject">WriteVerb(object, "be") + " locked."</dynamictemplate>
  <dynamictemplate name="AlreadyLocked">WriteVerb(object, "be") + " already locked."</dynamictemplate>
  <dynamictemplate name="AlreadyUnlocked">WriteVerb(object, "be") + " already unlocked."</dynamictemplate>
  <dynamictemplate name="CannotLockOpen">"You cannot lock " + object.article + " when " + object.gender + " " + Conjugate(object, "be") + " open."</dynamictemplate>
  <dynamictemplate name="AlreadySwitchedOn">WriteVerb(object, "be") + " already switched on."</dynamictemplate>
  <dynamictemplate name="AlreadySwitchedOff">WriteVerb(object, "be") + " already switched off."</dynamictemplate>
  <dynamictemplate name="SwitchedOn">"You switch " + object.article + " on."</dynamictemplate>
  <dynamictemplate name="SwitchedOff">"You switch " + object.article + " off."</dynamictemplate>
  <dynamictemplate name="Eaten">"You eat " + object.article + "."</dynamictemplate>
  <dynamictemplate name="ObjectDoesNotContain">CapFirst(GetDisplayAlias(object1)) + " " + Conjugate(object1, "do") + " not contain " + GetDisplayAlias(object2) + "."</dynamictemplate>
  <dynamictemplate name="YouLooking">"You are looking " + text +"."</dynamictemplate>
  <dynamictemplate name="LookAtDarkness">"It is too dark to make anything out."</dynamictemplate>
  <dynamictemplate name="DefaultBuy">"You can't buy " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultClimb">"You can't climb " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultDrink">"You can't drink " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultEat">"You can't eat " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultGive">WriteVerb(object1, "do") + " not want " + object2.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultHit">"You can't hit " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKill">"You can't kill " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKiss">"You can't kiss " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKnock">"You can't knock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultLick">"You can't lick " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultLie">"You can't lie on " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultListenTo">"You listen, but " + object.article + " makes no sound."</dynamictemplate>
  <dynamictemplate name="DefaultLock">"You can't lock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultMove">"You can't move " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultPull">"You can't pull " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultPush">"You can't push " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultRead">"You can't read " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSearch">"You can't search " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultShow">"You can't show " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSit">"You can't sit on " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSmell">"You sniff, but " + object.article + " doesn't smell of much."</dynamictemplate>
  <dynamictemplate name="DefaultTaste">"You can't taste " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultThrow">"You can't throw " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTie">"You can't tie " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTouch">"You can't touch " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTurnOn">"You can't turn " + object.article + " on."</dynamictemplate>
  <dynamictemplate name="DefaultTurnOff">"You can't turn " + object.article + " off."</dynamictemplate>
  <dynamictemplate name="DefaultTurn">"You can't turn " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUnlock">"You can't unlock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUntie">"You can't untie " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUseOn">"You can't use " + object2.article + " that way."</dynamictemplate>
  <dynamictemplate name="DefaultWear">"You can't wear " + object.article + "."</dynamictemplate>
  <delegate name="AddScript" parameters="object" type="" />
  <delegate name="AssociatedScope" parameters="" type="objectlist" />
  <game name="Snack">
    <gameid>39702944-ce39-4243-8459-2aaad4c4d15e</gameid>
    <version>0.2.1</version>
    <firstpublished>2014</firstpublished>
    <category type="string"></category>
    <gridmap />
    <cover>snake logo.png</cover>
    <author>Team Interrobang</author>
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <start type="script">
      init_photoreceptor (photoreceptor0)
      player.game_start = 1
      player.snake_rooms = NewObjectList()
      curRoom = ObjectListItem(ListParents(player),0)
      for (index, 0, player.length-1) {
        list add (player.snake_rooms, curRoom)
      }
      msg ("Groggy, you awaken in an unfamiliar room on a cold tile floor of green. You feel slimy and realize you have no idea how you got here. Your blood runs cold.Pushing away the regret of whatever you may have done last night, you first notice the emptiness of the place, and the foreboding feeling that something is coming after you.")
    </start>
    <lastoutputsection type="int">131</lastoutputsection>
    <currentturnoutputsection>section131</currentturnoutputsection>
    <pov type="object">player</pov>
    <verbattributes type="stringlist">
      <value>speak</value>
      <value>buy</value>
      <value>climb</value>
      <value>drink</value>
      <value>eat</value>
      <value>hit</value>
      <value>kill</value>
      <value>kiss</value>
      <value>knock</value>
      <value>lick</value>
      <value>lie</value>
      <value>listen</value>
      <value>lock</value>
      <value>move</value>
      <value>pull</value>
      <value>push</value>
      <value>read</value>
      <value>search</value>
      <value>show</value>
      <value>sit</value>
      <value>smell</value>
      <value>taste</value>
      <value>throw</value>
      <value>tie</value>
      <value>touch</value>
      <value>turnon</value>
      <value>turnoff</value>
      <value>turn</value>
      <value>unlock</value>
      <value>untie</value>
      <value>wear</value>
      <value>consume</value>
      <value>swallow</value>
      <value>hug</value>
      <value>attack</value>
      <value>inspect</value>
      <value>burn</value>
      <value>pushoffshelf</value>
      <value>climbup</value>
      <value>shake</value>
      <value>poweron</value>
      <value>drag</value>
    </verbattributes>
    <verbattributeslookup type="objectdictionary">
      <item>
        <key>speak</key>
        <value>speak</value>
      </item>
      <item>
        <key>buy</key>
        <value>buy</value>
      </item>
      <item>
        <key>climb</key>
        <value>climb</value>
      </item>
      <item>
        <key>drink</key>
        <value>drink</value>
      </item>
      <item>
        <key>eat</key>
        <value>eat</value>
      </item>
      <item>
        <key>hit</key>
        <value>hit</value>
      </item>
      <item>
        <key>kill</key>
        <value>kill</value>
      </item>
      <item>
        <key>kiss</key>
        <value>kiss</value>
      </item>
      <item>
        <key>knock</key>
        <value>knock</value>
      </item>
      <item>
        <key>lick</key>
        <value>lick</value>
      </item>
      <item>
        <key>lie</key>
        <value>lieon</value>
      </item>
      <item>
        <key>listen</key>
        <value>listento</value>
      </item>
      <item>
        <key>lock</key>
        <value>lock</value>
      </item>
      <item>
        <key>move</key>
        <value>move</value>
      </item>
      <item>
        <key>pull</key>
        <value>pull</value>
      </item>
      <item>
        <key>push</key>
        <value>push</value>
      </item>
      <item>
        <key>read</key>
        <value>read</value>
      </item>
      <item>
        <key>search</key>
        <value>search</value>
      </item>
      <item>
        <key>show</key>
        <value>show</value>
      </item>
      <item>
        <key>sit</key>
        <value>siton</value>
      </item>
      <item>
        <key>smell</key>
        <value>smell</value>
      </item>
      <item>
        <key>taste</key>
        <value>taste</value>
      </item>
      <item>
        <key>throw</key>
        <value>throw</value>
      </item>
      <item>
        <key>tie</key>
        <value>tie</value>
      </item>
      <item>
        <key>touch</key>
        <value>touch</value>
      </item>
      <item>
        <key>turnon</key>
        <value>turnon</value>
      </item>
      <item>
        <key>turnoff</key>
        <value>turnoff</value>
      </item>
      <item>
        <key>turn</key>
        <value>turn</value>
      </item>
      <item>
        <key>unlock</key>
        <value>unlock</value>
      </item>
      <item>
        <key>untie</key>
        <value>untie</value>
      </item>
      <item>
        <key>wear</key>
        <value>wear</value>
      </item>
      <item>
        <key>consume</key>
        <value>k9</value>
      </item>
      <item>
        <key>swallow</key>
        <value>k10</value>
      </item>
      <item>
        <key>hug</key>
        <value>k11</value>
      </item>
      <item>
        <key>attack</key>
        <value>k12</value>
      </item>
      <item>
        <key>inspect</key>
        <value>k13</value>
      </item>
      <item>
        <key>burn</key>
        <value>k14</value>
      </item>
      <item>
        <key>pushoffshelf</key>
        <value>k19</value>
      </item>
      <item>
        <key>climbup</key>
        <value>k20</value>
      </item>
      <item>
        <key>shake</key>
        <value>k22</value>
      </item>
      <item>
        <key>poweron</key>
        <value>k23</value>
      </item>
      <item>
        <key>drag</key>
        <value>k24</value>
      </item>
    </verbattributeslookup>
    <displayroomdescriptiononstart type="boolean">false</displayroomdescriptiononstart>
    <lastturnoutputsection>section130</lastturnoutputsection>
    <lastobjects type="objectlist"></lastobjects>
    <timeelapsed type="int">19</timeelapsed>
    <lastlinkid type="int">43</lastlinkid>
  </game>
  <command name="lookat">
    <displayverb>look at</displayverb>
    <pattern><![CDATA[^look at (?<object>.*?)$|^x (?<object>.*?)$|^examine (?<object>.*?)$|^exam (?<object>.*?)$|^ex (?<object>.*?)$]]></pattern>
    <script type="script">
      if (GetBoolean(object, "hidechildren")) {
        object.hidechildren = false
      }
      if (TypeOf(object, "look") = "script") {
        do (object, "look")
      }
      else {
        lookdesc = ""
        if (HasString(object, "look")) {
          lookdesc = object.look
        }
        if (LengthOf(lookdesc) = 0) {
          lookdesc = Template("DefaultObjectDescription")
        }
        if (GetBoolean(object, "switchedon")) {
          if (HasString(object, "switchedondesc")) {
            lookdesc = lookdesc + " " + object.switchedondesc
          }
        }
        else {
          if (HasString(object, "switchedoffdesc")) {
            lookdesc = lookdesc + " " + object.switchedoffdesc
          }
        }
        isDark = CheckDarkness()
        if (isDark and not GetBoolean(object, "lightsource")) {
          lookdesc = DynamicTemplate("LookAtDarkness", object)
        }
        msg (lookdesc)
      }
      ListObjectContents (object)
    </script>
  </command>
  <command name="take">
    <displayverb>take</displayverb>
    <pattern><![CDATA[^take (?<object>.*?)$|^get (?<object>.*?)$|^pick up (?<object>.*?)$]]></pattern>
    <multiple type="AssociatedScope">
      return (ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov))
    </multiple>
    <script type="script">
      foreach (obj, object) {
        DoTake (obj, multiple)
      }
    </script>
  </command>
  <command name="drop">
    <displayverb>drop</displayverb>
    <pattern><![CDATA[^drop (?<object>.*?)$]]></pattern>
    <multiple type="AssociatedScope">
      return (ScopeInventory())
    </multiple>
    <script type="script">
      foreach (obj, object) {
        DoDrop (obj, multiple)
      }
    </script>
  </command>
  <command name="use">
    <displayverb>use</displayverb>
    <pattern><![CDATA[^use (?<object>.*?)$]]></pattern>
    <script type="script"><![CDATA[
      if (HasScript(object, "use")) {
        do (object, "use")
      }
      else {
        if (GetBoolean(object, "use")) {
          menu = NewStringDictionary()
          candidates = NewObjectList()
          candidates = CreateUseMenuList (object)
          if (ListCount(candidates) = 0) {
            msg (Template("NoObjectsAvailable"))
          }
          else {
            GenerateMenuChoices (menu, candidates)
            game.pov.usemenuobject = object
            if (HasString(object, "usemenuprompt")) {
              menucaption = object.usemenuprompt
            }
            else {
              menucaption = Template("UseOnMenu")
            }
            ShowMenu (menucaption, menu, true) {
              if (result <> null) {
                HandleUseOn (game.pov.usemenuobject, GetObject(result))
                game.pov.usemenuobject = null
              }
            }
          }
        }
        else {
          msg (DynamicTemplate("CantUse", object))
        }
      }
    ]]></script>
  </command>
  <command name="undo">
    <pattern>^undo$</pattern>
    <isundo />
    <script type="script">
      undo
    </script>
  </command>
  <command name="inventory">
    <pattern>^i$|^inv$|^inventory$</pattern>
    <script type="script">
      list = FormatObjectList(Template("CarryingListHeader"), game.pov, Template("And"), ".", true)
      if (list = "") {
        msg (Template("NotCarryingAnything"))
      }
      else {
        msg (list)
      }
    </script>
  </command>
  <command name="look">
    <pattern>^look$|^l$</pattern>
    <script type="script">
      ShowRoomDescription
    </script>
  </command>
  <command name="lookdir">
    <pattern><![CDATA[^look (?<exit>north|east|south|west|northeast|northwest|southeast|southwest|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <script type="script"><![CDATA[
      if (HasScript(exit, "look")) {
        do (exit, "look")
      }
      else {
        message = DynamicTemplate("YouLooking",exit.alias)
        if (HasString(exit, "look")) {
          if (exit.look <> "") {
            message = exit.look
          }
        }
        if (exit.locked) {
          if (HasString(exit,"lockmessage")) {
            lockmessage = exit.lockmessage
          }
          else {
            lockmessage = Template("LockedExit")
          }
          msg (message+" "+lockmessage)
        }
        else {
          msg (message)
        }
      }
    ]]></script>
  </command>
  <command name="quit">
    <pattern>^quit$</pattern>
    <script type="script">
      request (Quit, "")
    </script>
  </command>
  <command name="go">
    <pattern><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <unresolved>You can't go there.</unresolved>
    <script type="script">
      if (exit.visible) {
        if (exit.locked) {
          msg (exit.lockmessage)
        }
        else if (exit.runscript) {
          if (HasScript(exit, "script")) {
            do (exit, "script")
          }
        }
        else if (exit.lookonly) {
          msg ("You can't go there.")
        }
        else {
          game.pov.parent = exit.to
        }
      }
      else {
        msg ("You can't go there.")
      }
    </script>
  </command>
  <command name="open">
    <displayverb>open</displayverb>
    <pattern><![CDATA[^open (?<object>.*?)$]]></pattern>
    <script type="script">
      TryOpenClose (true, object)
    </script>
  </command>
  <command name="close">
    <displayverb>close</displayverb>
    <pattern><![CDATA[^close (?<object>.*?)$]]></pattern>
    <script type="script">
      TryOpenClose (false, object)
    </script>
  </command>
  <command name="put">
    <pattern><![CDATA[^put (?<object1>.*) (on|in) (?<object2>.*)$]]></pattern>
    <script type="script">
      if (object1.parent = object2) {
        msg (DynamicTemplate("AlreadyThere", object1))
      }
      else if (not ListContains(ScopeInventory(), object1)) {
        msg (DynamicTemplate("NotCarrying", object1))
      }
      else if (not ListContains(ScopeReachable(), object1)) {
        msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object1)))
      }
      else if (not ListContains(ScopeReachable(), object2)) {
        msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object2)))
      }
      else if (not object2.container) {
        msg (Template("CannotDoThat"))
      }
      else if (not object2.isopen) {
        msg (DynamicTemplate("ObjectNotOpen", object2))
      }
      else {
        if (GetBoolean(object2, "hidechildren")) {
          object2.hidechildren = false
        }
        if (HasDelegateImplementation(object2, "addscript")) {
          rundelegate (object2, "addscript", object1)
        }
        else {
          object1.parent = object2
          msg (Template("Done"))
        }
      }
    </script>
  </command>
  <command name="removefrom">
    <pattern><![CDATA[^remove (?<object1>.*) from (?<object2>.*)$]]></pattern>
    <script type="script">
      if (not Contains(object2, object1)) {
        msg (DynamicTemplate("ObjectDoesNotContain", object2, object1))
      }
      else {
        DoTake (object1, false)
      }
    </script>
  </command>
  <command name="givesingle">
    <displayverb>give</displayverb>
    <pattern><![CDATA[^give (?<object>.*?)$]]></pattern>
    <script type="script"><![CDATA[
      if (HasScript(object, "givesingle")) {
        do (object, "givesingle")
      }
      else {
        if (GetBoolean(object, "givesingle")) {
          menu = NewStringDictionary()
          candidates = NewObjectList()
          candidates = CreateGiveMenuList (object)
          if (ListCount(candidates) = 0) {
            msg (Template("NoObjectsAvailable"))
          }
          else {
            GenerateMenuChoices (menu, candidates)
            game.pov.givemenuobject = object
            if (HasString(object, "givemenuprompt")) {
              menucaption = object.givemenuprompt
            }
            else {
              menucaption = Template("GiveToMenu")
            }
            ShowMenu (menucaption, menu, true) {
              if (result <> null) {
                HandleGiveTo (game.pov.givemenuobject, GetObject(result))
                game.pov.givemenuobject = null
              }
            }
          }
        }
        else {
          msg (DynamicTemplate("CantGive", object))
        }
      }
    ]]></script>
  </command>
  <command name="give">
    <pattern><![CDATA[^give (?<object1>.*) to (?<object2>.*)$]]></pattern>
    <script type="script">
      HandleGiveTo (object1, object2)
    </script>
  </command>
  <command name="useon">
    <pattern><![CDATA[^use (?<object1>.*) (on|with) (?<object2>.*)$]]></pattern>
    <script type="script">
      HandleUseOn (object1, object2)
    </script>
  </command>
  <command name="ask">
    <pattern><![CDATA[^ask (?<object>.*) about (?<text>.*)$]]></pattern>
    <script type="script">
      DoAskTell (object, text, "ask", "askdefault", "DefaultAsk")
    </script>
  </command>
  <command name="tell">
    <pattern><![CDATA[^tell (?<object>.*) about (?<text>.*)$]]></pattern>
    <script type="script">
      DoAskTell (object, text, "tell", "telldefault", "DefaultTell")
    </script>
  </command>
  <command name="oops">
    <pattern><![CDATA[^oops (?<text>.*)$]]></pattern>
    <isoops />
    <script type="script"><![CDATA[
      hasoops = false
      if (HasAttribute(game, "unresolvedcommand")) {
        if (game.unresolvedcommand <> null) {
          hasoops = true
        }
      }
      if (not hasoops) {
        msg (Template("DefaultOops"))
      }
      else {
        dictionary remove (game.unresolvedcommandvarlist, game.unresolvedcommandkey)
        dictionary add (game.unresolvedcommandvarlist, game.unresolvedcommandkey, text)
        HandleSingleCommandPattern ("", game.unresolvedcommand, game.unresolvedcommandvarlist)
      }
    ]]></script>
  </command>
  <verb name="speak">
    <displayverb>speak to</displayverb>
    <property>speak</property>
    <defaulttemplate>DefaultSpeakTo</defaulttemplate>
    <pattern><![CDATA[^speak to (?<object>.*?)( (with|using) (?<object2>.*))?$|^speak (?<object>.*?)( (with|using) (?<object2>.*))?$|^talk to (?<object>.*?)( (with|using) (?<object2>.*))?$|^talk (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="buy">
    <displayverb>buy</displayverb>
    <property>buy</property>
    <defaulttemplate>DefaultBuy</defaulttemplate>
    <pattern><![CDATA[^buy (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="climb">
    <displayverb>climb</displayverb>
    <property>climb</property>
    <defaulttemplate>DefaultClimb</defaulttemplate>
    <pattern><![CDATA[^climb (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="drink">
    <displayverb>drink</displayverb>
    <property>drink</property>
    <defaulttemplate>DefaultDrink</defaulttemplate>
    <pattern><![CDATA[^drink (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="eat">
    <displayverb>eat</displayverb>
    <property>eat</property>
    <defaulttemplate>DefaultEat</defaulttemplate>
    <pattern><![CDATA[^eat (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="hit">
    <displayverb>hit</displayverb>
    <property>hit</property>
    <defaulttemplate>DefaultHit</defaulttemplate>
    <pattern><![CDATA[^hit (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="kill">
    <displayverb>kill</displayverb>
    <property>kill</property>
    <defaulttemplate>DefaultKill</defaulttemplate>
    <pattern><![CDATA[^kill (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="kiss">
    <displayverb>kiss</displayverb>
    <property>kiss</property>
    <defaulttemplate>DefaultKiss</defaulttemplate>
    <pattern><![CDATA[^kiss (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="knock">
    <displayverb>knock</displayverb>
    <property>knock</property>
    <defaulttemplate>DefaultKnock</defaulttemplate>
    <pattern><![CDATA[^knock (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="lick">
    <displayverb>lick</displayverb>
    <property>lick</property>
    <defaulttemplate>DefaultLick</defaulttemplate>
    <pattern><![CDATA[^lick (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="lieon">
    <displayverb>lie on</displayverb>
    <property>lie</property>
    <defaulttemplate>DefaultLie</defaulttemplate>
    <pattern><![CDATA[^lie on (?<object>.*?)( (with|using) (?<object2>.*))?$|^lie upon (?<object>.*?)( (with|using) (?<object2>.*))?$|^lie down on (?<object>.*?)( (with|using) (?<object2>.*))?$|^lie down upon (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="listento">
    <displayverb>listen to</displayverb>
    <property>listen</property>
    <defaulttemplate>DefaultListenTo</defaulttemplate>
    <pattern><![CDATA[^listen to (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="lock">
    <displayverb>lock</displayverb>
    <property>lock</property>
    <defaulttemplate>DefaultLock</defaulttemplate>
    <pattern><![CDATA[^lock (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="move">
    <displayverb>move</displayverb>
    <property>move</property>
    <defaulttemplate>DefaultMove</defaulttemplate>
    <pattern><![CDATA[^move (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="pull">
    <displayverb>pull</displayverb>
    <property>pull</property>
    <defaulttemplate>DefaultPull</defaulttemplate>
    <pattern><![CDATA[^pull (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="push">
    <displayverb>push</displayverb>
    <property>push</property>
    <defaulttemplate>DefaultPush</defaulttemplate>
    <pattern><![CDATA[^push (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="read">
    <displayverb>read</displayverb>
    <property>read</property>
    <defaulttemplate>DefaultRead</defaulttemplate>
    <pattern><![CDATA[^read (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="search">
    <displayverb>search</displayverb>
    <property>search</property>
    <defaulttemplate>DefaultSearch</defaulttemplate>
    <pattern><![CDATA[^search (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="show">
    <displayverb>show</displayverb>
    <property>show</property>
    <defaulttemplate>DefaultShow</defaulttemplate>
    <pattern><![CDATA[^show (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="siton">
    <displayverb>sit on</displayverb>
    <property>sit</property>
    <defaulttemplate>DefaultSit</defaulttemplate>
    <pattern><![CDATA[^sit on (?<object>.*?)( (with|using) (?<object2>.*))?$|^sit upon (?<object>.*?)( (with|using) (?<object2>.*))?$|^sit down on (?<object>.*?)( (with|using) (?<object2>.*))?$|^sit down upon (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="smell">
    <displayverb>smell</displayverb>
    <property>smell</property>
    <defaulttemplate>DefaultSmell</defaulttemplate>
    <pattern><![CDATA[^smell (?<object>.*?)( (with|using) (?<object2>.*))?$|^sniff (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="taste">
    <displayverb>taste</displayverb>
    <property>taste</property>
    <defaulttemplate>DefaultTaste</defaulttemplate>
    <pattern><![CDATA[^taste (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="throw">
    <displayverb>throw</displayverb>
    <property>throw</property>
    <defaulttemplate>DefaultThrow</defaulttemplate>
    <pattern><![CDATA[^throw (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="tie">
    <displayverb>tie</displayverb>
    <property>tie</property>
    <defaulttemplate>DefaultTie</defaulttemplate>
    <pattern><![CDATA[^tie (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="touch">
    <displayverb>touch</displayverb>
    <property>touch</property>
    <defaulttemplate>DefaultTouch</defaulttemplate>
    <pattern><![CDATA[^touch (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="turnon">
    <displayverb>turn on</displayverb>
    <property>turnon</property>
    <defaulttemplate>DefaultTurnOn</defaulttemplate>
    <pattern><![CDATA[^turn on (?<object>.*?)( (with|using) (?<object2>.*))?$|^turn (?<object>.*?) on( (with|using) (?<object2>.*))?$|^switch on (?<object>.*?)( (with|using) (?<object2>.*))?$|^switch (?<object>.*?) on( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="turnoff">
    <displayverb>turn off</displayverb>
    <property>turnoff</property>
    <defaulttemplate>DefaultTurnOff</defaulttemplate>
    <pattern><![CDATA[^turn off (?<object>.*?)( (with|using) (?<object2>.*))?$|^turn (?<object>.*?) off( (with|using) (?<object2>.*))?$|^switch off (?<object>.*?)( (with|using) (?<object2>.*))?$|^switch (?<object>.*?) off( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="turn">
    <displayverb>turn</displayverb>
    <property>turn</property>
    <defaulttemplate>DefaultTurn</defaulttemplate>
    <pattern><![CDATA[^turn (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="unlock">
    <displayverb>unlock</displayverb>
    <property>unlock</property>
    <defaulttemplate>DefaultUnlock</defaulttemplate>
    <pattern><![CDATA[^unlock (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="untie">
    <displayverb>untie</displayverb>
    <property>untie</property>
    <defaulttemplate>DefaultUntie</defaulttemplate>
    <pattern><![CDATA[^untie (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <verb name="wear">
    <displayverb>wear</displayverb>
    <property>wear</property>
    <defaulttemplate>DefaultWear</defaulttemplate>
    <pattern><![CDATA[^wear (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
  </verb>
  <command name="listen">
    <pattern>^listen$</pattern>
    <script type="script">
      msg (Template("DefaultListen"))
    </script>
  </command>
  <command name="jump">
    <pattern>^jump$</pattern>
    <script type="script">
      msg (Template("DefaultJump"))
    </script>
  </command>
  <command name="sit">
    <pattern>^sit$|^sit down$</pattern>
    <script type="script">
      msg (Template("DefaultSitDown"))
    </script>
  </command>
  <command name="lie">
    <pattern>^lie$|^lie down$</pattern>
    <script type="script">
      msg (Template("DefaultLieDown"))
    </script>
  </command>
  <command name="sleep">
    <pattern>^sleep$|^rest$</pattern>
    <script type="script">
      msg (Template("DefaultSleep"))
    </script>
  </command>
  <command name="wait">
    <pattern>^wait$|^z$</pattern>
    <script type="script">
      msg (Template("DefaultWait"))
    </script>
  </command>
  <command name="xyzzy">
    <pattern>^xyzzy$</pattern>
    <script type="script">
      msg (Template("DefaultXyzzy"))
    </script>
  </command>
  <command name="help">
    <pattern>^help$|^\?$</pattern>
    <script type="script">
      msg (Template("DefaultHelp"))
    </script>
  </command>
  <command name="save">
    <pattern>^save$</pattern>
    <script type="script">
      request (RequestSave, "")
    </script>
  </command>
  <command name="k4">
    <pattern>^debug$</pattern>
    <script type="script">
      if (player.show_debug = 0) {
        player.show_debug = 1
        msg ("Debug now on. Cheater.")
      }
      else {
        player.show_debug = 0
        msg ("Debug now off.")
      }
    </script>
  </command>
  <command name="k5">
    <pattern>^test_changerms$</pattern>
    <script type="script">
      change_rooms
    </script>
  </command>
  <command name="k6">
    <pattern>^test_clearrms$</pattern>
    <script type="script">
      clear_rooms
    </script>
  </command>
  <command name="k7">
    <pattern>^test_grow$</pattern>
    <script type="script">
      grow_snake
    </script>
  </command>
  <command name="k8">
    <pattern>^test_list$</pattern>
    <script type="script">
      list_rooms
    </script>
  </command>
  <verb name="k9">
    <property>consume</property>
    <defaultexpression>"You can't consume " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^consume (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>consume</displayverb>
  </verb>
  <verb name="k10">
    <property>swallow</property>
    <defaultexpression>"You can't swallow " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^swallow (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>swallow</displayverb>
  </verb>
  <verb name="k11">
    <property>hug</property>
    <defaultexpression>"You can't hug " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^hug (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>hug</displayverb>
  </verb>
  <verb name="k12">
    <property>attack</property>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^attack (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>attack</displayverb>
  </verb>
  <verb name="k13">
    <property>inspect</property>
    <defaultexpression>"You can't inspect " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^inspect (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>inspect</displayverb>
  </verb>
  <verb name="k14">
    <property>burn</property>
    <defaultexpression>"You can't burn " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^burn (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>burn</displayverb>
  </verb>
  <command name="k15">
    <pattern>^put paper in fire$|^put paper in flame$|^set paper on fire$</pattern>
    <script type="script">
      if (Got(crumpled paper)) {
        if (game.pov.parent = f13) {
          if (box.flame = true) {
            msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
          }
          else {
            msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
    </script>
  </command>
  <command name="k16">
    <pattern>^attach hose to bunsen burner$|^attach hose to gas$|^attach hose to gas valve$|^use hose on valve$|^use hose on gas$|^use hose on bunsen burner$</pattern>
    <unresolved type="string"></unresolved>
    <script type="script">
      if (Got(hose)) {
        if (game.pov.parent = f13) {
          msg ("You attach the hose to the Bunsen burner on one end and to the gas valve on the other..")
          RemoveObject (hose)
          set (hose, "attached", 1)
          if (IsSwitchedOn(gas valve)) {
            msg ("The bunsen burner's flame turns on.")
            set (bunsen burner, "flame", true)
          }
        }
        else {
          msg ("You're not near anything you can attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.You scrub.")
      }
    </script>
  </command>
  <command name="k17">
    <pattern>^put photo in fire$|^put photo in flame$|^set photo on fire$</pattern>
    <script type="script">
      if (Got(photo)) {
        if (game.pov.parent = f13) {
          if (bunsen burner.flame = true) {
            msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
            destroy ("photo")
          }
          else {
            msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
          }
        }
        else {
          msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
        }
      }
      else {
        msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
      }
    </script>
  </command>
  <command name="k18">
    <pattern>^attach hose to faucet$|^attach hose to tap$|^put hose on faucet$|^put hose on tap$|^use hose on faucet$|^use hose on tap$</pattern>
    <script type="script">
      if (Got(hose)) {
        if (game.pov.parent = p10) {
          msg ("You attach the hose to the running faucet. The other end hangs off the end of the sink.")
          RemoveObject (hose)
          set (hose, "attached", 2)
        }
        else {
          msg ("You're not near anything to attach it to.")
        }
      }
      else {
        msg ("You don't have a hose! Or a money, or a cash.You scrub.")
      }
    </script>
  </command>
  <verb name="k19">
    <property>pushoffshelf</property>
    <defaultexpression>"You can't push off shelf " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^push off shelf (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>push off shelf</displayverb>
  </verb>
  <verb name="k20">
    <property>climbup</property>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^climb up (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>climb up</displayverb>
  </verb>
  <command name="k21">
    <pattern>^push pot off shelf$|^push pot of dirt off shelf$|^push plant off shelf$</pattern>
    <script type="script">
      if (game.pov.parent = p02) {
        if (ListContains(ScopeVisible(), bean plant)) {
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            RemoveObject (bean plant)
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        }
      }
    </script>
  </command>
  <verb name="k22">
    <property>shake</property>
    <defaulttext>"You can't shake " + object.article + "."</defaulttext>
    <defaultexpression>"You can't climb up " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^shake (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>shake</displayverb>
  </verb>
  <verb name="k23">
    <property>poweron</property>
    <defaultexpression>"You can't power on " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^power on (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>power on</displayverb>
  </verb>
  <verb name="k24">
    <property>drag</property>
    <defaultexpression>"You can't drag " + object.article + "."</defaultexpression>
    <pattern><![CDATA[^drag (?<object>.*?)( (with|using) (?<object2>.*))?$]]></pattern>
    <displayverb>drag</displayverb>
  </verb>
  <object name="Prototype">
    <inherit name="editor_room" />
    <inherit name="not_snake_room" />
    <attr name="grid_x" type="double">2</attr>
    <attr name="grid_y" type="double">0</attr>
    <attr name="grid_z" type="int">0</attr>
    <grid_render />
    <grid_isdrawn />
    <object name="r00">
      <inherit name="editor_room" />
      <description>You can see a vent on the wall, but the room is otherwise unremarkable.</description>
      <descprefix>You are in</descprefix>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">-2</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit1" alias="east" to="r01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r01)
        </look>
        <attr name="grid_x" type="double">-1</attr>
        <attr name="grid_y" type="double">-1.5</attr>
        <attr name="end_x" type="double">0</attr>
        <attr name="end_y" type="double">-1.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit2" alias="south" to="r10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r10)
        </look>
        <attr name="grid_x" type="double">-1.5</attr>
        <attr name="grid_y" type="double">-1</attr>
        <attr name="end_x" type="double">-1.5</attr>
        <attr name="end_y" type="double">0</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="Out Vent" alias="in" to="r22">
        <inherit name="indirection" />
        <locked />
        <lockmessage>It looks like it opens from the inside.</lockmessage>
        <look type="script">
          look_room (vent00)
        </look>
        <attr name="grid_render" type="boolean">false</attr>
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r01">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">0</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit3" alias="west" to="r00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r00)
        </look>
        <attr name="grid_x" type="double">0</attr>
        <attr name="grid_y" type="double">-1.5</attr>
        <attr name="end_x" type="double">-1</attr>
        <attr name="end_y" type="double">-1.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit4" alias="east" to="r02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r02)
        </look>
        <attr name="grid_x" type="double">1</attr>
        <attr name="grid_y" type="double">-1.5</attr>
        <attr name="end_x" type="double">2</attr>
        <attr name="end_y" type="double">-1.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit5" alias="south" to="r11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r11)
        </look>
        <attr name="grid_x" type="double">0.5</attr>
        <attr name="grid_y" type="double">-1</attr>
        <attr name="end_x" type="double">0.5</attr>
        <attr name="end_y" type="double">0</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r02">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">2</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit6" alias="west" to="r01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r01)
        </look>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">-1.5</attr>
        <attr name="end_x" type="double">1</attr>
        <attr name="end_y" type="double">-1.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit7" alias="south" to="r12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r12)
        </look>
        <attr name="grid_x" type="double">2.5</attr>
        <attr name="grid_y" type="double">-1</attr>
        <attr name="end_x" type="double">2.5</attr>
        <attr name="end_y" type="double">0</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r10">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">-2</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit8" alias="north" to="r00">
        <inherit name="northdirection" />
        <attr name="grid_x" type="double">-1.5</attr>
        <attr name="grid_y" type="double">0</attr>
        <attr name="end_x" type="double">-1.5</attr>
        <attr name="end_y" type="double">-1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit9" alias="south" to="r20">
        <inherit name="southdirection" />
        <attr name="grid_x" type="double">-1.5</attr>
        <attr name="grid_y" type="double">1</attr>
        <attr name="end_x" type="double">-1.5</attr>
        <attr name="end_y" type="double">2</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit10" alias="east" to="r11">
        <inherit name="eastdirection" />
        <attr name="grid_x" type="double">-1</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">0</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r11">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">0</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit11" alias="north" to="r01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r01)
        </look>
        <attr name="grid_x" type="double">0.5</attr>
        <attr name="grid_y" type="int">0</attr>
        <attr name="end_x" type="double">0.5</attr>
        <attr name="end_y" type="int">-1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit12" alias="west" to="r10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r10)
        </look>
        <attr name="grid_x" type="int">0</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="int">-1</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit13" alias="east" to="r12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r12)
        </look>
        <attr name="grid_x" type="int">1</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="int">2</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit14" alias="south" to="r21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r21)
        </look>
        <attr name="grid_x" type="double">0.5</attr>
        <attr name="grid_y" type="int">1</attr>
        <attr name="end_x" type="double">0.5</attr>
        <attr name="end_y" type="int">2</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r12">
      <inherit name="editor_room" />
      <picture>card reader.png</picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">2</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit15" alias="north" to="r02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r02)
        </look>
        <attr name="grid_x" type="double">2.5</attr>
        <attr name="grid_y" type="double">0</attr>
        <attr name="end_x" type="double">2.5</attr>
        <attr name="end_y" type="double">-1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit16" alias="west" to="r11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r11)
        </look>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">1</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit17" alias="south" to="r22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (r22)
        </look>
        <attr name="grid_x" type="double">2.5</attr>
        <attr name="grid_y" type="double">1</attr>
        <attr name="end_x" type="double">2.5</attr>
        <attr name="end_y" type="double">2</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="prototypeFinishExit" alias="east" to="i00">
        <inherit name="eastdirection" />
        <locked type="boolean">false</locked>
        <runscript type="boolean">false</runscript>
        <script type="script">
          ClearFramePicture
        </script>
        <look type="script">
          look_room (i00)
        </look>
        <attr name="grid_x" type="double">3</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">4</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="cardReader">
        <inherit name="editor_object" />
        <alias>Key Card Reader</alias>
        <alt type="stringlist">
          <value>reader</value>
          <value>key card reader</value>
          <value>card reader</value>
        </alt>
        <takemsg>It's bolted to the wall. Also, why would you want it, anyway?</takemsg>
        <look>The key card reader glistens with the sheen of new plastic. It looks like state-of-the-art technology.</look>
        <generatedverbslist type="stringlist" />
      </object>
      <object name="keyCard">
        <inherit name="editor_object" />
        <alias>Key Card</alias>
        <take />
        <alt type="stringlist">
          <value>key</value>
          <value>keycard</value>
          <value>card</value>
          <value>key card</value>
        </alt>
        <takemsg>You pick up the key card.</takemsg>
        <use />
        <look>The key card shines with a familiar glisten. It brings back memories of a key card reader you've seen in your travels, back in the old country: like Mama used to make. Or maybe that was elsewhere in this room. You're still filling the holes in your swiss-cheese memory.</look>
        <ontake type="script">
          ClearFramePicture
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="cardReader">
            msg ("Bleep, boop, doop! Now that you're done scat singing, you use the key card in the reader, and the door opens silently.")
            UnlockExit (prototypeFinishExit)
          </item>
        </selfuseon>
        <generatedverbslist type="stringlist" />
      </object>
    </object>
    <object name="r20">
      <inherit name="editor_room" />
      <picture type="string"></picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        if (Contains (r20,box)) {
          SetFramePicture ("crate vent.png")
        }
        change_rooms
      </enter>
      <attr name="grid_x" type="double">-2</attr>
      <attr name="grid_y" type="double">2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit18" alias="north" to="r10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r10)
        </look>
        <attr name="grid_x" type="double">-1.5</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="end_x" type="double">-1.5</attr>
        <attr name="end_y" type="double">1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit19" alias="east" to="r21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r21)
        </look>
        <attr name="grid_x" type="double">-1</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">0</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="vent20in" alias="in" to="vent20">
        <inherit name="indirection" />
        <locked type="boolean">false</locked>
        <runscript type="boolean">false</runscript>
        <lockmessage>The box is blocking the vent.</lockmessage>
        <look type="script">
          look_room (vent20)
        </look>
        <attr name="grid_render" type="boolean">false</attr>
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r21">
      <inherit name="editor_room" />
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">0</attr>
      <attr name="grid_y" type="double">2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit20" alias="north" to="r11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r11)
        </look>
        <attr name="grid_x" type="double">0.5</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="end_x" type="double">0.5</attr>
        <attr name="end_y" type="double">1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit21" alias="east" to="r22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (r22)
        </look>
        <attr name="grid_x" type="double">1</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">2</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit22" alias="west" to="r20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r20)
        </look>
        <attr name="grid_x" type="double">0</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">-1</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="r22">
      <inherit name="editor_room" />
      <picture type="string"></picture>
      <alias>room</alias>
      <onexit type="script">
      </onexit>
      <enter type="script">
        if (Contains (r22,deadRat)) {
          SetFramePicture ("deadrat.png")
        }
        change_rooms
      </enter>
      <attr name="grid_x" type="double">2</attr>
      <attr name="grid_y" type="double">2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit23" alias="north" to="r12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (r12)
        </look>
        <attr name="grid_x" type="double">2.5</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="end_x" type="double">2.5</attr>
        <attr name="end_y" type="double">1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit24" alias="west" to="r21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r21)
        </look>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">1</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="vent">
      <inherit name="editor_room" />
      <attr name="grid_x" type="double">-2</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <object name="vent00">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">-2</attr>
        <attr name="grid_y" type="double">-2</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit25" alias="south" to="vent10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent10)
          </look>
          <attr name="grid_x" type="double">-1.5</attr>
          <attr name="grid_y" type="double">-1</attr>
          <attr name="end_x" type="double">-1.5</attr>
          <attr name="end_y" type="double">0</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit26" alias="out" to="r00">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r00)
          </look>
          <attr name="grid_render" type="boolean">false</attr>
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="vent10">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          if (Contains (vent10,keyCard)) {
            SetFramePicture ("keycard.png")
          }
          change_rooms
        </enter>
        <attr name="grid_x" type="double">-2</attr>
        <attr name="grid_y" type="double">0</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit27" alias="north" to="vent00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent00)
          </look>
          <attr name="grid_x" type="double">-1.5</attr>
          <attr name="grid_y" type="double">0</attr>
          <attr name="end_x" type="double">-1.5</attr>
          <attr name="end_y" type="double">-1</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit28" alias="south" to="vent20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (vent20)
          </look>
          <attr name="grid_x" type="double">-1.5</attr>
          <attr name="grid_y" type="double">1</attr>
          <attr name="end_x" type="double">-1.5</attr>
          <attr name="end_y" type="double">2</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="vent20">
        <inherit name="editor_room" />
        <alias>vent</alias>
        <onexit type="script">
        </onexit>
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">-2</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit29" alias="north" to="vent10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (vent10)
          </look>
          <attr name="grid_x" type="double">-1.5</attr>
          <attr name="grid_y" type="double">2</attr>
          <attr name="end_x" type="double">-1.5</attr>
          <attr name="end_y" type="double">1</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit30" alias="out" to="r20">
          <inherit name="outdirection" />
          <look type="script">
            look_room (r20)
          </look>
          <attr name="grid_render" type="boolean">false</attr>
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
    </object>
  </object>
  <object name="FirePuzzle">
    <inherit name="editor_room" />
    <attr name="grid_x" type="double">12</attr>
    <attr name="grid_y" type="double">-2</attr>
    <attr name="grid_z" type="int">0</attr>
    <grid_render />
    <grid_isdrawn />
    <object name="f00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <onexit type="script">
      </onexit>
      <exit name="exit31" alias="south" to="f10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
      <object name="typewriter">
        <inherit name="editor_object" />
        <take type="boolean">false</take>
        <look>It's an old-fashioned typewriter. Someone must be using it to write an absolute masterpiece. Writing on computers is for talentless hacks, as we all know.</look>
        <takemsg>It weighs, like...a ton. No way, José!</takemsg>
      </object>
      <object name="thesis">
        <inherit name="editor_object" />
        <look>This thesis looks like it's the product of months—possibly years—of work, slavishly hammering away at the typewriter. That's a LOT of paper. It would be a shame if something were to happen to it!</look>
        <wasburned type="boolean">false</wasburned>
        <take type="script">
          if (player.length = 10) {
            msg ("You stretch out and clamp down on it. You've got it securely. You ought to do something with it right away; there's no time to talk!")
            AddToInventory (thesis)
          }
          else {
            msg ("You try to heft the stack of papers up, but you're too weak—if only you'd had a balanced breakfast like your parents taught you. You consider picking it up one page at a time, but by your count, there are...at LEAST two and a half bajillion pages there. Then again, you were never very good at math.")
          }
        </take>
        <burn type="script">
          if (Got(thesis)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.tipped = true) {
                if (bunsen burner.flame = true) {
                  msg ("You drop the thesis into the fire, watching the tendrils lick at it until it becomes a tiny inferno. You try (in vain) to remember the last time you saw Flames overwhelm anything.The thesis fire begins to fill the room with smoke. “Thesis making it really hard to see/breathe!” you exclaim (you dork). How did you even speak that kind of punctuation? The fire alarm is going off, by the way.")
                  set (thesis, "wasburned", true)
                  RemoveObject (thesis)
                }
                else {
                  msg ("You try to lift the thesis in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
                }
              }
              else {
                msg ("You try to lift the thesis all the way up to the fire, but you just don't seem to have the reach that you used to. Should have done more Pilates, maybe. Regardless, you're going to want to think about this laterally.")
              }
            }
            else {
              msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.Spoiler: it doesn't work.")
            }
          }
          else {
            msg ("You do your best Human Torch impression, but you're a couple of factors shy of the necessary requirements. You're not a magician (yet), so your best bet is to focus your inner rage on it.Spoiler: it doesn't work.")
          }
        </burn>
      </object>
      <exit name="exit32" alias="east" to="f01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
    </object>
    <object name="f01">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit33" alias="east" to="f02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit name="exit34" alias="south" to="f11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <exit name="exit35" alias="west" to="f00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f00)
        </look>
      </exit>
      <object name="tinted window1">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f02">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit36" alias="east" to="f03">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit name="exit37" alias="west" to="f01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
      <exit name="exit38" alias="f12" to="f12">
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <object name="tinted window2">
        <inherit name="editor_object" />
        <alias>tinted window</alias>
        <look type="script">
          if (thesis.wasburned = false) {
            msg ("You look north into the next room through the tinted glass. You can see large, monstrous shapes moving in there. It looks dangerous...but you're not afraid of anything! Right, champ?")
          }
          else {
            msg ("You look north into the next room, through the tinted glass. It looks unoccupied, but you can see a bright light.")
          }
        </look>
      </object>
    </object>
    <object name="f03">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit39" alias="east" to="f04">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit name="exit40" alias="west" to="f02">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit name="exit41" alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
      <exit name="exit42" alias="north" to="p21">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="f04">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit43" alias="west" to="f03">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit name="exit44" alias="south" to="f14">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f14)
        </look>
      </exit>
      <exit name="exit45" alias="north" to="p22">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
    </object>
    <object name="f10">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit46" alias="north" to="f00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f00)
        </look>
      </exit>
      <exit name="exit47" alias="south" to="f20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f20)
        </look>
      </exit>
      <exit name="exit48" alias="east" to="f11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <object name="photo">
        <inherit name="editor_object" />
        <alias>photo of terrible beasts</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <look>It's a picture of...monsters? They look alien, yet somehow familiar. Your existentialism is acting up again.</look>
        <take />
        <takemsg>Clumsily, you knock the frame over and shatter it—not unlike Lennie, unaware of your own strength, only desiring to...what? You haven't read “Of Mice and Men”? Come on. Well, you've got the photo now.</takemsg>
        <burn type="script">
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the photo into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance nervously at the smoke detector overhead, but it just stares back blankly...which is even worse than saying something negative, you know?")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the photo in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames!Just kidding. You're not quite a dragon.")
            }
          }
          else {
            msg ("You take a deep breath...and blow flaming hot air at the photo...and it bursts into flames! Just kidding. You're not quite a dragon.")
          }
        </burn>
      </object>
    </object>
    <object name="f11">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit49" alias="east" to="f12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <exit name="exit50" alias="north" to="f01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f01)
        </look>
      </exit>
      <exit name="exit51" alias="south" to="f21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <exit name="exit52" alias="west" to="f10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
    </object>
    <object name="f12">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit53" alias="north" to="f02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f02)
        </look>
      </exit>
      <exit name="exit54" alias="south" to="f22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit name="exit55" alias="west" to="f11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
      <exit name="exit56" alias="east" to="f13">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
      <object name="crumpled paper">
        <inherit name="editor_object" />
        <look>There's a bit of crumpled-up paper; it has some illegible scribbling on it. You resist the urge to make a joke about doctors writing prescriptions.</look>
        <take />
        <takemsg>You pick it up. Crinkle crinkle.</takemsg>
        <burn type="script">
          if (Got(crumpled paper)) {
            if (game.pov.parent = f13) {
              if (bunsen burner.flame = true) {
                msg ("You lift the crumpled paper into the flame. It quickly begins to burn, and a small amount of smoke comes out. You glance anxiously at the smoke detector overhead, but it's quiet. A little too quiet.")
                destroy ("crumpled paper")
              }
              else {
                msg ("You try to lift the crumpled wad in front of the Bunsen burner, but nothing happens. What did you think—that this was a magical fire machine? It's not even turned on!")
              }
            }
            else {
              msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
            }
          }
          else {
            msg ("You focus your Superman eyes on the paper. Squinting until it hurts, you finally see a flash of red flame!Oh, wait. No, you just popped a blood vessel...you should probably stop. You don't actually have heat vision.")
          }
        </burn>
      </object>
    </object>
    <object name="f13">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit57" alias="east" to="f14">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f14)
        </look>
      </exit>
      <exit name="exit58" alias="west" to="f12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
      <exit name="exit59" alias="south" to="f23">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f23)
        </look>
      </exit>
      <exit name="exit60" alias="north" to="f03">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <object name="bunsen burner">
        <inherit name="editor_object" />
        <tipped type="boolean">false</tipped>
        <flame type="boolean">false</flame>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look type="script">
          msg ("There is a Bunsen burner sitting on the table. ")
          if (bunsen burner.tipped = true) {
            msg ("It's been tipped onto its side.")
          }
          if (bunsen burner.flame = false) {
            msg ("There's no fire.")
          }
          else {
            msg ("A hot, blue flame is burning at its tip.")
          }
        </look>
        <hug type="script">
          if (bunsen burner.tipped = false) {
            msg ("It looks like it could use some TLC. You sidle up to embrace it, but bump into it in the process. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </hug>
        <eat type="script">
          if (bunsen burner.tipped = false) {
            msg ("You've always loved the taste of gas, metal, and fire. You think it might be a good idea to put this thing in your mouth. You try to fit it into your face, but you drop it and it falls over.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </eat>
        <attack type="script">
          if (bunsen burner.tipped = false) {
            msg ("What did you say? Are you talkin' to me? C'est à moi que tu parles?You coil up to give the Bunsen burner the ol' what-for. At the slightest tap, it falls onto its side. Guess you showed that thing.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </attack>
        <inspect type="script">
          if (bunsen burner.tipped = false) {
            msg ("You move in to take a look, but bump into it. It falls onto its side.")
            set (bunsen burner, "tipped", true)
          }
          else {
            msg ("You should leave it alone. Haven't you done enough?")
          }
        </inspect>
      </object>
      <object name="hose">
        <inherit name="editor_object" />
        <attached type="int">1</attached>
        <take type="script">
          AddToInventory (hose)
          msg ("You take that hose. It's yours.")
          set (hose, "attached", 0)
          set (bunsen burner, "flame", false)
        </take>
        <look type="script">
          if (hose.attached = 0) {
            msg ("It's a rubber hose with threaded ends that could be conceivably be connected from one thing to another...if you were REALLY crazy.")
          }
          if (hose.attached = 1) {
            msg ("It's a rubber hose. It's connecting the gas valve to the Bunsen burner.")
          }
          if (hose.attached = 2) {
            msg ("It's a rubber hose. One end is connected to the tap, and the other end is hanging off the counter.")
          }
        </look>
      </object>
      <object name="gas valve">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <switchonmsg>You turn the gas valve to the "on" position.</switchonmsg>
        <switchoffmsg>You turn the gas valve to the "off" position.</switchoffmsg>
        <look type="script">
          if (IsSwitchedOn(gas valve)) {
            msg ("It says it's on, which probably explains the hissing sound. Maybe.")
          }
          else {
            msg ("It's a valve...for gas...that fuels things...that burn gas. It's...pretty self-explanatory?")
          }
        </look>
        <onswitchon type="script">
          if (hose.attached = 1) {
            set (bunsen burner, "flame", true)
          }
        </onswitchon>
        <onswitchoff type="script">
          set (bunsen burner, "flame", false)
        </onswitchoff>
      </object>
    </object>
    <object name="f14">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">-4</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <exit name="exit61" alias="north" to="f04">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit name="exit62" alias="south" to="f24">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f24)
        </look>
      </exit>
      <exit name="exit63" alias="west" to="f13">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
    </object>
    <object name="f20">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit64" alias="north" to="f10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f10)
        </look>
      </exit>
      <exit name="exit65" alias="east" to="f21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <object name="cage">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <alias>small cage</alias>
        <scenery type="boolean">false</scenery>
        <look>A small wire cage sits on the desk. There's a small, brown lump inside.</look>
        <alt type="stringlist">
          <value>cage</value>
        </alt>
        <isopen type="boolean">false</isopen>
        <transparent />
        <openmsg>You bump the latch and the door swings open.</openmsg>
        <closemsg>You nudge the door closed.</closemsg>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Open</value>
          <value>Close</value>
        </displayverbs>
        <object name="hamster">
          <inherit name="editor_object" />
          <look>The small, brown lump looks back at you...so cute! The little furry ball smells good. It probably has a cute name like Pippy or something. Someone probably loves it very, very much. It would be a tragedy if something awful were to happen to it.</look>
          <alt type="stringlist">
            <value>Mr. Pippy</value>
          </alt>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <eat type="script">
            if (cage.isopen) {
              grow_snake
              msg ("You're so hungry. You dart forward, pick up the hamster, and swallow it all in one motion. The adorable Pippy makes a tiny squeak, and then all is silent.")
              RemoveObject (hamster)
            }
            else {
              msg ("You try to grab the hamster, but the cage is latched closed!")
            }
          </eat>
        </object>
      </object>
    </object>
    <object name="f21">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit66" alias="east" to="f22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit name="exit67" alias="west" to="f20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f20)
        </look>
      </exit>
      <exit name="exit68" alias="north" to="f11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f11)
        </look>
      </exit>
    </object>
    <object name="f22">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit69" alias="east" to="f23">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f23)
        </look>
      </exit>
      <exit name="exit70" alias="west" to="f21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f21)
        </look>
      </exit>
      <exit name="exit71" alias="north" to="f12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f12)
        </look>
      </exit>
    </object>
    <object name="f23">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">10</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <exit name="exit72" alias="east" to="f24">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (f24)
        </look>
      </exit>
      <exit name="exit73" alias="west" to="f22">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f22)
        </look>
      </exit>
      <exit name="exit74" alias="north" to="f13">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f13)
        </look>
      </exit>
    </object>
    <object name="f24">
      <inherit name="editor_room" />
      <onexit type="script">
      </onexit>
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">-2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit75" alias="north" to="f14">
        <inherit name="northdirection" />
        <look type="script">
          look_room (f14)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">-2</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">-3</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit76" alias="west" to="f23">
        <inherit name="westdirection" />
        <look type="script">
          look_room (f23)
        </look>
        <attr name="grid_x" type="double">12</attr>
        <attr name="grid_y" type="double">-1.5</attr>
        <attr name="end_x" type="double">11</attr>
        <attr name="end_y" type="double">-1.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit77" alias="south" to="t_torches00">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">-1</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">0</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="player">
        <inherit name="editor_object" />
        <inherit name="editor_player" />
        <maxobjects type="int">1</maxobjects>
        <containermaxobjects>You want to grab it, but you can't seem to pull it off. You're already holding something.</containermaxobjects>
        <length type="int">9</length>
        <attr name="show_debug" type="int">0</attr>
        <attr name="external_gender">it</attr>
        <attr name="external_article">it</attr>
        <pov_alt type="stringlist">
          <value>myself</value>
          <value>self</value>
        </pov_alt>
        <pov_used />
        <alias>me</alias>
        <alt type="stringlist">
          <value>myself</value>
          <value>self</value>
        </alt>
        <look>Looking good.</look>
        <gender>you</gender>
        <article>yourself</article>
        <attr name="game_start" type="int">0</attr>
        <attr name="snake_rooms" type="objectlist">t_torches00; i01; i11; tr_start02; tr_start03; tr_start04; tr_start14; t_torches00; f24</attr>
        <generatedverbslist type="stringlist" />
        <commandmetadata type="stringdictionary" />
        <currentcommand>save</currentcommand>
        <currentcommandpattern type="object">save</currentcommandpattern>
        <currentcommandvarlist type="stringdictionary" />
        <currentcommandmultiobjectpending type="boolean">false</currentcommandmultiobjectpending>
        <currentcommandresolvedelements type="dictionary">
          <item>
            <key>multiple</key>
            <value type="boolean">false</value>
          </item>
        </currentcommandresolvedelements>
        <currentcommandresolvedobjects type="objectlist"></currentcommandresolvedobjects>
        <currentcommandpendingobjectlist type="objectlist">ikeaShelf</currentcommandpendingobjectlist>
        <currentcommandvarlistqueue type="stringlist" />
        <currentcommandpendingobjectscope type="objectlist">ikeaShelf</currentcommandpendingobjectscope>
        <currentcommandpendingobjecttype>object</currentcommandpendingobjecttype>
      </object>
    </object>
  </object>
  <object name="PlantPuzzle">
    <inherit name="editor_room" />
    <object name="p01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="window">
        <inherit name="editor_object" />
        <alias>open window</alias>
        <alt type="stringlist">
          <value>window</value>
        </alt>
        <look>High up near the ceiling, there's an open window. You can feel and smell fresh air through it. This is what must have cleared out the smoke.</look>
      </object>
      <object name="pile of dirt">
        <inherit name="editor_object" />
        <visible type="boolean">false</visible>
        <alt type="stringlist">
          <value>bean plant</value>
          <value>dirt</value>
        </alt>
        <grown type="boolean">false</grown>
        <look type="script">
          if (pile of dirt.grown = false) {
            if (hose.attached = 2) {
              if (IsSwitchedOn(faucet)) {
                msg ("The water runs out of the end of the hose, and starts forming a puddle on the floor. As the puddle spreads across the room, the dirt begins to moisten. You soon hear a sharp crunching noise as something within the dirt springs to life. Suddenly, a huge plant coils out of the dirt, and grows upwards in a spiral, reaching towards the light streaming in through the open window.Wonderful what science can do these days, no?")
                MakeObjectVisible (plant)
              }
              else {
                msg ("The end of the hose is pointing toward the pile of dry dirt, but nothing is coming out. It's almost as if the hose itself is not a source of water.")
              }
            }
            else {
              msg ("Directly below the open window is a pile of dry dirt, with the remains of its smashed pot scattered around.")
            }
          }
          else {
            msg ("It's a pile of dirt, out of which is sprouting a magnificent vine that snakes up  toward the open window. You feel a growing sense of deep symbolism.")
          }
        </look>
      </object>
      <object name="plant">
        <inherit name="editor_object" />
        <alias>tall bean plant</alias>
        <alt type="stringlist">
          <value>plant</value>
          <value>vine</value>
          <value>beanstalk</value>
        </alt>
        <visible type="boolean">false</visible>
        <climb type="script">
          game_win
        </climb>
        <climbup type="script">
          game_win
        </climbup>
      </object>
      <exit name="exit78" alias="south" to="p11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit name="exit79" alias="east" to="p02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p02)
        </look>
      </exit>
      <object name="door">
        <inherit name="editor_object" />
        <look>There's a door to the west that the monsters left through. It's shut tight, though. There's no way to open it.</look>
      </object>
    </object>
    <object name="p02">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="bean plant">
        <inherit name="editor_object" />
        <look>Its label says "Superior-growth, military-strength developmental prototype beanstalk". It's in a clay pot (which doesn't look military-strength) on the top of this shelf.There doesn't appear to be anything growing in the pot, and the soil is dry.</look>
        <alt type="stringlist">
          <value>pot</value>
          <value>clay pot</value>
          <value>bean plant</value>
        </alt>
        <alias>pot of dirt</alias>
        <throw type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </throw>
        <push type="script">
          if (player.length = 11) {
            msg ("You throw your weight against the pot, and it tips off the shelf. It smashes on the unforgiving tile below.")
            MakeObjectVisible (pile of dirt)
            destroy ("bean plant")
          }
          else {
            msg ("You push as hard as you can against the heavy pot, but it doesn't budge. What would your old Italian grandmother say? “You're getting too skinny!” in that comical accent of hers. And then she'd basically dump a vat of pasta in front of you. Remember that?")
          }
        </push>
      </object>
      <exit name="exit80" alias="west" to="p01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p01)
        </look>
      </exit>
      <exit name="exit81" alias="south" to="p12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
    </object>
    <object name="p10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="sink">
        <inherit name="editor_object" />
        <look>The sink is slightly filled with water, but is draining steadily.</look>
      </object>
      <object name="faucet">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <alt type="stringlist">
          <value>tap</value>
          <value>running faucet</value>
        </alt>
        <switchonmsg>The handle sticks a little, but you manage to turn the faucet on, and water is rushing out. Better hope this place is rent-controlled.</switchonmsg>
        <switchoffmsg>You shut the water off. Only YOU can protect the environment!</switchoffmsg>
        <switchedon />
        <look type="script">
          if (IsSwitchedOn(faucet)) {
            msg ("It's a faucet. Water is pouring out.")
          }
          else {
            msg ("It's a faucet. It's off.")
          }
          if (hose.attached = 2) {
            msg ("There is a rubber hose attached to the nozzle. ")
          }
        </look>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Switch on</value>
          <value>Switch off</value>
        </displayverbs>
      </object>
      <exit name="exit82" alias="east" to="p11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit name="exit83" alias="south" to="p20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p20)
        </look>
      </exit>
    </object>
    <object name="p11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit84" alias="north" to="p01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p01)
        </look>
      </exit>
      <exit name="exit85" alias="east" to="p12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
      <exit name="exit86" alias="west" to="p10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p10)
        </look>
      </exit>
      <exit name="exit87" alias="south" to="p21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="p12">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <exit name="exit88" alias="north" to="p02">
        <inherit name="northdirection" />
        <lookonly type="boolean">false</lookonly>
        <look type="script">
          look_room (p02)
        </look>
      </exit>
      <exit name="exit89" alias="south" to="p22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
      <exit name="exit90" alias="west" to="p11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
    </object>
    <object name="p20">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <object name="meat plant">
        <inherit name="editor_object" />
        <alias>meaty plant</alias>
        <look>There's a plant on this shelf. The label says "Experimental DNA hybrid for Synthetic Meat Production." Its leaves look like tasty little steaks.</look>
        <eat type="script">
          msg ("You swallow that meat plant whole!That's not a sentence you read every day.")
          grow_snake
          RemoveObject (meat plant)
        </eat>
      </object>
      <exit name="exit91" alias="north" to="p10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit name="exit92" alias="p21" to="p21">
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
    <object name="p21">
      <inherit name="editor_room" />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit name="exit93" alias="south" to="f03">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f03)
        </look>
      </exit>
      <exit name="exit94" alias="north" to="p11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p11)
        </look>
      </exit>
      <exit name="exit95" alias="west" to="p20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p20)
        </look>
      </exit>
      <exit name="exit96" alias="east" to="p22">
        <inherit name="eastdirection" />
        <runscript />
        <look type="script">
          look_room (p22)
        </look>
      </exit>
    </object>
    <object name="p22">
      <inherit name="editor_room" />
      <beforefirstenter type="script">
      </beforefirstenter>
      <enter type="script">
        change_rooms
      </enter>
      <firstenter type="script">
        humans_caught
      </firstenter>
      <exit name="exit97" alias="north" to="p12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (p12)
        </look>
      </exit>
      <exit name="exit98" alias="south" to="f04">
        <inherit name="southdirection" />
        <look type="script">
          look_room (f04)
        </look>
      </exit>
      <exit name="exit99" alias="west" to="p21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (p21)
        </look>
      </exit>
    </object>
  </object>
  <object name="TwoRoomPuzzle">
    <inherit name="editor_room" />
    <attr name="grid_x" type="double">10</attr>
    <attr name="grid_y" type="double">6</attr>
    <attr name="grid_z" type="int">0</attr>
    <grid_render />
    <grid_isdrawn />
    <object name="StartRoom">
      <inherit name="editor_room" />
      <attr name="grid_x" type="double">10</attr>
      <attr name="grid_y" type="double">6</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <object name="tr_start00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">4</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit100" alias="east" to="tr_start01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
          <attr name="grid_x" type="double">3</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">4</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit101" alias="south" to="tr_start10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start10)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">5</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">6</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">4</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit102" alias="west" to="tr_start00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start00)
          </look>
          <attr name="grid_x" type="double">4</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">3</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit103" alias="east" to="tr_start02">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
          <attr name="grid_x" type="double">5</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">6</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit104" alias="south" to="tr_start11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">5</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">6</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start02">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <firstenter type="script">
          msg ("You hear a noise to the east! Maybe you should check it out.")
        </firstenter>
        <attr name="grid_x" type="double">6</attr>
        <attr name="grid_y" type="double">4</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit105" alias="west" to="tr_start01">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
          <attr name="grid_x" type="double">6</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">5</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit106" alias="east" to="tr_start03">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
          <attr name="grid_x" type="double">7</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">8</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit107" alias="south" to="tr_start12">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
          <attr name="grid_x" type="double">6.5</attr>
          <attr name="grid_y" type="double">5</attr>
          <attr name="end_x" type="double">6.5</attr>
          <attr name="end_y" type="double">6</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit108" alias="north" to="i11">
          <inherit name="northdirection" />
          <lookonly type="boolean">false</lookonly>
          <look type="script">
            look_room (i11)
          </look>
          <attr name="grid_x" type="double">6.5</attr>
          <attr name="grid_y" type="double">4</attr>
          <attr name="end_x" type="double">6.5</attr>
          <attr name="end_y" type="double">3</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start03">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">4</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit109" alias="west" to="tr_start02">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
          <attr name="grid_x" type="double">8</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">7</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit110" alias="east" to="tr_start04">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start04)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit111" alias="south" to="tr_start13">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">5</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">6</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start04">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">4</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit112" alias="west" to="tr_start03">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">4.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">4.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit113" alias="south" to="tr_start14">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_start14)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">5</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">6</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit114" alias="east" to="tr_start11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
          <attr name="grid_x" type="double">3</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">4</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit115" alias="north" to="tr_start00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start00)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">6</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit116" alias="west" to="tr_start10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start10)
          </look>
          <attr name="grid_x" type="double">4</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">3</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit117" alias="east" to="tr_start12">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
          <attr name="grid_x" type="double">5</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">6</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit118" alias="north" to="tr_start01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start01)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">6</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="tr_star11_to_tr_small01" alias="south" to="tr_small01">
          <inherit name="southdirection" />
          <locked type="boolean">false</locked>
          <look type="script">
            look_room (tr_small01)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">7</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">8</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <object name="cardReader1">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's...glued to the wall. But, like, a really strong glue. Never you mind.</takemsg>
          <look>The key card reader glistens with the sheen of new—no, wait. Ew, gross, what IS that? Never mind. The device appears to be operational.</look>
          <generatedverbslist type="stringlist" />
        </object>
      </object>
      <object name="tr_start12">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">6</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit119" alias="west" to="tr_start11">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
          <attr name="grid_x" type="double">6</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">5</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit120" alias="east" to="tr_start13">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
          <attr name="grid_x" type="double">7</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">8</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit121" alias="north" to="tr_start02">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start02)
          </look>
          <attr name="grid_x" type="double">6.5</attr>
          <attr name="grid_y" type="double">6</attr>
          <attr name="end_x" type="double">6.5</attr>
          <attr name="end_y" type="double">5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_start13">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit122" alias="west" to="tr_start12">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start12)
          </look>
          <attr name="grid_x" type="double">8</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">7</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit123" alias="east" to="tr_start14">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_start14)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit124" alias="north" to="tr_start03">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start03)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">6</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="tr_start13_to_tr_large00" alias="south" to="tr_large00">
          <inherit name="southdirection" />
          <locked type="boolean">false</locked>
          <look type="script">
            look_room (tr_large00)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">7</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">8</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <object name="cardReader2">
          <inherit name="editor_object" />
          <alias>Key Card Reader</alias>
          <alt type="stringlist">
            <value>reader</value>
            <value>key card reader</value>
            <value>card reader</value>
          </alt>
          <takemsg>It's cemented to the wall, and you forgot your jackhammer. Nice going.</takemsg>
          <look>The key card reader glistens with the sheen of new metal (not to be confused with nu metal, which is a pretentious way of saying "alternative" metal, and is a garbage genre anyhow).</look>
          <generatedverbslist type="stringlist" />
        </object>
      </object>
      <object name="tr_start14">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit125" alias="west" to="tr_start13">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit126" alias="north" to="tr_start04">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start04)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">6</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <object name="scale">
          <inherit name="editor_object" />
          <drop type="boolean">false</drop>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <lie type="script"><![CDATA[
            if (player.length < 7) {
              msg ("The scale beeps, but nothing else happens. Clearly, you have not satisfied the almighty guardian device.")
            }
            else {
              UnlockExit (tr_start14_to_t_torches00)
              msg ("The scale beeps. Just as you give up hope and go to look for another dirty rat to eat, you hear the clicking noise of a door unlocking.")
            }
          ]]></lie>
          <generatedverbslist type="stringlist">
            <value>Lie on</value>
          </generatedverbslist>
        </object>
        <exit name="tr_start14_to_t_torches00" alias="east" to="t_torches00">
          <inherit name="eastdirection" />
          <locked type="boolean">false</locked>
          <attr name="grid_x" type="double">11</attr>
          <attr name="grid_y" type="double">6.5</attr>
          <attr name="end_x" type="double">12</attr>
          <attr name="end_y" type="double">6.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <object name="keyCard1">
          <inherit name="editor_object" />
          <alias>Key Card</alias>
          <take />
          <alt type="stringlist">
            <value>key</value>
            <value>keycard</value>
            <value>card</value>
            <value>key card</value>
          </alt>
          <takemsg>You pick up the key card.</takemsg>
          <use />
          <look>The key card shines with a familiar glisten. It brings back memories of...memories. You're in some sort of quantum loop, obviously. ARE YOU TRIPPING OUT YET?!?</look>
          <ontake type="script">
            ClearFramePicture
          </ontake>
          <selfuseon type="scriptdictionary">
            <item key="cardReader1">
              msg ("The card reader signals its approval with a noise inimitable through onomatopoeia.")
              UnlockExit (tr_star11_to_tr_small01)
            </item>
            <item key="cardReader2">
              msg ("The reader accepts the card, sucking it in; out of the slot is unleashed a flood of wailing, tormented screams: the sound of thousands of souls who have died in previous save files, trying in vain to escape the eternal prison that is this puzzle room, never to find solace.No pressure.")
              UnlockExit (tr_start13_to_tr_large00)
            </item>
          </selfuseon>
          <generatedverbslist type="stringlist" />
        </object>
      </object>
    </object>
    <object name="SmallRoom">
      <inherit name="editor_object" />
      <attr name="grid_x" type="double">4</attr>
      <attr name="grid_y" type="double">8</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <object name="tr_small00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit127" alias="east" to="tr_small01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small01)
          </look>
          <attr name="grid_x" type="double">3</attr>
          <attr name="grid_y" type="double">8.5</attr>
          <attr name="end_x" type="double">4</attr>
          <attr name="end_y" type="double">8.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit128" alias="south" to="tr_small10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">9</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">10</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_small01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit129" alias="west" to="tr_small00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small00)
          </look>
          <attr name="grid_x" type="double">4</attr>
          <attr name="grid_y" type="double">8.5</attr>
          <attr name="end_x" type="double">3</attr>
          <attr name="end_y" type="double">8.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit130" alias="south" to="tr_small11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">9</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">10</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit131" alias="north" to="tr_start11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start11)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">8</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">7</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_small10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit132" alias="east" to="tr_small11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
          <attr name="grid_x" type="double">3</attr>
          <attr name="grid_y" type="double">10.5</attr>
          <attr name="end_x" type="double">4</attr>
          <attr name="end_y" type="double">10.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit133" alias="north" to="tr_small00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small00)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">10</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">9</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit134" alias="south" to="tr_small20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small20)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">11</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">12</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_small11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit135" alias="west" to="tr_small10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
          <attr name="grid_x" type="double">4</attr>
          <attr name="grid_y" type="double">10.5</attr>
          <attr name="end_x" type="double">3</attr>
          <attr name="end_y" type="double">10.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit136" alias="north" to="tr_small01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small01)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">10</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">9</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit137" alias="south" to="tr_small21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_small21)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">11</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">12</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_small20">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">2</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit138" alias="east" to="tr_small21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_small21)
          </look>
          <attr name="grid_x" type="double">3</attr>
          <attr name="grid_y" type="double">12.5</attr>
          <attr name="end_x" type="double">4</attr>
          <attr name="end_y" type="double">12.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit139" alias="north" to="tr_small10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small10)
          </look>
          <attr name="grid_x" type="double">2.5</attr>
          <attr name="grid_y" type="double">12</attr>
          <attr name="end_x" type="double">2.5</attr>
          <attr name="end_y" type="double">11</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_small21">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit140" alias="west" to="tr_small20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_small20)
          </look>
          <attr name="grid_x" type="double">4</attr>
          <attr name="grid_y" type="double">12.5</attr>
          <attr name="end_x" type="double">3</attr>
          <attr name="end_y" type="double">12.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit141" alias="north" to="tr_small11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_small11)
          </look>
          <attr name="grid_x" type="double">4.5</attr>
          <attr name="grid_y" type="double">12</attr>
          <attr name="end_x" type="double">4.5</attr>
          <attr name="end_y" type="double">11</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
    </object>
    <object name="LargeRoom">
      <inherit name="editor_room" />
      <attr name="grid_x" type="double">8</attr>
      <attr name="grid_y" type="double">8</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <object name="tr_large00">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit142" alias="east" to="tr_large01">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large01)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">8.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">8.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit143" alias="south" to="tr_large10">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">9</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">10</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit144" alias="north" to="tr_start13">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_start13)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">8</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">7</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large01">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit145" alias="west" to="tr_large00">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large00)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">8.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">8.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit146" alias="south" to="tr_large11">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">9</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">10</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large10">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit147" alias="east" to="tr_large11">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">10.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">10.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit148" alias="north" to="tr_large00">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large00)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">10</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">9</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit149" alias="south" to="tr_large20">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">11</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">12</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large11">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit150" alias="west" to="tr_large10">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">10.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">10.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit151" alias="north" to="tr_large01">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large01)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">10</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">9</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit152" alias="south" to="tr_large21">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">11</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">12</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large20">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit153" alias="east" to="tr_large21">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">12.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">12.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit154" alias="north" to="tr_large10">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large10)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">12</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">11</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit155" alias="south" to="tr_large30">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large30)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">13</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">14</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large21">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit156" alias="west" to="tr_large20">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">12.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">12.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit157" alias="north" to="tr_large11">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large11)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">12</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">11</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit158" alias="south" to="tr_large31">
          <inherit name="southdirection" />
          <look type="script">
            look_room (tr_large31)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">13</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">14</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large30">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">8</attr>
        <attr name="grid_y" type="double">14</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit159" alias="east" to="tr_large31">
          <inherit name="eastdirection" />
          <look type="script">
            look_room (tr_large31)
          </look>
          <attr name="grid_x" type="double">9</attr>
          <attr name="grid_y" type="double">14.5</attr>
          <attr name="end_x" type="double">10</attr>
          <attr name="end_y" type="double">14.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit160" alias="north" to="tr_large20">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large20)
          </look>
          <attr name="grid_x" type="double">8.5</attr>
          <attr name="grid_y" type="double">14</attr>
          <attr name="end_x" type="double">8.5</attr>
          <attr name="end_y" type="double">13</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
      <object name="tr_large31">
        <inherit name="editor_room" />
        <enter type="script">
          change_rooms
        </enter>
        <attr name="grid_x" type="double">10</attr>
        <attr name="grid_y" type="double">14</attr>
        <attr name="grid_z" type="int">0</attr>
        <grid_render />
        <attr name="grid_parent_offset_x" type="double">0</attr>
        <attr name="grid_parent_offset_y" type="double">0</attr>
        <grid_isdrawn />
        <generatedverbslist type="stringlist" />
        <darklevel type="boolean">false</darklevel>
        <visited />
        <exit name="exit161" alias="west" to="tr_large30">
          <inherit name="westdirection" />
          <look type="script">
            look_room (tr_large30)
          </look>
          <attr name="grid_x" type="double">10</attr>
          <attr name="grid_y" type="double">14.5</attr>
          <attr name="end_x" type="double">9</attr>
          <attr name="end_y" type="double">14.5</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
        <exit name="exit162" alias="north" to="tr_large21">
          <inherit name="northdirection" />
          <look type="script">
            look_room (tr_large21)
          </look>
          <attr name="grid_x" type="double">10.5</attr>
          <attr name="grid_y" type="double">14</attr>
          <attr name="end_x" type="double">10.5</attr>
          <attr name="end_y" type="double">13</attr>
          <grid_render />
          <generatedverbslist type="stringlist" />
        </exit>
      </object>
    </object>
  </object>
  <object name="TorchPuzzle">
    <inherit name="editor_room" />
    <attr name="grid_x" type="double">12</attr>
    <attr name="grid_y" type="double">6</attr>
    <attr name="grid_z" type="int">0</attr>
    <grid_render />
    <grid_isdrawn />
    <object name="t_torches00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit163" alias="east" to="t_torches01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">6.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">6.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit164" alias="south" to="t_torches10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">7</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">8</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit165" alias="west" to="tr_start14">
        <inherit name="westdirection" />
        <locked type="boolean">false</locked>
        <attr name="grid_x" type="double">12</attr>
        <attr name="grid_y" type="double">6.5</attr>
        <attr name="end_x" type="double">11</attr>
        <attr name="end_y" type="double">6.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light3_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
      <object name="photoreceptor0">
        <inherit name="editor_object" />
        <inherit name="photoreceptor_base" />
        <attr name="light_req" type="int">6</attr>
        <alias>door control</alias>
        <attr name="lights_list" type="objectlist">light13_0; light11_0; light9_0; light7_0; light5_0; light3_1; light3_0</attr>
        <initialized />
        <generatedverbslist type="stringlist" />
        <powered_on />
      </object>
      <exit name="t_torches00_to_f24" alias="north" to="f24">
        <inherit name="northdirection" />
        <locked type="boolean">false</locked>
        <runscript />
        <attr name="grid_length" type="int">7</attr>
        <look type="script">
          look_room (f24)
        </look>
        <script type="script"><![CDATA[
          if (player.length < 9) {
            msg ("The door rattles as you push it, but it's still latched. Oh, there's a handle! It's too bad you can't reach it. Maybe you can find a way to get up there...")
          }
          else {
            MoveObject (player, f24)
          }
        ]]></script>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">6</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">-1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">6</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit166" alias="west" to="t_torches00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">6.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">6.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit167" alias="east" to="t_torches02">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches02)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">6.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">6.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit168" alias="south" to="t_torches11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">7</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">8</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches02">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">6</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit169" alias="west" to="t_torches01">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">6.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">6.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit170" alias="south" to="t_torches12">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">7</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">8</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">8</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit171" alias="east" to="t_torches11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">8.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">8.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit172" alias="north" to="t_torches00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches00)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">7</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit173" alias="south" to="t_torches20">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">9</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">10</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">8</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit174" alias="west" to="t_torches10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">8.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">8.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit175" alias="east" to="t_torches12">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">8.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">8.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit176" alias="north" to="t_torches01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches01)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">7</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit177" alias="south" to="t_torches21">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">9</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">10</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light3_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">3</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches12">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">8</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit178" alias="west" to="t_torches11">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">8.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">8.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit179" alias="north" to="t_torches02">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches02)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">8</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">7</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit180" alias="south" to="t_torches22">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">9</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">10</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light6_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">6</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
      </object>
    </object>
    <object name="t_torches20">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">10</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit181" alias="east" to="t_torches21">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">10.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">10.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit182" alias="north" to="t_torches10">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches10)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">9</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit183" alias="south" to="t_torches30">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">11</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">12</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light5_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">5</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches21">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">10</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit184" alias="west" to="t_torches20">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">10.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">10.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit185" alias="east" to="t_torches22">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">10.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">10.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit186" alias="north" to="t_torches11">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches11)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">9</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit187" alias="south" to="t_torches31">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">11</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">12</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches22">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">10</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit188" alias="west" to="t_torches21">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">10.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">10.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit189" alias="north" to="t_torches12">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches12)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">10</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">9</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit190" alias="south" to="t_torches32">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">11</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">12</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches30">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">12</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit191" alias="east" to="t_torches31">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">12.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">12.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit192" alias="north" to="t_torches20">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches20)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">11</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit193" alias="south" to="t_torches40">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">13</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">14</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches31">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">12</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit194" alias="west" to="t_torches30">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">12.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">12.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit195" alias="east" to="t_torches32">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">12.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">12.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit196" alias="north" to="t_torches21">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches21)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">11</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit197" alias="south" to="t_torches41">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">13</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">14</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light7_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">7</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches32">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">12</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit198" alias="west" to="t_torches31">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">12.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">12.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit199" alias="north" to="t_torches22">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches22)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">12</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">11</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit200" alias="south" to="t_torches42">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">13</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">14</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light2_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
      </object>
    </object>
    <object name="t_torches40">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">14</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit201" alias="east" to="t_torches41">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">14.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">14.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit202" alias="north" to="t_torches30">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches30)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">14</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">13</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit203" alias="south" to="t_torches50">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">15</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">16</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light9_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">9</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches41">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">14</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit204" alias="west" to="t_torches40">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">14.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">14.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit205" alias="east" to="t_torches42">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">14.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">14.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit206" alias="north" to="t_torches31">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches31)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">14</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">13</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit207" alias="south" to="t_torches51">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">15</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">16</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches42">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">14</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit208" alias="west" to="t_torches41">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">14.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">14.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit209" alias="north" to="t_torches32">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches32)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">14</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">13</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit210" alias="south" to="t_torches52">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">15</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">16</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches50">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">16</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit211" alias="east" to="t_torches51">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">16.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">16.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit212" alias="north" to="t_torches40">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches40)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">16</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">15</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit213" alias="south" to="t_torches60">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches60)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">17</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">18</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches51">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">16</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit214" alias="west" to="t_torches50">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">16.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">16.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit215" alias="east" to="t_torches52">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">16.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">16.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit216" alias="north" to="t_torches41">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches41)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">16</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">15</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit217" alias="south" to="t_torches61">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">17</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">18</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light11_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">11</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches52">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">16</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit218" alias="west" to="t_torches51">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">16.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">16.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit219" alias="north" to="t_torches42">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches42)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">16</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">15</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit220" alias="south" to="t_torches62">
        <inherit name="southdirection" />
        <look type="script">
          look_room (t_torches62)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">17</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">18</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light2_1">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">2</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
      </object>
    </object>
    <object name="t_torches60">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">12</attr>
      <attr name="grid_y" type="double">18</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit221" alias="east" to="t_torches61">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
        <attr name="grid_x" type="double">13</attr>
        <attr name="grid_y" type="double">18.5</attr>
        <attr name="end_x" type="double">14</attr>
        <attr name="end_y" type="double">18.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit222" alias="north" to="t_torches50">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches50)
        </look>
        <attr name="grid_x" type="double">12.5</attr>
        <attr name="grid_y" type="double">18</attr>
        <attr name="end_x" type="double">12.5</attr>
        <attr name="end_y" type="double">17</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <object name="light13_0">
        <inherit name="editor_object" />
        <inherit name="shake_light_base" />
        <attr name="max_dur" type="int">13</attr>
        <lightsource type="boolean">false</lightsource>
        <target type="object">photoreceptor0</target>
        <generatedverbslist type="stringlist" />
        <attr name="remaining_dur" type="int">0</attr>
      </object>
    </object>
    <object name="t_torches61">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">14</attr>
      <attr name="grid_y" type="double">18</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit223" alias="west" to="t_torches60">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches60)
        </look>
        <attr name="grid_x" type="double">14</attr>
        <attr name="grid_y" type="double">18.5</attr>
        <attr name="end_x" type="double">13</attr>
        <attr name="end_y" type="double">18.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit224" alias="east" to="t_torches62">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (t_torches62)
        </look>
        <attr name="grid_x" type="double">15</attr>
        <attr name="grid_y" type="double">18.5</attr>
        <attr name="end_x" type="double">16</attr>
        <attr name="end_y" type="double">18.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit225" alias="north" to="t_torches51">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches51)
        </look>
        <attr name="grid_x" type="double">14.5</attr>
        <attr name="grid_y" type="double">18</attr>
        <attr name="end_x" type="double">14.5</attr>
        <attr name="end_y" type="double">17</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="t_torches62">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">16</attr>
      <attr name="grid_y" type="double">18</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit226" alias="west" to="t_torches61">
        <inherit name="westdirection" />
        <look type="script">
          look_room (t_torches61)
        </look>
        <attr name="grid_x" type="double">16</attr>
        <attr name="grid_y" type="double">18.5</attr>
        <attr name="end_x" type="double">15</attr>
        <attr name="end_y" type="double">18.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit227" alias="north" to="t_torches52">
        <inherit name="northdirection" />
        <look type="script">
          look_room (t_torches52)
        </look>
        <attr name="grid_x" type="double">16.5</attr>
        <attr name="grid_y" type="double">18</attr>
        <attr name="end_x" type="double">16.5</attr>
        <attr name="end_y" type="double">17</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
  </object>
  <object name="IkeaShelfPuzzle">
    <inherit name="editor_object" />
    <attr name="grid_x" type="double">6</attr>
    <attr name="grid_y" type="double">2</attr>
    <attr name="grid_z" type="int">0</attr>
    <grid_render />
    <grid_isdrawn />
    <object name="i00">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">4</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit228" alias="east" to="i01">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (i01)
        </look>
        <attr name="grid_x" type="double">5</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">6</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit229" alias="south" to="i10">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i10)
        </look>
        <attr name="grid_x" type="double">4.5</attr>
        <attr name="grid_y" type="double">1</attr>
        <attr name="end_x" type="double">4.5</attr>
        <attr name="end_y" type="double">2</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit230" alias="west" to="r12">
        <inherit name="westdirection" />
        <look type="script">
          look_room (r12)
        </look>
        <attr name="grid_x" type="double">4</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">3</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="i01">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">6</attr>
      <attr name="grid_y" type="double">0</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit231" alias="west" to="i00">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i00)
        </look>
        <attr name="grid_x" type="double">6</attr>
        <attr name="grid_y" type="double">0.5</attr>
        <attr name="end_x" type="double">5</attr>
        <attr name="end_y" type="double">0.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit232" alias="south" to="i11">
        <inherit name="southdirection" />
        <look type="script">
          look_room (i11)
        </look>
        <attr name="grid_x" type="double">6.5</attr>
        <attr name="grid_y" type="double">1</attr>
        <attr name="end_x" type="double">6.5</attr>
        <attr name="end_y" type="double">2</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="i10">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">4</attr>
      <attr name="grid_y" type="double">2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit233" alias="east" to="i11">
        <inherit name="eastdirection" />
        <look type="script">
          look_room (i11)
        </look>
        <attr name="grid_x" type="double">5</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">6</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit234" alias="north" to="i00">
        <inherit name="northdirection" />
        <look type="script">
          look_room (i00)
        </look>
        <attr name="grid_x" type="double">4.5</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="end_x" type="double">4.5</attr>
        <attr name="end_y" type="double">1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
    <object name="i11">
      <inherit name="editor_room" />
      <enter type="script">
        change_rooms
      </enter>
      <attr name="grid_x" type="double">6</attr>
      <attr name="grid_y" type="double">2</attr>
      <attr name="grid_z" type="int">0</attr>
      <grid_render />
      <attr name="grid_parent_offset_x" type="double">0</attr>
      <attr name="grid_parent_offset_y" type="double">0</attr>
      <grid_isdrawn />
      <generatedverbslist type="stringlist" />
      <darklevel type="boolean">false</darklevel>
      <visited />
      <exit name="exit235" alias="west" to="i10">
        <inherit name="westdirection" />
        <look type="script">
          look_room (i10)
        </look>
        <attr name="grid_x" type="double">6</attr>
        <attr name="grid_y" type="double">2.5</attr>
        <attr name="end_x" type="double">5</attr>
        <attr name="end_y" type="double">2.5</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit236" alias="north" to="i01">
        <inherit name="northdirection" />
        <look type="script">
          look_room (i01)
        </look>
        <attr name="grid_x" type="double">6.5</attr>
        <attr name="grid_y" type="double">2</attr>
        <attr name="end_x" type="double">6.5</attr>
        <attr name="end_y" type="double">1</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
      <exit name="exit237" alias="south" to="tr_start02">
        <inherit name="southdirection" />
        <look type="script">
          look_room (tr_start02)
        </look>
        <attr name="grid_x" type="double">6.5</attr>
        <attr name="grid_y" type="double">3</attr>
        <attr name="end_x" type="double">6.5</attr>
        <attr name="end_y" type="double">4</attr>
        <grid_render />
        <generatedverbslist type="stringlist" />
      </exit>
    </object>
  </object>
  <object name="deadRat">
    <inherit name="editor_object" />
    <alias>dead rat</alias>
    <alt type="stringlist">
      <value>rat</value>
      <value>dead rat</value>
    </alt>
    <take type="boolean">false</take>
    <look>A dead, but not-yet-rotting rat...so it probably isn't toxic.</look>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <eat type="script">
      grow_snake
      msg ("Delicious! You feel...invigorated. Virile. Voluptuous......you're starting to make yourself uncomfortable.")
      ClearFramePicture
      RemoveObject (deadRat)
    </eat>
    <generatedverbslist type="stringlist">
      <value>Eat</value>
    </generatedverbslist>
  </object>
  <object name="box">
    <inherit name="editor_object" />
    <look>The large box appears to be very heavy. There doesn't seem to be a way to open it, but if you had to hazard a guess as to the nature of its contents, you'd probably go with...spiders? Very dense spiders.</look>
    <push type="script"><![CDATA[
      if (player.length >= 5) {
        msg ("You slam into the box with all of your weight, and manage to push it aside. You feel a sense of accomplishment somewhat disproportionate to the task of moving a box.")
        UnlockExit (vent20in)
        ClearFramePicture
        RemoveObject (box)
      }
      else {
        msg ("You feel exhausted, too weak to even push a box. You're so hungry you could eat a grue, and you don't even know what that is.")
      }
    ]]></push>
    <generatedverbslist type="stringlist">
      <value>Push</value>
    </generatedverbslist>
  </object>
  <object name="deadRat1">
    <inherit name="editor_object" />
    <alias>dead rat</alias>
    <alt type="stringlist">
      <value>rat</value>
      <value>dead rat</value>
    </alt>
    <take type="boolean">false</take>
    <look>A dead, but perfectly edible rat. Only a fool would pass up such a rat.</look>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <eat type="script">
      grow_snake
      msg ("Packing on the pounds, there, aren't you? Look, someone had to tell you. Really, you should be thankful. Don't get so damn emotional!")
      ClearFramePicture
      RemoveObject (deadRat1)
    </eat>
    <generatedverbslist type="stringlist">
      <value>Eat</value>
    </generatedverbslist>
  </object>
  <object name="deadRat2">
    <inherit name="editor_object" />
    <alias>dead rat</alias>
    <alt type="stringlist">
      <value>rat</value>
      <value>dead rat</value>
    </alt>
    <take type="boolean">false</take>
    <look>A less-dead, but equally edible rat. You're not going to let it suffer, are you?</look>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <eat type="script">
      grow_snake
      msg ("The rat goes straight to your ample midsection as you put it out of its misery....or maybe that rat was just getting better, and you've swooped in and taken its life before it could even tell its family it loved them. Looks like you'll just have to spend the rest of your days wondering: what if?")
      ClearFramePicture
      RemoveObject (deadRat2)
    </eat>
    <generatedverbslist type="stringlist">
      <value>Eat</value>
    </generatedverbslist>
  </object>
  <object name="ikeaShelf">
    <inherit name="editor_object" />
    <inherit name="container_closed" />
    <alias>Ikea shelf</alias>
    <isopen type="boolean">false</isopen>
    <hidechildren type="boolean">false</hidechildren>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <drag type="script">
      msg ("You snatch the shelf and begin to drag it.")
      AddToInventory (this)
    </drag>
    <look type="script"><![CDATA[
      if (player.length < 7) {
        msg ("It's an Ikea shelf. Solid, modern, and likely to collapse if looked at in the wrong way. It surely couldn't hold your weight, especially after you shamelessly gorged on rats.")
      }
      else {
        msg ("You look at " + this.alias + " sternly. It is intimidated by your strength and collapses immediately. Several wrapped food items fall out of one of the drawers.")
        MoveObject (snack0, this.parent)
        MoveObject (snack1, this.parent)
        RemoveObject (this)
      }
    ]]></look>
    <climbup type="script"><![CDATA[
      if (player.length < 7) {
        msg ("You climb on the shelf.")
      }
      else {
        msg ("You look at " + this.alias + " with the intent to climb it. It is intimidated by your size and collapses immediately. Several wrapped food items fall out of one of the drawers.")
        MoveObject (snack0, this.parent)
        MoveObject (snack1, this.parent)
        RemoveObject (this)
      }
    ]]></climbup>
    <generatedverbslist type="stringlist">
      <value>Drag</value>
      <value>Climb up</value>
    </generatedverbslist>
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </object>
  <object name="snack0">
    <inherit name="editor_object" />
    <alias>brightly coloured candy</alias>
    <alt type="stringlist">
      <value>snack</value>
      <value>candy</value>
    </alt>
    <take type="boolean">false</take>
    <look>Ooh! Candy!</look>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <visible />
    <eat type="script">
      grow_snake
      msg ("It tastes so good, but the shame burns so badly. Not that you care. You're just taking up ever more space as you go.")
      ClearFramePicture
      RemoveObject (this)
    </eat>
    <generatedverbslist type="stringlist">
      <value>Eat</value>
    </generatedverbslist>
  </object>
  <object name="snack1">
    <inherit name="editor_object" />
    <alias>dull boring candy</alias>
    <alt type="stringlist">
      <value>snack</value>
      <value>candy</value>
    </alt>
    <take type="boolean">false</take>
    <look>Ooh! Candy!</look>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <visible />
    <eat type="script">
      grow_snake
      msg ("You down it all like nothing. Did your parents teach you no manners? You are grown now, but only in size.")
      ClearFramePicture
      RemoveObject (this)
    </eat>
    <generatedverbslist type="stringlist">
      <value>Eat</value>
    </generatedverbslist>
  </object>
  <type name="defaultverb">
    <separator>with; using</separator>
    <multiobjectmenu>With which object?</multiobjectmenu>
    <multiobjectdefault>That doesn't work.</multiobjectdefault>
    <multiobjectmenuempty>There are no objects available to do that with.</multiobjectmenuempty>
    <script type="script"><![CDATA[
      if (not IsDefined("object2")) {
        object2 = null
      }
      switch (TypeOf(object, this.property)) {
        case ("script") {
          if (object2 = null) {
            do (object, this.property)
          }
          else {
            msg (this.multiobjectdefault)
          }
        }
        case ("string") {
          if (object2 = null) {
            msg (GetString(object, this.property))
          }
          else {
            msg (this.multiobjectdefault)
          }
        }
        case ("scriptdictionary") {
          if (object2 <> null) {
            HandleMultiVerb (object, this.property, object2, this.multiobjectdefault)
          }
          else {
            menu = NewStringDictionary()
            objectlist = ListCombine (ScopeReachableInventory(), ScopeReachableNotHeld())
            excludelist = NewObjectList()
            list add (excludelist, game.pov)
            list add (excludelist, object)
            candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
            if (ListCount(candidates) = 0) {
              msg (this.multiobjectmenuempty)
            }
            else {
              GenerateMenuChoices (menu, candidates)
              game.pov.multiverb = this.property
              game.pov.multiverbobject = object
              game.pov.multiverbobjectdefault = this.multiobjectdefault
              ShowMenu (this.multiobjectmenu, menu, true) {
                if (result <> null) {
                  HandleMultiVerb (game.pov.multiverbobject, game.pov.multiverb, GetObject(result), game.pov.multiverbobjectdefault)
                  game.pov.multiverb = null
                  game.pov.multiverbobject = null
                  game.pov.multiverbobjectdefault = null
                }
              }
            }
          }
        }
        case ("null") {
          if (this.defaulttext <> null) {
            msg (this.defaulttext)
          }
          else if (this.defaulttemplate <> null) {
            msg (DynamicTemplate(this.defaulttemplate, object))
          }
          else if (this.defaultexpression <> null) {
            params = NewDictionary()
            dictionary add (params, "object", object)
            msg (Eval(this.defaultexpression, params))
          }
          else {
            error ("No verb response defined")
          }
        }
        default {
          error ("No verb response defined")
        }
      }
    ]]></script>
  </type>
  <type name="defaultgame">
    <enablehyperlinks />
    <echocommand />
    <echohyperlinks />
    <showdescriptiononenter />
    <autodescription />
    <defaultfont>Georgia, serif</defaultfont>
    <defaultfontsize type="int">12</defaultfontsize>
    <defaultbackground>White</defaultbackground>
    <defaultforeground>Black</defaultforeground>
    <defaultlinkforeground>Blue</defaultlinkforeground>
    <backgroundimage type="string"></backgroundimage>
    <setbackgroundopacity type="boolean">false</setbackgroundopacity>
    <backgroundopacity type="double">0.5</backgroundopacity>
    <menufont>Arial</menufont>
    <menufontsize type="int">9</menufontsize>
    <menubackground>White</menubackground>
    <menuforeground>Black</menuforeground>
    <menuhoverbackground>LightGrey</menuhoverbackground>
    <menuhoverforeground>Black</menuhoverforeground>
    <underlinehyperlinks />
    <compassdirections type="stringlist">
      <value>northwest</value>
      <value>north</value>
      <value>northeast</value>
      <value>west</value>
      <value>east</value>
      <value>southwest</value>
      <value>south</value>
      <value>southeast</value>
      <value>up</value>
      <value>down</value>
      <value>in</value>
      <value>out</value>
    </compassdirections>
    <clearframe />
    <timeelapsed type="int">0</timeelapsed>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <allobjects type="stringlist">
      <value>all</value>
      <value>everything</value>
    </allobjects>
    <parserignoreprefixes type="stringlist">
      <value>the</value>
      <value>a</value>
      <value>an</value>
    </parserignoreprefixes>
    <displayroomdescriptiononstart />
    <showpanes />
    <showcommandbar />
    <showscore type="boolean">false</showscore>
    <showhealth type="boolean">false</showhealth>
    <autodisplayverbs />
    <attr name="autodescription_youarein" type="int">1</attr>
    <attr name="autodescription_youcansee" type="int">2</attr>
    <attr name="autodescription_youcango" type="int">3</attr>
    <attr name="autodescription_description" type="int">4</attr>
    <autodescription_youarein_useprefix />
    <attr name="autodescription_youarein_newline" type="boolean">false</attr>
    <attr name="autodescription_youcansee_newline" type="boolean">false</attr>
    <attr name="autodescription_youcango_newline" type="boolean">false</attr>
    <attr name="autodescription_description_newline" type="boolean">false</attr>
    <description type="string"></description>
    <languageid>en</languageid>
    <gridmap type="boolean">false</gridmap>
    <mapscale type="int">30</mapscale>
    <mapsize type="int">300</mapsize>
    <changedpov type="script">
      InitPOV (oldvalue, game.pov)
    </changedpov>
  </type>
  <type name="defaultobject">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
      }
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
  </type>
  <type name="defaultexit">
    <displayverbs type="stringlist">
      <value>Go to</value>
    </displayverbs>
    <visible />
    <scenery type="boolean">false</scenery>
    <locked type="boolean">false</locked>
    <lockmessage>That way is locked.</lockmessage>
    <lookonly type="boolean">false</lookonly>
    <runscript type="boolean">false</runscript>
    <lightstrength type="string"></lightstrength>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_offset_x" type="int">0</attr>
    <attr name="grid_offset_y" type="int">0</attr>
  </type>
  <type name="direction">
    <displayverbs type="stringlist">
      <value>Go</value>
    </displayverbs>
  </type>
  <type name="compassdirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="updowndirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="inoutdirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="northwestdirection">
    <inherit name="compassdirection" />
    <alias>northwest</alias>
    <alt type="stringlist">
      <value>nw</value>
    </alt>
  </type>
  <type name="northdirection">
    <inherit name="compassdirection" />
    <alias>north</alias>
    <alt type="stringlist">
      <value>n</value>
    </alt>
  </type>
  <type name="northeastdirection">
    <inherit name="compassdirection" />
    <alias>northeast</alias>
    <alt type="stringlist">
      <value>ne</value>
    </alt>
  </type>
  <type name="westdirection">
    <inherit name="compassdirection" />
    <alias>west</alias>
    <alt type="stringlist">
      <value>w</value>
    </alt>
  </type>
  <type name="eastdirection">
    <inherit name="compassdirection" />
    <alias>east</alias>
    <alt type="stringlist">
      <value>e</value>
    </alt>
  </type>
  <type name="southwestdirection">
    <inherit name="compassdirection" />
    <alias>southwest</alias>
    <alt type="stringlist">
      <value>sw</value>
    </alt>
  </type>
  <type name="southdirection">
    <inherit name="compassdirection" />
    <alias>south</alias>
    <alt type="stringlist">
      <value>s</value>
    </alt>
  </type>
  <type name="southeastdirection">
    <inherit name="compassdirection" />
    <alias>southeast</alias>
    <alt type="stringlist">
      <value>se</value>
    </alt>
  </type>
  <type name="updirection">
    <inherit name="updowndirection" />
    <alias>up</alias>
    <alt type="stringlist">
      <value>u</value>
    </alt>
  </type>
  <type name="downdirection">
    <inherit name="updowndirection" />
    <alias>down</alias>
    <alt type="stringlist">
      <value>d</value>
    </alt>
  </type>
  <type name="indirection">
    <inherit name="inoutdirection" />
    <alias>in</alias>
    <alt type="stringlist">
      <value></value>
    </alt>
  </type>
  <type name="outdirection">
    <inherit name="inoutdirection" />
    <alias>out</alias>
    <alt type="stringlist">
      <value>o</value>
    </alt>
  </type>
  <type name="defaultcommand">
    <pattern>^$</pattern>
  </type>
  <type name="male">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>he</gender>
    <article>him</article>
  </type>
  <type name="namedmale">
    <inherit name="male" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </type>
  <type name="female">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>she</gender>
    <article>her</article>
  </type>
  <type name="namedfemale">
    <inherit name="female" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </type>
  <type name="plural">
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="maleplural">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="femaleplural">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="openable">
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_base">
    <container />
  </type>
  <type name="container_closed">
    <inherit name="container_base" />
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_open">
    <inherit name="container_base" />
    <isopen />
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="surface">
    <inherit name="container_base" />
    <isopen />
    <transparent />
    <contentsprefix>on which there is</contentsprefix>
  </type>
  <type name="container">
    <inherit name="container_open" />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_limited">
    <inherit name="container" />
    <maxobjects type="int">1</maxobjects>
    <maxvolume type="int">100</maxvolume>
    <addscript type="AddScript"><![CDATA[
      activecontainer = this
      correct = true
      while (DoesInherit(activecontainer, "container_base")) {
        if (HasInt(activecontainer, "maxvolume")) {
          if (GetVolume(object, true) + GetVolume(activecontainer, false) > activecontainer.maxvolume) {
            correct = false
            if (HasString(this, "containerfullmessage")) {
              message = this.containerfullmessage
            }
            else {
              message = DynamicTemplate("ContainerFull", this)
            }
          }
        }
        activecontainer = activecontainer.parent
      }
      children = GetDirectChildren(this)
      if (listcount(children) >= this.maxobjects) {
        correct = false
        if (HasString(this, "containerfullmessage")) {
          message = this.containerfullmessage
        }
        else {
          message = DynamicTemplate("MaxObjectsInContainer", this)
        }
      }
      if (correct = false) {
        msg (message)
      }
      else {
        object.parent = this
        msg (Template("Done"))
      }
    ]]></addscript>
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_lockable">
    <locked />
    <nokeymessage>You do not have the key.</nokeymessage>
    <unlockmessage>Unlocked.</unlockmessage>
    <lockmessage>Locked.</lockmessage>
    <canlockopen type="boolean">false</canlockopen>
    <autoopen />
    <autounlock />
    <openscript type="script">
      if (this.locked) {
        if (this.autounlock and ListContains(ScopeInventory(), this.key)) {
          do (this, "unlock")
          if (not this.isopen) {
            OpenObject (this)
          }
        }
        else {
          msg (DynamicTemplate("LockedObject", this))
        }
      }
      else {
        OpenObject (this)
      }
    </openscript>
    <closescript type="script">
      if (this.locked) {
        msg (DynamicTemplate("LockedObject", this))
      }
      else {
        CloseObject (this)
      }
    </closescript>
    <lock type="script">
      if (this.locked) {
        msg (DynamicTemplate("AlreadyLocked", this))
      }
      else if (this.isopen and not this.canlockopen) {
        msg (DynamicTemplate("CannotLockOpen", this))
      }
      else {
        if (ListContains(ScopeInventory(), this.key)) {
          msg (this.lockmessage)
          this.locked = true
        }
        else {
          msg (this.nokeymessage)
        }
      }
    </lock>
    <unlock type="script">
      if (not this.locked) {
        msg (DynamicTemplate("AlreadyUnlocked", this))
      }
      else {
        if (ListContains(ScopeInventory(), this.key)) {
          msg (this.unlockmessage)
          this.locked = false
          if (this.autoopen and not this.isopen) {
            TryOpenClose (true, this)
          }
        }
        else {
          msg (this.nokeymessage)
        }
      }
    </unlock>
  </type>
  <type name="defaultplayer">
    <inherit name="editor_player" />
    <inherit name="editor_object" />
  </type>
  <type name="switchable">
    <switchedon type="boolean">false</switchedon>
    <turnon type="script">
      if (this.switchedon) {
        msg (DynamicTemplate("AlreadySwitchedOn", this))
      }
      else {
        if (HasString(this, "switchonmsg")) {
          msg (this.switchonmsg)
        }
        else {
          msg (DynamicTemplate("SwitchedOn", this))
        }
        this.switchedon = true
      }
    </turnon>
    <turnoff type="script">
      if (not this.switchedon) {
        msg (DynamicTemplate("AlreadySwitchedOff", this))
      }
      else {
        if (HasString(this, "switchoffmsg")) {
          msg (this.switchoffmsg)
        }
        else {
          msg (DynamicTemplate("SwitchedOff", this))
        }
        this.switchedon = false
      }
    </turnoff>
    <displayverbs type="stringlist">
      <value>Switch on</value>
      <value>Switch off</value>
    </displayverbs>
  </type>
  <type name="edible">
    <eathealth type="int">0</eathealth>
    <eat type="script">
      if (HasString(this, "eatmsg")) {
        msg (this.eatmsg)
      }
      else {
        msg (DynamicTemplate("Eaten", this))
      }
      if (HasInt(game.pov, "health")) {
        game.pov.health = game.pov.health + this.eathealth
      }
      destroy (this.name)
    </eat>
    <displayverbs type="stringlist">
      <value>Eat</value>
    </displayverbs>
  </type>
  <type name="gridborder_path_ew">
    <attr name="grid_bordersides" type="int">10</attr>
  </type>
  <type name="gridborder_path_e">
    <attr name="grid_bordersides" type="int">11</attr>
  </type>
  <type name="gridborder_path_w">
    <attr name="grid_bordersides" type="int">14</attr>
  </type>
  <type name="gridborder_path_ns">
    <attr name="grid_bordersides" type="int">5</attr>
  </type>
  <type name="gridborder_path_n">
    <attr name="grid_bordersides" type="int">7</attr>
  </type>
  <type name="gridborder_path_s">
    <attr name="grid_bordersides" type="int">13</attr>
  </type>
  <type name="editor_room" />
  <type name="editor_object" />
  <type name="editor_player" />
  <type name="not_snake_room" />
  <type name="shake_light_base">
    <attr name="max_dur" type="int">0</attr>
    <attr name="remaining_dur" type="int">0</attr>
    <alias>flashlight</alias>
    <target type="object">player</target>
    <shake type="script">
      msg ("You shake the flashlight. " + this.max_dur + " little lights blink on the side. What could they mean...?")
      in_list = false
      foreach (light, this.target.lights_list) {
        if (light = this) {
          in_list = true
        }
      }
      if (not in_list) {
        list add (this.target.lights_list, this)
      }
      this.remaining_dur = this.max_dur
    </shake>
  </type>
  <type name="photoreceptor_base">
    <attr name="light_req" type="int">0</attr>
    <initialized type="boolean">false</initialized>
    <attr name="powered_on" type="boolean">false</attr>
    <poweron type="script"><![CDATA[
      curr_light = 0
      foreach (light, this.lights_list) {
        if (light.remaining_dur > 0) {
          curr_light = curr_light + 1
        }
      }
      msg ("It looks like this unit is powerd by light. Reading the panel, it looks like it requires " + this.light_req + " light sources to fully power on,")
      if (curr_light < this.light_req) {
        msg ("but there are " + curr_light + " lights on in the room.")
      }
      else {
        this.powered_on = true
        msg ("and there is enought light! It powers on!")
      }
    ]]></poweron>
    <use type="script">
      if (this.powered_on) {
        msg ("The door control indicates the door is unlocked.")
        UnlockExit (t_torches00_to_f24)
      }
      else {
        msg ("This unit appears to need to be powered on before it can be used.")
      }
    </use>
  </type>
  <function name="GetDefaultPrefix" parameters="obj" type="string"><![CDATA[
    if (Instr("aeiou", LCase(Left(GetDisplayAlias(obj), 1))) > 0) {
      return ("an")
    }
    else {
      return ("a")
    }
  ]]></function>
  <function name="WriteVerb" parameters="obj, verb" type="string">
    return (CapFirst(obj.gender) + " " + Conjugate(obj, verb))
  </function>
  <function name="Conjugate" parameters="obj, verb" type="string">
    gender = obj.gender
    if (gender = "he" or gender = "she") {
      gender = "it"
    }
    switch (verb) {
      case ("be") {
        switch (gender) {
          case ("i") {
            return ("am")
          }
          case ("you") {
            return ("are")
          }
          case ("it") {
            return ("is")
          }
          case ("we") {
            return ("are")
          }
          case ("they") {
            return ("are")
          }
          default {
            return ("is")
          }
        }
      }
      case ("do") {
        switch (gender) {
          case ("i") {
            return ("do")
          }
          case ("you") {
            return ("do")
          }
          case ("it") {
            return ("does")
          }
          case ("we") {
            return ("do")
          }
          case ("they") {
            return ("do")
          }
          default {
            return ("do")
          }
        }
      }
      default {
        if (gender = "it") {
          return (verb + "s")
        }
        else {
          return (verb)
        }
      }
    }
  </function>
  <function name="ListObjectContents" parameters="object"><![CDATA[
    if (GetBoolean(object, "isopen") and GetBoolean(object, "listchildren")) {
      if (GetBoolean(object, "hidechildren")) {
        object.hidechildren = false
      }
      if (HasString(object, "listchildrenprefix")) {
        listprefix = object.listchildrenprefix
      }
      else {
        listprefix = DynamicTemplate("ObjectContains", object)
      }
      list = FormatObjectList(listprefix, object, Template("And"), ".", false)
      if (list <> "") {
        msg (list)
      }
    }
  ]]></function>
  <function name="DoTake" parameters="object, ismultiple"><![CDATA[
    prefix = ""
    if (ismultiple) {
      prefix = GetDisplayAlias(object) + ": "
    }
    if (object.parent = game.pov) {
      msg (prefix + DynamicTemplate("AlreadyTaken", object))
    }
    else if (not ListContains(ScopeReachable(), object)) {
      msg (prefix + DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      volume = 0
      continue = true
      foreach (obj, GetAllChildObjects(game.pov)) {
        if (HasInt(obj, "volume")) {
          volume = volume + obj.volume
        }
      }
      if (not Contains(game.pov, object)) {
        volume = volume + GetVolume(object,true)
      }
      if (HasInt(game.pov, "maxvolume")) {
        if (volume > game.pov.maxvolume) {
          continue = false
          if (HasString(game.pov, "containerfullmessage")) {
            message = prefix + game.pov.containerfullmessage
          }
          else {
            message = prefix + DynamicTemplate("FullInventory", object)
          }
        }
      }
      children = GetDirectChildren(game.pov)
      if (HasInt(game.pov, "maxobjects")) {
        if (game.pov.maxobjects > 0) {
          if (ListCount(children) >= game.pov.maxobjects) {
            continue = false
            if (HasString(game.pov, "containermaxobjects")) {
              message = prefix + game.pov.containermaxobjects
            }
            else {
              message = prefix + DynamicTemplate("MaxObjectsInInventory", object)
            }
          }
        }
      }
      if (continue = false) {
        msg (message)
      }
      else {
        found = true
        takemsg = object.takemsg
        switch (TypeOf(object, "take")) {
          case ("script") {
            if (ismultiple) {
              msg (prefix)
            }
            do (object, "take")
            takemsg = ""
          }
          case ("boolean") {
            if (object.take = true) {
              object.parent = game.pov
              if (takemsg = null) {
                takemsg = DynamicTemplate("TakeSuccessful", object)
              }
            }
            else {
              found = false
            }
          }
          case ("string") {
            object.parent = game.pov
            takemsg = object.take
          }
          default {
            found = false
          }
        }
        if (not found and takemsg = null) {
          takemsg = DynamicTemplate("TakeUnsuccessful", object)
        }
        if (LengthOf(takemsg) > 0) {
          msg (prefix + takemsg)
          if (GetBoolean ( object , "scenery" )) {
            object.scenery = false
          }
        }
        if (HasScript(object, "ontake")) {
          do (object, "ontake")
        }
      }
    }
  ]]></function>
  <function name="DoDrop" parameters="object, ismultiple"><![CDATA[
    prefix = ""
    if (ismultiple) {
      prefix = GetDisplayAlias(object) + ": "
    }
    if (not ListContains(ScopeInventory(), object)) {
      msg (prefix + DynamicTemplate("NotCarrying", object))
    }
    else if (not ListContains(ScopeReachable(), object)) {
      msg (prefix + DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      found = true
      dropmsg = object.dropmsg
      switch (TypeOf(object, "drop")) {
        case ("script") {
          if (ismultiple) {
            msg (prefix)
          }
          do (object, "drop")
          dropmsg = ""
        }
        case ("boolean") {
          if (object.drop = true) {
            object.parent = game.pov.parent
            if (dropmsg = null) {
              dropmsg = DynamicTemplate("DropSuccessful", object)
            }
          }
          else {
            found = false
          }
        }
        case ("string") {
          object.parent = game.pov.parent
          dropmsg = object.drop
        }
        default {
          found = false
        }
      }
      if (not found and dropmsg = null) {
        dropmsg = DynamicTemplate("DropUnsuccessful", object)
      }
      if (LengthOf(dropmsg) > 0) {
        msg (prefix + dropmsg)
      }
      if (HasScript(object, "ondrop")) {
        do (object, "ondrop")
      }
    }
  ]]></function>
  <function name="CreateUseMenuList" parameters="object" type="objectlist">
    objectlist = NewObjectList()
    objectlist = ScopeReachableInventory()
    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())
    excludelist = NewObjectList()
    list add (excludelist, game.pov)
    list add (excludelist, object)
    candidates = NewObjectList()
    candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
    return (candidates)
  </function>
  <function name="TryOpenClose" parameters="doopen, object">
    if (doopen) {
      action = "open"
      scriptaction = "openscript"
    }
    else {
      action = "close"
      scriptaction = "closescript"
    }
    if (not ListContains(ScopeReachable(), object)) {
      msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      found = false
      if (GetBoolean(object, action)) {
        if (doopen) {
          if (object.isopen) {
            msg (DynamicTemplate("AlreadyOpen", object))
          }
          else {
            if (HasScript(object, scriptaction)) {
              do (object, scriptaction)
            }
            else {
              OpenObject (object)
            }
          }
        }
        else {
          if (not object.isopen) {
            msg (DynamicTemplate("AlreadyClosed", object))
          }
          else {
            if (HasScript(object, scriptaction)) {
              do (object, scriptaction)
            }
            else {
              CloseObject (object)
            }
          }
        }
      }
      else {
        if (doopen) {
          msg (DynamicTemplate("CantOpen", object))
        }
        else {
          msg (DynamicTemplate("CantClose", object))
        }
      }
    }
  </function>
  <function name="OpenObject" parameters="object">
    if (HasString(object, "openmsg")) {
      msg (object.openmsg)
    }
    else {
      msg (DynamicTemplate("OpenSuccessful", object))
    }
    object.isopen = true
    ListObjectContents (object)
  </function>
  <function name="CloseObject" parameters="object">
    if (HasString(object, "closemsg")) {
      msg (object.closemsg)
    }
    else {
      msg (DynamicTemplate("CloseSuccessful", object))
    }
    object.isopen = false
  </function>
  <function name="CreateGiveMenuList" parameters="object" type="objectlist">
    objectlist = NewObjectList()
    objectlist = ScopeReachableInventory()
    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())
    excludelist = NewObjectList()
    list add (excludelist, game.pov)
    list add (excludelist, object)
    candidates = NewObjectList()
    candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
    return (candidates)
  </function>
  <function name="HandleGiveTo" parameters="object1, object2">
    handled = false
    if (HasString(object2, "give")) {
      msg (object2.give)
      handled = true
    }
    else if (TypeOf(object2, "give") = "scriptdictionary") {
      if (DictionaryContains(object2.give, object1.name)) {
        invoke (ScriptDictionaryItem(object2.give, object1.name))
        handled = true
      }
      if (not handled) {
        if (HasScript(object2, "giveanything")) {
          parameters = NewObjectDictionary()
          dictionary add (parameters, "object", object1)
          do (object2, "giveanything", parameters)
          handled = true
        }
      }
    }
    if (not handled) {
      if (HasString(object1, "giveto")) {
        msg (object1.giveto)
        handled = true
      }
      else if (TypeOf(object1, "giveto") = "scriptdictionary") {
        if (DictionaryContains(object1.giveto, object2.name)) {
          invoke (ScriptDictionaryItem(object1.giveto, object2.name))
          handled = true
        }
        else {
          if (HasScript(object1, "givetoanything")) {
            parameters = NewObjectDictionary()
            dictionary add (parameters, "object", object2)
            do (object1, "givetoanything", parameters)
            handled = true
          }
        }
      }
    }
    if (not handled) {
      msg (DynamicTemplate("DefaultGive", object2, object1))
    }
  </function>
  <function name="HandleUseOn" parameters="object1, object2">
    handled = false
    if (HasString(object2, "useon")) {
      msg (object2.useon)
      handled = true
    }
    else if (TypeOf(object2, "useon") = "scriptdictionary") {
      if (DictionaryContains(object2.useon, object1.name)) {
        invoke (ScriptDictionaryItem(object2.useon, object1.name))
        handled = true
      }
      else {
        if (HasScript(object2, "useanything")) {
          parameters = NewObjectDictionary()
          dictionary add (parameters, "object", object1)
          do (object2, "useanything", parameters)
          handled = true
        }
      }
    }
    if (not handled) {
      if (HasString(object1, "selfuseon")) {
        msg (object1.selfuseon)
        handled = true
      }
      else if (TypeOf(object1, "selfuseon") = "scriptdictionary") {
        if (DictionaryContains(object1.selfuseon, object2.name)) {
          invoke (ScriptDictionaryItem(object1.selfuseon, object2.name))
          handled = true
        }
        else {
          if (HasScript(object1, "selfuseanything")) {
            parameters = NewObjectDictionary()
            dictionary add (parameters, "object", object2)
            do (object1, "selfuseanything", parameters)
            handled = true
          }
        }
      }
    }
    if (not handled) {
      msg (DynamicTemplate("DefaultUseOn", object2, object1))
    }
  </function>
  <function name="DoAskTell" parameters="object, text, property, defaultscript, defaulttemplate"><![CDATA[
    handled = false
    maxstrength = 0
    match = null
    text = LCase(text)
    if (TypeOf(object, property) = "scriptdictionary") {
      dictionary = GetAttribute(object, property)
      foreach (keywords, dictionary) {
        strength = GetKeywordsMatchStrength(LCase(keywords), text)
        if (strength >= maxstrength and strength>0) {
          match = ScriptDictionaryItem(dictionary, keywords)
          maxstrength = strength
        }
      }
      if (match <> null) {
        invoke (match)
        handled = true
      }
    }
    if (not handled) {
      if (HasScript(object, defaultscript)) {
        do (object, defaultscript)
      }
      else {
        msg (DynamicTemplate(defaulttemplate, object))
      }
    }
  ]]></function>
  <function name="GetKeywordsMatchStrength" parameters="keywords, input" type="int">
    keywordlist = Split(keywords, " ")
    inputlist = Split(input, " ")
    strength = 0
    foreach (word, inputlist) {
      foreach (keyword, keywordlist) {
        if (StartsWith(word, keyword)) {
          strength = strength + LengthOf(keyword)
        }
      }
    }
    return (strength)
  </function>
  <function name="CompareNames" parameters="name, value, obj, fullmatches, partialmatches"><![CDATA[
    if (name = value) {
      if (not ListContains(fullmatches, obj)) {
        list add (fullmatches, obj)
      }
    }
    else {
      if (StartsWith(name, value)) {
        if (not ListContains(partialmatches, obj)) {
          list add (partialmatches, obj)
        }
      }
      else {
        if (Instr(name, " " + value) > 0) {
          if (not ListContains(partialmatches, obj)) {
            list add (partialmatches, obj)
          }
        }
      }
    }
  ]]></function>
  <function name="GenerateMenuChoices" parameters="dictionary, objects">
    foreach (obj, objects) {
      if (not DictionaryContains(dictionary, obj.name)) {
        dictionary add (dictionary, obj.name, GetDisplayAlias(obj))
      }
    }
  </function>
  <function name="ResolveName" parameters="variable, value, objtype" type="object"><![CDATA[
    found = false
    if (game.pov.commandmetadata <> null) {
      if (DictionaryContains(game.pov.commandmetadata, value)) {
        result = GetObject(StringDictionaryItem(game.pov.commandmetadata, value))
        if (result <> null) {
          if (ListContains(ScopeVisible(), result)) {
            found = true
            return (result)
          }
        }
      }
    }
    if (not found) {
      value = LCase(value)
      result = ResolveNameInternal(variable, value, objtype)
      if (result <> null) {
        return (result)
      }
      else {
        foreach (prefix, game.parserignoreprefixes) {
          if (StartsWith(value, prefix + " ")) {
            result = ResolveNameInternal(variable, Mid(value, LengthOf(prefix) + 1), objtype)
          }
        }
        if (result = null and LengthOf(variable) = 0 and not GetBoolean(game.pov, "currentcommandmultiobjectpending")) {
          UnresolvedCommand (value, game.pov.currentcommandpendingvariable)
        }
        return (result)
      }
    }
  ]]></function>
  <function name="ResolveNameInternal" parameters="variable, value, objtype" type="object"><![CDATA[
    fullmatches = NewObjectList()
    partialmatches = NewObjectList()
    game.pov.currentcommandmultiobjectpending = false
    if (objtype = "object") {
      scope = ScopeVisible()
    }
    else if (objtype = "exit") {
      scope = ScopeExits()
    }
    value = Trim(value)
    foreach (obj, scope) {
      name = LCase(GetDisplayAlias(obj))
      CompareNames (name, value, obj, fullmatches, partialmatches)
      if (obj.alt <> null) {
        foreach (altname, obj.alt) {
          CompareNames (LCase(altname), value, obj, fullmatches, partialmatches)
        }
      }
    }
    if (game.lastobjects <> null) {
      foreach (obj, game.lastobjects) {
        CompareNames (LCase(obj.article), value, obj, fullmatches, partialmatches)
        CompareNames (LCase(obj.gender), value, obj, fullmatches, partialmatches)
      }
    }
    if (ListCount(fullmatches) = 1) {
      return (ListItem(fullmatches, 0))
    }
    else if (ListCount(fullmatches) = 0 and ListCount(partialmatches) = 1) {
      return (ListItem(partialmatches, 0))
    }
    else if (ListCount(fullmatches) + ListCount(partialmatches) = 0) {
      return (null)
    }
    else {
      menu = NewStringDictionary()
      GenerateMenuChoices (menu, fullmatches)
      GenerateMenuChoices (menu, partialmatches)
      if (LengthOf(variable) > 0) {
        game.pov.currentcommandpendingvariable = variable
        ShowMenu (DynamicTemplate("DisambiguateMenu", value), menu, true) {
          varname = game.pov.currentcommandpendingvariable
          game.pov.currentcommandpendingvariable = null
          if (result <> null) {
            AddToResolvedNames (varname, GetObject(result))
          }
        }
      }
      else {
        game.pov.currentcommandmultiobjectpending = true
        ShowMenu (DynamicTemplate("DisambiguateMenu", value), menu, true) {
          if (result <> null) {
            list add (game.pov.currentcommandpendingobjectlist, GetObject(result))
            ResolveNextNameListItem
          }
        }
      }
      return (null)
    }
  ]]></function>
  <function name="ResolveNameList" parameters="value, scope, objtype">
    game.pov.currentcommandpendingobjectlist = NewObjectList()
    game.pov.currentcommandpendingobjectlistunresolved = NewStringList()
    game.pov.currentcommandpendingobjectscope = scope
    game.pov.currentcommandpendingobjecttype = objtype
    inputlist = Split(value, ",")
    foreach (inputbase, inputlist) {
      inputlist2 = Split(inputbase, " " + Template("And") + " ")
      foreach (input, inputlist2) {
        list add (game.pov.currentcommandpendingobjectlistunresolved, input)
      }
    }
    ResolveNextNameListItem
  </function>
  <function name="ResolveNextNameListItem"><![CDATA[
    resolvedall = false
    if (TypeOf(game.pov, "currentcommandpendingobjectlistunresolved") = "stringlist") {
      queuelength = ListCount(game.pov.currentcommandpendingobjectlistunresolved)
      if (queuelength > 0) {
        thisitem = Trim(StringListItem(game.pov.currentcommandpendingobjectlistunresolved, 0))
        if (queuelength = 1) {
          game.pov.currentcommandpendingobjectlistunresolved = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.currentcommandpendingobjectlistunresolved, i))
          }
          game.pov.currentcommandpendingobjectlistunresolved = newqueue
        }
        ResolveNameListItem (Trim(thisitem))
      }
      else {
        resolvedall = true
      }
    }
    else {
      resolvedall = true
    }
    if (resolvedall) {
      ResolveNameListItemFinished (game.pov.currentcommandpendingobjectlist)
    }
  ]]></function>
  <function name="ResolveNameListItem" parameters="value"><![CDATA[
    if (ListContains(game.allobjects, value)) {
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", true)
      }
      ResolveNameListItemFinished (game.pov.currentcommandpendingobjectscope)
    }
    else {
      object = ResolveName("", value, game.pov.currentcommandpendingobjecttype)
      if (object <> null) {
        list add (game.pov.currentcommandpendingobjectlist, object)
        ResolveNextNameListItem
      }
    }
  ]]></function>
  <function name="ResolveNameListItemFinished" parameters="result"><![CDATA[
    if (ListCount(result) > 1) {
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", true)
      }
    }
    AddToResolvedNames (game.pov.currentcommandpendingvariable, result)
  ]]></function>
  <function name="HandleCommand" parameters="command, metadata"><![CDATA[
    handled = false
    if (game.menucallback <> null) {
      if (HandleMenuTextResponse(command)) {
        handled = true
      }
      else {
        if (game.menuallowcancel) {
          ClearMenu
        }
        else {
          handled = true
        }
      }
    }
    if (not handled) {
      StartTurnOutputSection
      msg ("")
      if (StartsWith (command, "*")) {
        msg (SafeXML (command))
      }
      else {
        shownlink = false
        if (game.echocommand) {
          if (metadata <> null and game.enablehyperlinks and game.echohyperlinks) {
            foreach (key, metadata) {
              if (EndsWith(command, key)) {
                objectname = StringDictionaryItem(metadata, key)
                object = GetObject(objectname)
                if (object <> null) {
                  msg ("&gt; " + Left(command, LengthOf(command) - LengthOf(key)) + "{object:" + object.name + "}")
                  shownlink = true
                }
              }
            }
          }
          if (not shownlink) {
            OutputTextRaw ("&gt; " + SafeXML(command))
          }
        }
        commands = Split(command, ".")
        game.pov.commandmetadata = metadata
        if (ListCount(commands) = 1) {
          game.pov.commandqueue = null
          HandleSingleCommand (Trim(command))
        }
        else {
          game.pov.commandqueue = commands
          HandleNextCommandQueueItem
        }
      }
    }
  ]]></function>
  <function name="HandleNextCommandQueueItem"><![CDATA[
    if (TypeOf(game.pov, "commandqueue") = "stringlist") {
      queuelength = ListCount(game.pov.commandqueue)
      if (queuelength > 0) {
        thiscommand = Trim(StringListItem(game.pov.commandqueue, 0))
        if (queuelength = 1) {
          game.pov.commandqueue = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.commandqueue, i))
          }
          game.pov.commandqueue = newqueue
        }
        if (LengthOf(thiscommand) > 0) {
          HandleSingleCommand (thiscommand)
        }
        else {
          HandleNextCommandQueueItem
        }
      }
    }
  ]]></function>
  <function name="HandleSingleCommand" parameters="command"><![CDATA[
    candidates = NewObjectList()
    foreach (cmd, ScopeCommands()) {
      if (IsRegexMatch(cmd.pattern, command, cmd.name)) {
        list add (candidates, cmd)
      }
    }
    maxstrength = -1
    thiscommand = null
    foreach (candidate, candidates) {
      strength = GetMatchStrength(candidate.pattern, command, candidate.name)
      if (strength >= maxstrength) {
        skip = false
        if (thiscommand <> null) {
          if (thiscommand.parent <> null and candidate.parent = null) {
            skip = true
          }
        }
        if (not skip) {
          thiscommand = candidate
          maxstrength = strength
        }
      }
    }
    if (thiscommand = null) {
      msg (Template("UnrecognisedCommand"))
      HandleNextCommandQueueItem
    }
    else {
      varlist = Populate(thiscommand.pattern, command, thiscommand.name)
      HandleSingleCommandPattern (command, thiscommand, varlist)
    }
  ]]></function>
  <function name="FinishTurn">
    RunTurnScripts
    UpdateStatusAttributes
    CheckDarkness
    UpdateObjectLinks
  </function>
  <function name="HandleSingleCommandPattern" parameters="command, thiscommand, varlist">
    game.pov.currentcommand = command
    game.pov.currentcommandpattern = thiscommand
    game.pov.currentcommandvarlist = varlist
    game.pov.currentcommandvarlistqueue = NewStringList()
    foreach (key, varlist) {
      list add (game.pov.currentcommandvarlistqueue, key)
    }
    game.pov.currentcommandresolvedelements = NewDictionary()
    game.pov.currentcommandresolvedobjects = NewObjectList()
    game.pov.currentcommandunresolvedobject = null
    game.pov.currentcommandpendingvariable = null
    ResolveNextName
  </function>
  <function name="ResolveNextName"><![CDATA[
    resolvedall = false
    queuetype = TypeOf(game.pov, "currentcommandvarlistqueue")
    if (queuetype = "stringlist") {
      queuelength = ListCount(game.pov.currentcommandvarlistqueue)
      if (queuelength > 0) {
        var = StringListItem(game.pov.currentcommandvarlistqueue, 0)
        if (queuelength = 1) {
          game.pov.currentcommandvarlistqueue = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.currentcommandvarlistqueue, i))
          }
          game.pov.currentcommandvarlistqueue = newqueue
        }
        value = StringDictionaryItem(game.pov.currentcommandvarlist, var)
        if (value <> "") {
          result = null
          resolvinglist = false
          if (StartsWith(var, "object")) {
            if (HasDelegateImplementation(game.pov.currentcommandpattern, "multiple")) {
              game.pov.currentcommandpendingobjectlist = NewObjectList()
              game.pov.currentcommandpendingvariable = var
              ResolveNameList (value, RunDelegateFunction(game.pov.currentcommandpattern, "multiple"), "object")
              resolvinglist = true
            }
            else {
              result = ResolveName(var, value, "object")
            }
          }
          else if (StartsWith(var, "exit")) {
            result = ResolveName(var, value, "exit")
          }
          else if (StartsWith(var, "text")) {
            result = StringDictionaryItem(game.pov.currentcommandvarlist, var)
          }
          else {
            error ("Unhandled command variable '" + var + "' - command variable names must begin with 'object', 'exit' or 'text'")
          }
          if (result = null) {
            if ((not resolvinglist) and LengthOf(GetString(game.pov, "currentcommandpendingvariable")) = 0) {
              UnresolvedCommand (value, var)
            }
          }
          else {
            AddToResolvedNames (var, result)
          }
        }
        else {
          ResolveNextName
        }
      }
      else {
        resolvedall = true
      }
    }
    else if (queuetype = "null") {
      resolvedall = true
    }
    else {
      error ("Invalid queue type")
    }
    if (resolvedall) {
      game.lastobjects = game.pov.currentcommandresolvedobjects
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", false)
      }
      if (not GetBoolean(game.pov.currentcommandpattern, "isundo")) {
        if (LengthOf(game.pov.currentcommand) > 0) {
          start transaction (game.pov.currentcommand)
        }
      }
      if (not GetBoolean(game.pov.currentcommandpattern, "isoops")) {
        game.unresolvedcommand = null
        game.unresolvedcommandvarlist = null
        game.unresolvedcommandkey = null
      }
      if (HasScript(game.pov.currentcommandpattern, "script")) {
        do (game.pov.currentcommandpattern, "script", game.pov.currentcommandresolvedelements)
      }
      HandleNextCommandQueueItem
    }
  ]]></function>
  <function name="AddToResolvedNames" parameters="var, result">
    if (TypeOf(result) = "object") {
      if (result.type = "object") {
        list add (game.pov.currentcommandresolvedobjects, result)
      }
    }
    else if (TypeOf(result) = "objectlist") {
      foreach (obj, result) {
        if (obj.type = "object") {
          list add (game.pov.currentcommandresolvedobjects, obj)
        }
      }
    }
    dictionary add (game.pov.currentcommandresolvedelements, var, result)
    ResolveNextName
  </function>
  <function name="UnresolvedCommand" parameters="objectname, varname"><![CDATA[
    unresolvedobject = objectname
    unresolvedkey = varname
    if (HasString(game.pov.currentcommandpattern, "unresolved")) {
      if (ListCount(game.pov.currentcommandvarlist) > 1) {
        msg (game.pov.currentcommandpattern.unresolved + " (" + unresolvedobject + ")")
      }
      else {
        msg (game.pov.currentcommandpattern.unresolved)
      }
    }
    else {
      if (ListCount(game.pov.currentcommandvarlist) > 1) {
        msg (Template("UnresolvedObject") + " (" + unresolvedobject + ")")
      }
      else {
        msg (Template("UnresolvedObject"))
      }
    }
    game.unresolvedcommand = game.pov.currentcommandpattern
    game.unresolvedcommandvarlist = game.pov.currentcommandvarlist
    game.unresolvedcommandkey = unresolvedkey
  ]]></function>
  <function name="HandleMultiVerb" parameters="object, property, object2, default">
    dictionary = GetAttribute(object, property)
    if (DictionaryContains(dictionary, object2.name)) {
      invoke (ScriptDictionaryItem(dictionary, object2.name))
    }
    else {
      parameters = NewDictionary()
      dictionary add (parameters, "object", object2)
      if (DictionaryContains(dictionary, "default")) {
        invoke (ScriptDictionaryItem(dictionary, "default"), parameters)
      }
      else {
        msg (default)
      }
    }
  </function>
  <function name="GetPlacesObjectsList" type="objectlist">
    return (ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov))
  </function>
  <function name="GetExitsList" type="objectlist">
    return (RemoveLookOnlyExits(RemoveSceneryObjects(ScopeExits())))
  </function>
  <function name="ScopeInventory" type="objectlist">
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(game.pov)) {
      if (ContainsVisible(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="ScopeReachableInventory" type="objectlist">
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(game.pov)) {
      if (ContainsReachable(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="ScopeVisibleNotHeld" type="objectlist">
    return (ScopeVisibleNotHeldForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotHeldForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      result = ListCombine(ScopeReachableNotHeldForRoom(room), ScopeVisibleNotReachableForRoom(room))
      list add (result, game.pov)
      return (result)
    }
    else {
      return (ListCombine(ScopeReachableNotHeldForRoom(room), ScopeVisibleNotReachableForRoom(room)))
    }
  </function>
  <function name="ScopeVisibleNotHeldNotScenery" type="objectlist">
    return (ScopeVisibleNotHeldNotSceneryForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotHeldNotSceneryForRoom" parameters="room" type="objectlist">
    return (RemoveSceneryObjects(ScopeVisibleNotHeldForRoom(room)))
  </function>
  <function name="ScopeReachable" type="objectlist">
    return (ScopeReachableForRoom(game.pov.parent))
  </function>
  <function name="ScopeReachableForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      result = ListCombine(ScopeReachableNotHeldForRoom(room), ScopeReachableInventory())
      list add (result, game.pov)
    }
    else {
      result = ScopeReachableNotHeldForRoom(room)
    }
    return (result)
  </function>
  <function name="ScopeVisibleNotReachable" type="objectlist">
    return (ScopeVisibleNotReachableForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotReachableForRoom" parameters="room" type="objectlist">
    result = NewObjectList()
    exclude = ScopeReachableForRoom(room)
    list add (exclude, game.pov)
    newParent = GetNonTransparentParent(room)
    foreach (obj, GetAllChildObjects(newParent)) {
      if (ContainsVisible(newParent, obj) and not ListContains(exclude, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="GetNonTransparentParent" parameters="room" type="object">
    if (GetBoolean(room, "transparent")) {
      if (room.parent = null) {
        return (room)
      }
      else {
        return (GetNonTransparentParent(room.parent))
      }
    }
    else {
      return (room)
    }
  </function>
  <function name="ScopeReachableNotHeld" type="objectlist">
    return (ScopeReachableNotHeldForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleLightsource" parameters="lightstrength" type="objectlist">
    result = ScopeVisibleNotHeld()
    lightobjects = NewObjectList()
    foreach (obj, result) {
      if (GetBoolean(obj, "lightsource") and GetString(obj, "lightstrength") = lightstrength) {
        list add (lightobjects, obj)
      }
    }
    exits = ScopeExits()
    foreach (obj, exits) {
      if (GetBoolean(obj, "lightsource") and GetString(obj, "lightstrength") = lightstrength) {
        list add (lightobjects, obj)
      }
    }
    return (lightobjects)
  </function>
  <function name="ScopeReachableNotHeldForRoom" parameters="room" type="objectlist"><![CDATA[
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(room)) {
      if (ContainsReachable(room, obj) and obj <> game.pov and not Contains(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  ]]></function>
  <function name="ScopeVisible" type="objectlist">
    return (ScopeVisibleForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      return (ListCombine(ScopeVisibleNotHeldForRoom(room), ScopeInventory()))
    }
    else {
      return (ScopeVisibleNotHeldForRoom(room))
    }
  </function>
  <function name="ScopeExits" type="objectlist">
    return (ScopeExitsForRoom(game.pov.parent))
  </function>
  <function name="ScopeExitsForRoom" parameters="room" type="objectlist">
    result = NewObjectList()
    foreach (exit, AllExits()) {
      if (exit.parent = room) {
        if (exit.visible) {
          if (GetBoolean(room, "darklevel")) {
            if (GetBoolean(exit, "lightsource")) {
              list add (result, exit)
            }
          }
          else {
            list add (result, exit)
          }
        }
      }
    }
    return (result)
  </function>
  <function name="ScopeCommands" type="objectlist">
    result = NewObjectList()
    foreach (command, AllCommands()) {
      if (command.parent = null or command.parent = game.pov.parent) {
        list add (result, command)
      }
    }
    return (result)
  </function>
  <function name="GetBlockingObject" parameters="obj" type="object">
    result = null
    foreach (obj, ListParents(obj)) {
      if (result = null and not CanReachThrough(obj)) {
        result = obj
      }
    }
    return (result)
  </function>
  <function name="ListParents" parameters="obj" type="objectlist"><![CDATA[
    result = NewObjectList()
    if (obj.parent <> null) {
      parent_as_list = NewObjectList()
      list add (parent_as_list, obj.parent)
      result = ListCombine(parent_as_list, ListParents(obj.parent))
    }
    return (result)
  ]]></function>
  <function name="ContainsVisible" parameters="parentObj, searchObj" type="boolean">
    return (ContainsAccessible(parentObj, searchObj, false))
  </function>
  <function name="ContainsReachable" parameters="parentObj, searchObj" type="boolean">
    return (ContainsAccessible(parentObj, searchObj, true))
  </function>
  <function name="ContainsAccessible" parameters="parentObj, searchObj, onlyReachable" type="boolean">
    if (not HasObject(searchObj, "parent")) {
      return (false)
    }
    else if (not searchObj.visible) {
      return (false)
    }
    else if (GetBoolean(parentObj, "darklevel") and not GetBoolean(searchObj, "lightsource")) {
      return (false)
    }
    else {
      if (searchObj.parent = null) {
        return (false)
      }
      else if (searchObj.parent = parentObj) {
        return (true)
      }
      else {
        if (onlyReachable) {
          canAdd = CanReachThrough(searchObj.parent)
        }
        else {
          canAdd = CanSeeThrough(searchObj.parent)
        }
        if (canAdd) {
          return (ContainsAccessible(parentObj, searchObj.parent, onlyReachable))
        }
        else {
          return (false)
        }
      }
    }
  </function>
  <function name="GetVolume" parameters="obj, allinclusive" type="int">
    result = 0
    foreach (object, GetAllChildObjects ( obj )) {
      if (HasInt(object, "volume")) {
        result = result + object.volume
      }
    }
    if (allinclusive and HasInt(obj, "volume")) {
      result = result + obj.volume
    }
    return (result)
  </function>
  <function name="CanSeeThrough" parameters="obj" type="boolean">
    return ((GetBoolean(obj, "transparent") or CanReachThrough(obj)) and not GetBoolean(obj, "hidechildren"))
  </function>
  <function name="CanReachThrough" parameters="obj" type="boolean">
    return (GetBoolean(obj, "isopen") and not GetBoolean(obj, "hidechildren"))
  </function>
  <function name="Got" parameters="obj" type="boolean">
    return (ListContains(ScopeInventory(), obj))
  </function>
  <function name="UpdateObjectLinks">
    if (game.enablehyperlinks) {
      data = NewStringDictionary()
      foreach (object, ScopeVisible()) {
        dictionary add (data, object.name, Join(GetDisplayVerbs(object), "/"))
      }
      JS.updateObjectLinks (data)
      exits = NewStringList()
      foreach (exit, ScopeExits()) {
        list add (exits, exit.name)
      }
      JS.updateExitLinks (exits)
    }
  </function>
  <function name="ShowRoomDescription"><![CDATA[
    isDark = CheckDarkness()
    if (isDark) {
      descriptionfield = "darkroomdescription"
    }
    else {
      descriptionfield = "description"
    }
    if (game.autodescription) {
      desc = ""
      for (i, 1, 4) {
        if (i = game.autodescription_youarein) {
          if (game.autodescription_youarein_useprefix) {
            youarein = game.pov.parent.descprefix
            desc = AddDescriptionLine (desc, youarein + " " + GetDisplayName(game.pov.parent) + ".")
          }
          else {
            desc = AddDescriptionLine (desc, "<b>" + CapFirst(GetDisplayName(game.pov.parent)) + "</b>")
          }
          if (game.autodescription_youarein_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_youcansee) {
          objects = FormatObjectList(game.pov.parent.objectslistprefix, GetNonTransparentParent(game.pov.parent), Template("And"), ".", false)
          desc = AddDescriptionLine(desc, objects)
          if (game.autodescription_youcansee_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_youcango) {
          exits = FormatExitList(game.pov.parent.exitslistprefix, GetExitsList(), Template("Or"), ".")
          desc = AddDescriptionLine(desc, exits)
          if (game.autodescription_youcango_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_description) {
          if (HasScript(game.pov.parent, descriptionfield)) {
            if (LengthOf(desc) > 0) {
              msg (desc)
              desc = ""
            }
            do (game.pov.parent, descriptionfield)
            if (game.autodescription_description_newline) {
              msg ("")
            }
          }
          else {
            desc = AddDescriptionLine(desc, GetRoomDescription())
            if (game.autodescription_description_newline) {
              msg (desc)
              desc = ""
            }
          }
        }
      }
      if (LengthOf(desc) > 0) {
        msg (desc)
      }
    }
    else {
      if (HasScript(game.pov.parent, descriptionfield)) {
        do (game.pov.parent, descriptionfield)
      }
      else {
        fulldesc = GetRoomDescription()
        if (LengthOf(fulldesc) > 0) {
          msg (fulldesc)
        }
      }
    }
  ]]></function>
  <function name="AddDescriptionLine" parameters="desc, line" type="string"><![CDATA[
    if (LengthOf(line) > 0) {
      if (LengthOf(desc) > 0) {
        msg (desc)
        desc = ""
      }
      desc = desc + line
    }
    return (desc)
  ]]></function>
  <function name="GetRoomDescription" type="string"><![CDATA[
    fulldesc = ""
    if (CheckDarkness()) {
      if (HasString(game.pov.parent, "darkroomdescription")) {
        if (LengthOf(game.pov.parent.darkroomdescription) > 0) {
          fulldesc = game.pov.parent.darkroomdescription
        }
      }
    }
    else {
      if (HasString(game.pov.parent, "description")) {
        if (LengthOf(game.pov.parent.description) > 0) {
          fulldesc = game.pov.parent.description
        }
      }
    }
    if (game.appendobjectdescription) {
      foreach (val, ScopeVisibleNotHeld()) {
        if (HasString(val, "inroomdescription")) {
          if (LengthOf(val.inroomdescription) > 0 and val <> game.pov) {
            fulldesc = fulldesc + " " + val.inroomdescription
          }
        }
      }
    }
    return (Trim(fulldesc))
  ]]></function>
  <function name="OnEnterRoom" parameters="oldRoom"><![CDATA[
    game.displayroomdescriptiononstart = false
    if (IsDefined("oldRoom")) {
      if (oldRoom <> null) {
        if (HasScript(oldRoom, "onexit")) {
          do (oldRoom, "onexit")
        }
      }
    }
    on ready {
      if ((not GetBoolean(game.pov.parent, "visited")) and HasScript(game.pov.parent, "beforefirstenter")) {
        do (game.pov.parent, "beforefirstenter")
      }
      on ready {
        if (HasScript(game.pov.parent, "beforeenter")) {
          do (game.pov.parent, "beforeenter")
        }
        on ready {
          if (game.gridmap) {
            Grid_CalculateMapCoordinates (game.pov.parent)
            Grid_DrawPlayerInRoom (game.pov.parent)
          }
          if (IsDefined("oldRoom")) {
            if (oldRoom <> null) {
              msg ("")
            }
          }
          request (UpdateLocation, CapFirst(GetDisplayName(game.pov.parent)))
          roomFrameExists = false
          if (HasString(game.pov.parent, "picture")) {
            if (LengthOf(game.pov.parent.picture) > 0) {
              roomFrameExists = true
              SetFramePicture (game.pov.parent.picture)
            }
          }
          if (game.clearframe and not roomFrameExists) {
            ClearFramePicture
          }
          if (game.showdescriptiononenter) {
            ShowRoomDescription
          }
          if ((not GetBoolean(game.pov.parent, "visited")) and HasScript(game.pov.parent, "firstenter")) {
            do (game.pov.parent, "firstenter")
          }
          on ready {
            if (HasScript(game.pov.parent, "enter")) {
              do (game.pov.parent, "enter")
            }
          }
          set (game.pov.parent, "visited", true)
        }
      }
    }
  ]]></function>
  <function name="FormatObjectList" parameters="preList, parent, preFinal, postList, useinventoryverbs" type="string"><![CDATA[
    result = ""
    count = 0
    list = RemoveSceneryObjects(GetDirectChildren(parent))
    if (CheckDarkness()) {
      list = RemoveDarkObjects(list)
    }
    listLength = ListCount(list)
    foreach (item, list) {
      if (LengthOf(result) = 0) {
        result = preList + " "
      }
      verbs = GetDisplayVerbs(item)
      result = result + GetDisplayNameLink(item, "object")
      if (CanSeeThrough(item)) {
        result = result + FormatObjectList(" (" + item.contentsprefix, item, preFinal, ")", useinventoryverbs)
      }
      count = count + 1
      if (count = listLength - 1) {
        result = result + " " + preFinal + " "
      }
      else if (count < listLength) {
        result = result + ", "
      }
      else {
        result = result + postList
      }
    }
    return (result)
  ]]></function>
  <function name="RemoveSceneryObjects" parameters="list" type="objectlist"><![CDATA[
    result = NewObjectList()
    foreach (obj, list) {
      if (not obj.scenery and obj <> game.pov and obj.visible) {
        list add (result, obj)
      }
    }
    return (result)
  ]]></function>
  <function name="RemoveLookOnlyExits" parameters="list" type="objectlist">
    result = NewObjectList()
    foreach (obj, list) {
      if (not obj.lookonly) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="RemoveDarkObjects" parameters="list" type="objectlist">
    result = NewObjectList()
    foreach (obj, list) {
      if (GetBoolean(obj, "lightsource") or obj.parent = game.pov) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="FormatExitList" parameters="preList, list, preFinal, postList" type="string"><![CDATA[
    result = ""
    listLength = ListCount(list)
    if (listLength > 0) {
      count = 0
      result = preList + " "
      foreach (item, list) {
        result = result + GetDisplayNameLink(item, "exit")
        count = count + 1
        if (count = listLength - 1) {
          result = result + " " + preFinal + " "
        }
        else if (count < listLength) {
          result = result + ", "
        }
      }
      result = result + postList
    }
    return (result)
  ]]></function>
  <function name="GetDisplayAlias" parameters="obj" type="string">
    if (HasString(obj, "alias")) {
      result = obj.alias
    }
    else {
      result = obj.name
    }
    return (result)
  </function>
  <function name="GetDisplayName" parameters="obj" type="string">
    return (GetDisplayNameLink(obj, ""))
  </function>
  <function name="GetDisplayNameLink" parameters="obj, type" type="string"><![CDATA[
    verbs = GetDisplayVerbs(obj)
    if (verbs <> null) {
      verbCount = ListCount(verbs)
    }
    else {
      verbCount = 0
    }
    if (type = "exit" and verbCount = 1) {
      if (not game.enablehyperlinks) {
        result = GetDisplayAlias(obj)
      }
      else {
        result = "{exit:" + obj.name + "}"
      }
    }
    else if (type = "") {
      result = GetDisplayAlias(obj)
    }
    else {
      result = "{object:" + obj.name + "}"
    }
    if (not GetBoolean(obj, "usedefaultprefix")) {
      if (obj.prefix = null) {
        prefix = ""
      }
      else {
        prefix = obj.prefix
      }
    }
    else if (type = "exit") {
      prefix = ""
    }
    else {
      prefix = GetDefaultPrefix(obj)
    }
    if (LengthOf(prefix) > 0) {
      prefix = prefix + " "
    }
    result = prefix + result
    if (not GetBoolean(obj, "usedefaultprefix") and HasString(obj, "suffix")) {
      if (LengthOf(obj.suffix) > 0) {
        result = result + " " + obj.suffix
      }
    }
    return (result)
  ]]></function>
  <function name="ObjectLink" parameters="obj" type="string">
    return ("{object:" + obj.name + "}")
  </function>
  <function name="GetListDisplayAlias" parameters="obj" type="string">
    if (HasString(obj, "listalias")) {
      result = obj.listalias
    }
    else {
      result = GetDisplayAlias(obj)
    }
    return (result)
  </function>
  <function name="CheckDarkness" type="boolean"><![CDATA[
    roomCheckDarkness = true
    if (GetBoolean(game.pov.parent, "dark")) {
      if (ListCount(ScopeVisibleLightsource("strong")) > 0) {
        roomCheckDarkness = false
      }
    }
    else {
      roomCheckDarkness = false
    }
    game.pov.parent.darklevel = roomCheckDarkness
    return (roomCheckDarkness)
  ]]></function>
  <function name="EnableTimer" parameters="timer">
    timer.enabled = true
    timer.trigger = game.timeelapsed + timer.interval
  </function>
  <function name="DisableTimer" parameters="timer">
    timer.enabled = false
  </function>
  <function name="SetTimerInterval" parameters="timer, interval">
    timer.interval = interval
  </function>
  <function name="SetTimerScript" parameters="timer, script">
    timer.script = script
  </function>
  <function name="SetTimeout" parameters="interval, script">
    SetTimeoutID (interval, "", script)
  </function>
  <function name="SetTimeoutID" parameters="interval, name, script">
    timername = ""
    if (name = "") {
      timername = GetUniqueElementName("timeout")
    }
    else {
      if (GetTimer(name) = null and GetObject(name) = null) {
        timername = name
      }
      else {
        error ("Error creating timer: There is already an existing object named " + name)
      }
    }
    if (not timername = "") {
      create timer (timername)
      timer = GetTimer(timername)
      SetTimerInterval (timer, interval)
      timer.timeoutscript = script
      SetTimerScript (timer) {
        this.enabled = false
        invoke (this.timeoutscript)
        destroy (this.name)
      }
      EnableTimer (timer)
    }
  </function>
  <function name="Pause" parameters="interval">
    request (Pause, ToString(interval * 1000))
  </function>
  <function name="RunTurnScripts">
    if (IsGameRunning()) {
      if (game.menucallback = null) {
        foreach (turnscript, AllTurnScripts()) {
          if (GetBoolean(turnscript, "enabled")) {
            inscope = false
            if (turnscript.parent = game or turnscript.parent = null) {
              inscope = true
            }
            else {
              if (Contains(turnscript.parent, game.pov)) {
                inscope = true
              }
            }
            if (inscope) {
              do (turnscript, "script")
            }
          }
        }
      }
    }
  </function>
  <function name="EnableTurnScript" parameters="turnscript">
    turnscript.enabled = true
  </function>
  <function name="DisableTurnScript" parameters="turnscript">
    turnscript.enabled = false
  </function>
  <function name="SetTurnScript" parameters="turnscript, script">
    turnscript.script = script
  </function>
  <function name="SetTurnTimeout" parameters="turncount, script">
    SetTurnTimeoutID (turncount, "", script)
  </function>
  <function name="SetTurnTimeoutID" parameters="turncount, name, script"><![CDATA[
    turnscriptname = ""
    if (name = "") {
      turnscriptname = GetUniqueElementName("turnscript")
    }
    else {
      if (GetObject(name) = null and GetTimer(name) = null) {
        turnscriptname = name
      }
      else {
        error ("Error creating turnscript: There is already an existing object named " + name)
      }
    }
    if (not turnscriptname="") {
      create turnscript (turnscriptname)
      turnscript = GetObject(turnscriptname)
      turnscript.turncount = 0
      turnscript.triggerturncount = turncount
      turnscript.timeoutscript = script
      SetTurnScript (turnscript) {
        this.turncount = this.turncount + 1
        if (this.turncount >= this.triggerturncount) {
          this.enabled = false
          invoke (this.timeoutscript)
          destroy (this.name)
        }
      }
      EnableTurnScript (turnscript)
    }
  ]]></function>
  <function name="UpdateStatusAttributes">
    status = AddStatusAttributesForElement("", game, game.statusattributes)
    status = AddStatusAttributesForElement(status, game.pov, game.povstatusattributes)
    status = AddStatusAttributesForElement(status, game.pov, game.pov.statusattributes)
    request (SetStatus, status)
  </function>
  <function name="AddStatusAttributesForElement" parameters="status, element, statusAttributes" type="string"><![CDATA[
    if (statusAttributes <> null) {
      foreach (attr, statusAttributes) {
        if (LengthOf(status) > 0) {
          status = status + "\n"
        }
        status = status + FormatStatusAttribute(attr, GetAttribute(element, attr), StringDictionaryItem(statusAttributes, attr))
      }
    }
    return (status)
  ]]></function>
  <function name="FormatStatusAttribute" parameters="attr, value, format" type="string">
    if (LengthOf(format) = 0) {
      return (CapFirst(attr) + ": " + value)
    }
    else {
      if (TypeOf(value) = "int" or TypeOf(value) = "double") {
        value = ToString(value)
      }
      if (TypeOf(value) = "null") {
        value = ""
      }
      return (Replace(format, "!", value))
    }
  </function>
  <function name="InitStatusAttributes">
    if (game.showscore) {
      game.score = 0
      if (game.statusattributes = null) {
        game.statusattributes = NewStringDictionary()
      }
      dictionary add (game.statusattributes, "score", "Score: !")
    }
    if (game.showhealth) {
      if (game.povstatusattributes = null) {
        game.povstatusattributes = NewStringDictionary()
      }
      dictionary add (game.povstatusattributes, "health", "Health: !%")
    }
  </function>
  <function name="IncreaseScore" parameters="amount">
    if (not HasInt(game, "score")) {
      error ("Score is not configured. To enable score, go to 'game' and tick 'Show score' on the Player tab.")
    }
    game.score = game.score + amount
  </function>
  <function name="DecreaseScore" parameters="amount">
    if (not HasInt(game, "score")) {
      error ("Score is not configured. To enable score, go to 'game' and tick 'Show score' on the Player tab.")
    }
    game.score = game.score - amount
  </function>
  <function name="IncreaseHealth" parameters="amount">
    if (not HasInt(game.pov, "health")) {
      error ("Health is not configured. To enable health, go to 'game' and tick 'Show health' on the Player tab.")
    }
    game.pov.health = game.pov.health + amount
  </function>
  <function name="DecreaseHealth" parameters="amount">
    if (not HasInt(game.pov, "health")) {
      error ("Health is not configured. To enable health, go to 'game' and tick 'Show health' on the Player tab.")
    }
    game.pov.health = game.pov.health - amount
  </function>
  <function name="OutputText" parameters="text">
    data = NewDictionary()
    dictionary add (data, "fulltext", text)
    text = ProcessTextSection(text, data)
    OutputTextRaw (text)
  </function>
  <function name="OutputTextRaw" parameters="text"><![CDATA[
    JS.addText ("<span style=\"" + GetCurrentTextFormat("") + "\">" + text + "</span><br/>")
    request (Speak, text)
  ]]></function>
  <function name="OutputTextNoBr" parameters="text">
    data = NewDictionary()
    dictionary add (data, "fulltext", text)
    text = ProcessTextSection(text, data)
    OutputTextRawNoBr (text)
  </function>
  <function name="OutputTextRawNoBr" parameters="text"><![CDATA[
    JS.addText ("<span style=\"" + GetCurrentTextFormat("") + "\">" + text + "</span>")
    request (Speak, text)
  ]]></function>
  <function name="GetCurrentTextFormat" parameters="colour" type="string"><![CDATA[
    style = ""
    if (UIOptionUseGameFont()) {
      font = GetCurrentFontFamily()
    }
    else {
      font = GetUIOption("OverrideFontName")
    }
    if (LengthOf(font) > 0) {
      style = style + "font-family:" + font + ";"
    }
    if (LengthOf(colour) = 0) {
      if (UIOptionUseGameColours()) {
        colour = game.defaultforeground
      }
      else {
        colour = GetUIOption("OverrideForeground")
      }
    }
    if (LengthOf(colour) > 0) {
      style = style + "color:" + colour + ";"
    }
    if (UIOptionUseGameFont()) {
      size = game.defaultfontsize
    }
    else {
      size = ToDouble(GetUIOption("OverrideFontSize"))
    }
    if (size > 0) {
      style = style + "font-size:" + ToString(size) + "pt;"
    }
    return (style)
  ]]></function>
  <function name="GetCurrentLinkTextFormat" type="string">
    return (GetCurrentTextFormat(GetLinkTextColour()))
  </function>
  <function name="UIOptionUseGameFont" type="boolean">
    value = GetUIOption("UseGameFont")
    if (value = null or value = "true") {
      return (true)
    }
    else {
      return (false)
    }
  </function>
  <function name="UIOptionUseGameColours" type="boolean">
    value = GetUIOption("UseGameColours")
    if (value = null or value = "true") {
      return (true)
    }
    else {
      return (false)
    }
  </function>
  <function name="GetLinkTextColour" type="string">
    if (UIOptionUseGameColours()) {
      return (game.defaultlinkforeground)
    }
    else {
      return (GetUIOption("OverrideLinkForeground"))
    }
  </function>
  <function name="ProcessTextSection" parameters="text, data" type="string"><![CDATA[
    containsUnprocessedSection = false
    open = Instr(text, "{")
      if (open > 0) {
        nestCount = 1
        searchStart = open + 1
        finished = false
        while (not finished) {
          nextOpen = Instr(searchStart, text, "{")
            nextClose = Instr(searchStart, text, "}")
          if (nextClose > 0) {
            if (nextOpen > 0 and nextOpen < nextClose) {
              nestCount = nestCount + 1
              searchStart = nextOpen + 1
            }
            else {
              nestCount = nestCount - 1
              searchStart = nextClose + 1
              if (nestCount = 0) {
                close = nextClose
                containsUnprocessedSection = true
                finished = true
              }
            }
          }
          else {
            finished = true
          }
        }
      }
      if (containsUnprocessedSection) {
        section = Mid(text, open + 1, close - open - 1)
        value = ProcessTextCommand(section, data)
        text = Left(text, open - 1) + value + ProcessTextSection(Mid(text, close + 1), data)
      }
      return (text)
  ]]></function>
  <function name="ProcessTextCommand" parameters="section, data" type="string">
    if (StartsWith(section, "if ")) {
      return (ProcessTextCommand_If(section, data))
    }
    else if (StartsWith(section, "object:")) {
      return (ProcessTextCommand_Object(section, data))
    }
    else if (StartsWith(section, "command:")) {
      return (ProcessTextCommand_Command(Mid(section, 9), data))
    }
    else if (StartsWith(section, "page:")) {
      return (ProcessTextCommand_Command(Mid(section, 6), data))
    }
    else if (StartsWith(section, "exit:")) {
      return (ProcessTextCommand_Exit(section, data))
    }
    else if (StartsWith(section, "once:")) {
      return (ProcessTextCommand_Once(section, data))
    }
    else if (StartsWith(section, "random:")) {
      return (ProcessTextCommand_Random(section, data))
    }
    else if (StartsWith(section, "rndalt:")) {
      return (ProcessTextCommand_RandomAlias(section, data))
    }
    else if (StartsWith(section, "img:")) {
      return (ProcessTextCommand_Img(section, data))
    }
    else {
      dot = Instr(section, ".")
      if (dot = 0) {
        return ("{" + ProcessTextSection(section, data) + "}")
      }
      else {
        objectname = Left(section, dot - 1)
        attributename = Mid(section, dot + 1)
        object = GetObject(objectname)
        if (object = null) {
          return ("{" + ProcessTextSection(section, data) + "}")
        }
        else {
          if (HasAttribute(object, attributename)) {
            type = TypeOf(object, attributename)
            switch (type) {
              case ("string") {
                return (ToString(GetAttribute(object, attributename)))
              }
              case ("int") {
                return (ToString(GetAttribute(object, attributename)))
              }
              case ("double") {
                return (ToString(GetAttribute(object, attributename)))
              }
              case ("boolean") {
                result = GetAttribute(object, attributename)
                if (result) {
                  return ("true")
                }
                else {
                  return ("false")
                }
              }
              default {
                return ("(" + type + ")")
              }
            }
          }
          else {
            return ("")
          }
        }
      }
    }
  </function>
  <function name="ProcessTextCommand_Object" parameters="section, data" type="string"><![CDATA[
    objectname = Mid(section, 8)
    text = ""
    colon = Instr(objectname, ":")
    if (colon > 0) {
      text = Mid(objectname, colon + 1)
      objectname = Left(objectname, colon - 1)
    }
    object = GetObject(objectname)
    if (object = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      if (LengthOf(text) = 0) {
        text = SafeXML(GetDisplayAlias(object))
      }
      if (game.enablehyperlinks) {
        if (not HasInt(game, "lastlinkid")) {
          game.lastlinkid = 0
        }
        game.lastlinkid = game.lastlinkid + 1
        linkid = "verblink" + game.lastlinkid
        colour = ""
        if (HasString(object, "linkcolour") and GetUIOption("UseGameColours") = "true") {
          colour = object.linkcolour
        }
        else {
          colour = GetLinkTextColour()
        }
        style = GetCurrentTextFormat(colour)
        return ("<a id=\"" + linkid + "\" style=\"" + style + "\" class=\"cmdlink elementmenu\" data-elementid=\"" + object.name + "\">" + text + "</a>")
      }
      else {
        return (text)
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_Command" parameters="command, data" type="string"><![CDATA[
    text = command
    colon = Instr(command, ":")
    if (colon > 0) {
      text = Mid(command, colon + 1)
      command = Left(command, colon - 1)
    }
    style = GetCurrentLinkTextFormat()
    return ("<a style=\"" + style + "\" class=\"cmdlink\" onclick=\"sendCommand('" + command + "')\">" + ProcessTextSection(text, data) + "</a>")
  ]]></function>
  <function name="ProcessTextCommand_Exit" parameters="section, data" type="string"><![CDATA[
    exitname = Mid(section, 6)
    exit = GetObject(exitname)
    if (exit = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      verbs = GetDisplayVerbs(exit)
      alias = GetDisplayAlias(exit)
      command = LCase(StringListItem(verbs, 0)) + " " + alias
      style = GetCurrentLinkTextFormat()
      return ("<a style=\"" + style + "\" class=\"cmdlink exitlink\" data-elementid=\"" + exit.name + "\" data-command=\"" + command + "\">" + alias + "</a>")
    }
  ]]></function>
  <function name="ProcessTextCommand_Once" parameters="section, data" type="string">
    if (not HasAttribute(game, "textprocessor_seen")) {
      game.textprocessor_seen = NewDictionary()
    }
    fulltext = StringDictionaryItem(data, "fulltext")
    if (not DictionaryContains(game.textprocessor_seen, fulltext)) {
      onceSectionsInThisText = NewList()
      dictionary add (game.textprocessor_seen, fulltext, onceSectionsInThisText)
    }
    else {
      onceSectionsInThisText = DictionaryItem(game.textprocessor_seen, fulltext)
    }
    if (not ListContains(onceSectionsInThisText, section)) {
      list add (onceSectionsInThisText, section)
      return (ProcessTextSection(Mid(section, 6), data))
    }
    else {
      return ("")
    }
  </function>
  <function name="ProcessTextCommand_Random" parameters="section, data" type="string">
    elements = Mid(section, 8)
    elementslist = Split(elements, ":")
    index = GetRandomInt(0, ListCount(elementslist) - 1)
    return (ProcessTextSection(ListItem(elementslist, index), data))
  </function>
  <function name="ProcessTextCommand_RandomAlias" parameters="section, data" type="string"><![CDATA[
    objectname = Mid(section, 8)
    object = GetObject(objectname)
    if (object = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      count = ListCount(object.alt)
      if (count > 0) {
        return (ListItem(object.alt, GetRandomInt(0, count - 1)))
      }
      else {
        return ("")
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_If" parameters="section, data" type="string"><![CDATA[
    command = Mid(section, 4)
    colon = Instr(command, ":")
    if (colon = 0) {
      return ("{if " + command + "}")
    }
    else {
      text = Mid(command, colon + 1)
      condition = Left(command, colon - 1)
      operator = Instr(condition, "<=")
      if (operator <> 0) {
        operatorlength = 2
      }
      if (operator = 0) {
        operator = Instr(condition, ">=")
        if (operator <> 0) {
          operatorlength = 2
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "<")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, ">")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "=")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        checkfor = true
        if (StartsWith(condition, "not ")) {
          checkfor = false
          condition = Mid(condition, 5)
        }
        dot = Instr(condition, ".")
        if (dot = 0) {
          result = GetBoolean(game, condition)
        }
        else {
          objectname = Left(condition, dot - 1)
          attributename = Mid(condition, dot + 1)
          object = GetObject(objectname)
          if (object = null) {
            result = false
          }
          else {
            result = GetBoolean(object, attributename)
          }
        }
        if (result = checkfor) {
          return (ProcessTextSection(text, data))
        }
        else {
          return ("")
        }
      }
      else {
        lhs = Left(condition, operator - 1)
        rhs = Mid(condition, operator + operatorlength)
        op = Mid(condition, operator, operatorlength)
        dot = Instr(lhs, ".")
        if (dot = 0) {
          return ("{if " + command + "}")
        }
        else {
          objectname = Left(lhs, dot - 1)
          attributename = Mid(lhs, dot + 1)
          object = GetObject(objectname)
          if (object = null) {
            return ("{if " + command + "}")
          }
          else {
            value = GetAttribute(object, attributename)
            if (op = "=") {
              if (ToString(value) = rhs) {
                return (ProcessTextSection(text, data))
              }
              else {
                return ("")
              }
            }
            else if (op = ">") {
              if (ToDouble(ToString(value)) > ToDouble(rhs)) {
                return (ProcessTextSection(text, data))
              }
              else {
                return ("")
              }
            }
            else if (op = "<") {
              if (ToDouble(ToString(value)) < ToDouble(rhs)) {
                return (ProcessTextSection(text, data))
              }
              else {
                return ("")
              }
            }
            else if (op = ">=") {
              if (ToDouble(ToString(value)) >= ToDouble(rhs)) {
                return (ProcessTextSection(text, data))
              }
              else {
                return ("")
              }
            }
            else if (op = "<=") {
              if (ToDouble(ToString(value)) <= ToDouble(rhs)) {
                return (ProcessTextSection(text, data))
              }
              else {
                return ("")
              }
            }
          }
        }
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_Img" parameters="section, data" type="string"><![CDATA[
    filename = Mid(section, 5)
    return ("<img src=\"" + GetFileURL(filename) + "\" />")
  ]]></function>
  <function name="SetFramePicture" parameters="filename"><![CDATA[
    request (SetPanelContents, "<img src=\"" + GetFileURL(filename) + "\" onload=\"setPanelHeight()\"/>")
    game.panelcontents = filename
  ]]></function>
  <function name="ClearFramePicture">
    request (SetPanelContents, "")
    game.panelcontents = null
  </function>
  <function name="ClearScreen">
    request (ClearScreen, "")
  </function>
  <function name="SetForegroundColour" parameters="colour">
    request (Foreground, colour)
    game.defaultforeground = colour
  </function>
  <function name="SetBackgroundColour" parameters="colour">
    request (Background, colour)
    game.defaultbackground = colour
  </function>
  <function name="SetFontName" parameters="font">
    game.defaultfont = font
    game.defaultwebfont = ""
  </function>
  <function name="SetWebFontName" parameters="font">
    AddExternalStylesheet ("http://fonts.googleapis.com/css?family=" + Replace(font, " ", "+"))
    game.defaultwebfont = font
  </function>
  <function name="AddExternalStylesheet" parameters="stylesheet">
    if (game.externalstylesheets = null) {
      game.externalstylesheets = NewStringList()
    }
    if (not ListContains(game.externalstylesheets, stylesheet)) {
      list add (game.externalstylesheets, stylesheet)
      JS.addExternalStylesheet (stylesheet)
    }
  </function>
  <function name="SetFontSize" parameters="size">
    game.defaultfontsize = size
  </function>
  <function name="PrintCentered" parameters="text">
    SetAlignment ("center")
    msg (text)
    SetAlignment ("left")
  </function>
  <function name="ShowYouTube" parameters="id">
    JS.AddYouTube (id)
  </function>
  <function name="ShowVimeo" parameters="id">
    JS.AddVimeo (id)
  </function>
  <function name="WaitForKeyPress">
    request (Wait, "")
  </function>
  <function name="DisplayHttpLink" parameters="text, url, https"><![CDATA[
    pos = Instr(url, "://")
    if (pos > 0) {
      url = Mid(url, pos + 3)
    }
    if (https) {
      url = "https://" + url
    }
    else {
      url = "http://" + url
    }
    msg ("<a style=\"" + GetCurrentLinkTextFormat() + "\" href=\"" + url + "\">" + text + "</a>")
  ]]></function>
  <function name="DisplayMailtoLink" parameters="text, url"><![CDATA[
    if (Instr(url, "mailto:") = 0) {
      url = "mailto:" + url
    }
    msg ("<a style=\"" + GetCurrentLinkTextFormat() + "\" href=\"" + url + "\">" + text + "</a>")
  ]]></function>
  <function name="CommandLink" parameters="cmd, text" type="string">
    return ("{command:" + cmd + ":" + text + "}")
  </function>
  <function name="Log" parameters="text">
    request (Log, text)
  </function>
  <function name="SetBackgroundImage" parameters="filename">
    JS.SetBackgroundImage (GetFileURL(filename))
    game.backgroundimage = filename
  </function>
  <function name="SetBackgroundOpacity" parameters="opacity">
    JS.SetBackgroundOpacity (opacity)
    game.backgroundopacity = opacity
    game.setbackgroundopacity = true
  </function>
  <function name="DisplayList" parameters="list, numbers"><![CDATA[
    if (numbers) {
      result = "<ol>"
    }
    else {
      result = "<ul>"
    }
    foreach (item, list) {
      result = result + "<li>" + item + "</li>"
    }
    if (numbers) {
      result = result + "</ol>"
    }
    else {
      result = result + "</ul>"
    }
    msg (result)
  ]]></function>
  <function name="SetAlignment" parameters="align">
    JS.createNewDiv (align)
  </function>
  <function name="GetCurrentFontFamily" type="string">
    if (game.defaultwebfont = null) {
      return (game.defaultfont)
    }
    else {
      if (game.defaultwebfont = "") {
        return (game.defaultfont)
      }
      else {
        return ("'" + game.defaultwebfont + "', " + game.defaultfont)
      }
    }
  </function>
  <function name="Grid_SetScale" parameters="scale">
    JS.Grid_SetScale (scale)
  </function>
  <function name="Grid_CalculateMapCoordinates" parameters="room"><![CDATA[
    if (room.parent <> null) {
      if (room.grid_parent_offset_auto) {
        room.grid_parent_offset_x = (room.parent.grid_width - room.grid_width) /2.0
        room.grid_parent_offset_y = (room.parent.grid_length - room.grid_length) /2.0
      }
      room.parent.grid_x = room.grid_x - room.grid_parent_offset_x
      room.parent.grid_y = room.grid_y - room.grid_parent_offset_y
      room.parent.grid_z = room.grid_z
      room.parent.grid_render = true
      Grid_CalculateMapCoordinates (room.parent)
    }
    foreach (exit, AllExits()) {
      if (exit.parent = room) {
        if (DoesInherit(exit, "northdirection")) {
          exit.grid_x = room.grid_x + room.grid_width/2.0 + exit.grid_offset_x
          exit.grid_y = room.grid_y + exit.grid_offset_y
          exit.to.grid_x = exit.grid_x - exit.to.grid_width/2.0
          exit.to.grid_y = (exit.grid_y - exit.to.grid_length) - exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x
          exit.end_y = exit.grid_y - exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "eastdirection")) {
          exit.grid_x = room.grid_x + room.grid_width + exit.grid_offset_x
          exit.grid_y = room.grid_y + room.grid_length/2.0 + exit.grid_offset_y
          exit.to.grid_x = exit.grid_x + exit.grid_length
          exit.to.grid_y = exit.grid_y - exit.to.grid_length/2.0
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x + exit.grid_length
          exit.end_y = exit.grid_y
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southdirection")) {
          exit.grid_x = room.grid_x + room.grid_width/2.0 + exit.grid_offset_x
          exit.grid_y = room.grid_y + room.grid_length + exit.grid_offset_y
          exit.to.grid_x = exit.grid_x - exit.to.grid_width/2.0
          exit.to.grid_y = exit.grid_y + exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x
          exit.end_y = exit.grid_y + exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "westdirection")) {
          exit.grid_x = room.grid_x + exit.grid_offset_x
          exit.grid_y = room.grid_y + room.grid_length/2.0 + exit.grid_offset_y
          exit.to.grid_x = (exit.grid_x - exit.to.grid_width) - exit.grid_length
          exit.to.grid_y = exit.grid_y - exit.to.grid_length/2.0
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x - exit.grid_length
          exit.end_y = exit.grid_y
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "northwestdirection")) {
          exit.grid_x = room.grid_x + exit.grid_offset_x
          exit.grid_y = room.grid_y + exit.grid_offset_y
          exit.to.grid_x = (exit.grid_x - exit.to.grid_width) - exit.grid_length
          exit.to.grid_y = (exit.grid_y - exit.to.grid_length) - exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x - exit.grid_length
          exit.end_y = exit.grid_y - exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "northeastdirection")) {
          exit.grid_x = room.grid_x + room.grid_width + exit.grid_offset_x
          exit.grid_y = room.grid_y + exit.grid_offset_y
          exit.to.grid_x = exit.grid_x + exit.grid_length
          exit.to.grid_y = (exit.grid_y - exit.to.grid_length) - exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x + exit.grid_length
          exit.end_y = exit.grid_y - exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southwestdirection")) {
          exit.grid_x = room.grid_x + exit.grid_offset_x
          exit.grid_y = room.grid_y + room.grid_length + exit.grid_offset_y
          exit.to.grid_x = (exit.grid_x - exit.to.grid_width) - exit.grid_length
          exit.to.grid_y = exit.grid_y + exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x - exit.grid_length
          exit.end_y = exit.grid_y + exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southeastdirection")) {
          exit.grid_x = room.grid_x + room.grid_width + exit.grid_offset_x
          exit.grid_y = room.grid_y + room.grid_length + exit.grid_offset_y
          exit.to.grid_x = exit.grid_x + exit.grid_length
          exit.to.grid_y = exit.grid_y + exit.grid_length
          exit.to.grid_z = room.grid_z
          exit.end_x = exit.grid_x + exit.grid_length
          exit.end_y = exit.grid_y + exit.grid_length
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "updirection")) {
          exit.to.grid_x = room.grid_x + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x
          exit.to.grid_y = room.grid_y + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y
          exit.to.grid_z = room.grid_z + exit.grid_length
          exit.grid_render = false
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "downdirection")) {
          exit.to.grid_x = room.grid_x + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x
          exit.to.grid_y = room.grid_y + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y
          exit.to.grid_z = room.grid_z - exit.grid_length
          exit.grid_render = false
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "indirection") or DoesInherit(exit, "outdirection")) {
          exit.to.grid_x = room.grid_x + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x
          exit.to.grid_y = room.grid_y + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y
          exit.to.grid_z = room.grid_z
          exit.grid_render = false
          exit.to.grid_render = true
        }
      }
    }
  ]]></function>
  <function name="Grid_DrawPlayerInRoom" parameters="room">
    if (room.grid_render) {
      Grid_DrawRoom (room, false)
      player_x = room.grid_x + room.grid_width/2.0
      player_y = room.grid_y + room.grid_length/2.0
      player_z = room.grid_z
      JS.Grid_DrawPlayer (player_x, player_y, player_z, 5, "black", 2, "yellow")
    }
  </function>
  <function name="Grid_DrawRoom" parameters="room, redraw"><![CDATA[
    if (room.grid_render) {
      if (redraw or not GetBoolean(room, "grid_isdrawn")) {
        if (room.parent <> null) {
          Grid_DrawRoom (room.parent, redraw)
        }
        JS.Grid_DrawBox (room.grid_x, room.grid_y, room.grid_z, room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)
        if (LengthOf(room.grid_label) > 0) {
          label_x = room.grid_x + room.grid_width/2.0
          label_y = (room.grid_y + room.grid_length/2.0) - 0.5
          JS.Grid_DrawLabel (label_x, label_y, room.grid_z, room.grid_label)
        }
        foreach (exit, AllExits()) {
          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {
            Grid_DrawLine (exit.grid_x, exit.grid_y, exit.end_x, exit.end_y, "black", 1)
          }
        }
        room.grid_isdrawn = true
      }
    }
  ]]></function>
  <function name="Grid_ShowCustomLayer" parameters="visible">
    if (visible) {
      JS.Grid_ShowCustomLayer (true)
    }
    else {
      JS.Grid_ShowCustomLayer (false)
    }
  </function>
  <function name="Grid_ClearCustomLayer">
    JS.Grid_ClearCustomLayer ()
  </function>
  <function name="Grid_DrawLine" parameters="x1, y1, x2, y2, border, borderWidth">
    JS.Grid_DrawLine (x1, y1, x2, y2, border, borderWidth)
  </function>
  <function name="Grid_DrawGridLines" parameters="x1, y1, x2, y2, border">
    JS.Grid_DrawGridLines (x1, y1, x2, y2, border)
  </function>
  <function name="Grid_SetCentre" parameters="x, y">
    JS.Grid_SetCentre (x, y)
  </function>
  <function name="Grid_DrawSquare" parameters="id, x, y, width, height, text, fill">
    JS.Grid_DrawSquare (id, x, y, width, height, text, fill)
  </function>
  <function name="JS_GridSquareClick" parameters="parameterstring">
    parameters = Split(parameterstring, ";")
    x = ToInt(StringListItem(parameters, 0))
    y = ToInt(StringListItem(parameters, 1))
    GridSquareClick (x, y)
  </function>
  <function name="GridSquareClick" parameters="x, y">
  </function>
  <function name="Grid_Redraw">
    foreach (object, AllObjects()) {
      if (GetBoolean(object, "grid_isdrawn")) {
        Grid_DrawRoom (object, true)
      }
    }
  </function>
  <function name="DiceRoll" parameters="dicetype" type="int">
    dpos = Instr(dicetype, "d")
    if (dpos = 0) {
      error ("Invalid dice type: " + dicetype)
    }
    else {
      number_string = Left(dicetype, dpos - 1)
      sides_string = Mid(dicetype, dpos + 1)
      if (not (IsNumeric(number_string) and IsNumeric(sides_string))) {
        error ("Invalid dice type: " + dicetype)
      }
      else {
        number = ToInt(number_string)
        sides = ToInt(sides_string)
        total = 0
        for (i, 1, number) {
          total = total + GetRandomInt(1, sides)
        }
        return (total)
      }
    }
  </function>
  <function name="TextFX_Typewriter" parameters="text, speed">
    TextFX_Typewriter_Internal (text, speed, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)
  </function>
  <function name="TextFX_Typewriter_Internal" parameters="text, speed, font, color, size">
    JS.TextFX.Typewriter (text, speed, font, color, size)
  </function>
  <function name="TextFX_Unscramble" parameters="text, speed, reveal">
    TextFX_Unscramble_Internal (text, speed, reveal, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)
  </function>
  <function name="TextFX_Unscramble_Internal" parameters="text, speed, reveal, font, color, size">
    JS.TextFX.Unscramble (text, speed, reveal, font, color, size)
  </function>
  <function name="InitInterface"><![CDATA[
    if (game.externalstylesheets <> null) {
      foreach (stylesheet, game.externalstylesheets) {
        JS.addExternalStylesheet (stylesheet)
      }
    }
    if (game.setbackgroundopacity) {
      SetBackgroundOpacity (game.backgroundopacity)
    }
    request (Background, game.defaultbackground)
    request (Foreground, game.defaultforeground)
    request (LinkForeground, game.defaultlinkforeground)
    if (LengthOf(game.backgroundimage) > 0) {
      SetBackgroundImage (game.backgroundimage)
    }
    request (SetCompassDirections, Join(game.compassdirections, ";"))
    request (SetInterfaceString, "InventoryLabel=Inventory")
    request (SetInterfaceString, "PlacesObjectsLabel=Places and Objects")
    request (SetInterfaceString, "CompassLabel=Compass")
    request (SetInterfaceString, "InButtonLabel=in")
    request (SetInterfaceString, "OutButtonLabel=out")
    request (SetInterfaceString, "EmptyListLabel=(empty)")
    request (SetInterfaceString, "NothingSelectedLabel=(nothing selected)")
    request (SetInterfaceString, "TypeHereLabel=Type here...")
    request (SetInterfaceString, "ContinueLabel=Continue...")
    JS.SetMenuBackground (game.menubackground)
    JS.SetMenuForeground (game.menuforeground)
    JS.SetMenuHoverBackground (game.menuhoverbackground)
    JS.SetMenuHoverForeground (game.menuhoverforeground)
    JS.SetMenuFontName (game.menufont)
    JS.SetMenuFontSize (game.menufontsize + "pt")
    if (not game.underlinehyperlinks) {
      JS.TurnOffHyperlinksUnderline ()
    }
    if (game.showpanes) {
      request (Show, "Panes")
    }
    else {
      request (Hide, "Panes")
    }
    if (game.showcommandbar) {
      request (Show, "Command")
    }
    else {
      request (Hide, "Command")
    }
    if (HasString(game, "panelcontents")) {
      SetFramePicture (game.panelcontents)
    }
    if (game.gridmap) {
      JS.ShowGrid (game.mapsize)
      Grid_SetScale (game.mapscale)
      if (game.pov <> null) {
        if (game.pov.parent <> null) {
          Grid_Redraw
          Grid_DrawPlayerInRoom (game.pov.parent)
        }
      }
    }
  ]]></function>
  <function name="StartGame"><![CDATA[
    StartTurnOutputSection
    if (game.pov = null) {
      playerObject = GetObject("player")
      if (playerObject = null) {
        if (ListCount(AllObjects()) > 0) {
          firstRoom = ObjectListItem(AllObjects(), 0)
        }
        else {
          create ("room")
          firstRoom = room
        }
        create ("player")
        player.parent = firstRoom
      }
      game.pov = player
    }
    else {
      InitPOV (null, game.pov)
    }
    InitStatusAttributes
    UpdateStatusAttributes
    InitVerbsList
    if (HasScript(game, "start")) {
      do (game, "start")
    }
    UpdateStatusAttributes
    UpdateObjectLinks
    on ready {
      if (game.gridmap) {
        game.pov.parent.grid_x = 0
        game.pov.parent.grid_y = 0
        game.pov.parent.grid_z = 0
        game.pov.parent.grid_render = true
        Grid_CalculateMapCoordinates (game.pov.parent)
        Grid_DrawPlayerInRoom (game.pov.parent)
      }
      if (game.displayroomdescriptiononstart) {
        OnEnterRoom (null)
      }
      UpdateStatusAttributes
      UpdateObjectLinks
    }
  ]]></function>
  <function name="RandomChance" parameters="percentile" type="boolean"><![CDATA[
    return (GetRandomInt(1,100) <= percentile)
  ]]></function>
  <function name="SetObjectFlagOn" parameters="object, flag">
    set (object, flag, true)
  </function>
  <function name="SetObjectFlagOff" parameters="object, flag">
    set (object, flag, false)
  </function>
  <function name="IncreaseObjectCounter" parameters="object, counter">
    if (not HasInt(object, counter)) {
      set (object, counter, 0)
    }
    set (object, counter, GetInt(object, counter) + 1)
  </function>
  <function name="DecreaseObjectCounter" parameters="object, counter">
    if (not HasInt(object, counter)) {
      set (object, counter, 0)
    }
    set (object, counter, GetInt(object, counter) - 1)
  </function>
  <function name="IsSwitchedOn" parameters="object" type="boolean">
    return (GetBoolean(object, "switchedon"))
  </function>
  <function name="AddToInventory" parameters="object">
    object.parent = game.pov
  </function>
  <function name="MoveObject" parameters="object, parent">
    object.parent = parent
  </function>
  <function name="MoveObjectHere" parameters="object">
    object.parent = game.pov.parent
  </function>
  <function name="RemoveObject" parameters="object">
    object.parent = null
  </function>
  <function name="MakeObjectVisible" parameters="object">
    object.visible = true
  </function>
  <function name="MakeObjectInvisible" parameters="object">
    object.visible = false
  </function>
  <function name="MakeExitVisible" parameters="object">
    object.visible = true
  </function>
  <function name="MakeExitInvisible" parameters="object">
    object.visible = false
  </function>
  <function name="HelperOpenObject" parameters="object">
    object.isopen = true
  </function>
  <function name="HelperCloseObject" parameters="object">
    object.isopen = false
  </function>
  <function name="CloneObject" parameters="object" type="object">
    newobject = Clone(object)
    if (not HasString(object, "alias")) {
      newobject.alias = object.name
    }
    return (newobject)
  </function>
  <function name="CloneObjectAndMove" parameters="object, newparent" type="object">
    newobject = CloneObject(object)
    newobject.parent = newparent
    return (newobject)
  </function>
  <function name="LockExit" parameters="exit">
    exit.locked = true
  </function>
  <function name="UnlockExit" parameters="exit">
    exit.locked = false
  </function>
  <function name="SwitchOn" parameters="object">
    object.switchedon = true
  </function>
  <function name="SwitchOff" parameters="object">
    object.switchedon = false
  </function>
  <function name="SetDark" parameters="object">
    object.dark = true
  </function>
  <function name="SetLight" parameters="object">
    object.dark = false
  </function>
  <function name="SetObjectLightstrength" parameters="object, strength">
    if (LengthOf(strength) = 0) {
      object.lightsource = false
    }
    else {
      object.lightsource = true
    }
    object.lightstrength = strength
  </function>
  <function name="SetExitLightstrength" parameters="exit, strength">
    if (LengthOf(strength) = 0) {
      exit.lightsource = false
    }
    else {
      exit.lightsource = true
    }
    exit.lightstrength = strength
  </function>
  <function name="ChangePOV" parameters="object"><![CDATA[
    if (game.pov <> object) {
      game.pov = object
      OnEnterRoom (null)
    }
  ]]></function>
  <function name="InitPOV" parameters="oldPOV, newPOV"><![CDATA[
    if (oldPOV <> null) {
      oldPOV.alias = oldPOV.external_alias
      oldPOV.alt = oldPOV.external_alt
      oldPOV.look = oldPOV.external_look
      oldPOV.gender = oldPOV.external_gender
      oldPOV.article = oldPOV.external_article
    }
    newPOV.external_alias = newPOV.alias
    newPOV.external_alt = newPOV.alt
    newPOV.external_look = newPOV.look
    newPOV.external_gender = newPOV.gender
    newPOV.external_article = newPOV.article
    if (not GetBoolean(newPOV, "pov_used")) {
      if (newPOV.alt = null) {
        newPOV.pov_alt = newPOV.pov_alt
      }
      else {
        newPOV.pov_alt = ListCombine(newPOV.alt, newPOV.pov_alt)
      }
      if (newPOV.alias <> null) {
        list add (newPOV.pov_alt, newPOV.alias)
      }
      if (game.showhealth) {
        newPOV.health = 100
        newPOV.changedhealth => {
          if (this.health > 100) {
            this.health = 100
          }
          else if (this.health <= 0) {
            this.health = 0
            if (HasScript(game, "onhealthzero")) {
              do (game, "onhealthzero")
            }
          }
        }
      }
      newPOV.pov_used = true
    }
    newPOV.alias = newPOV.pov_alias
    newPOV.alt = newPOV.pov_alt
    newPOV.look = newPOV.pov_look
    newPOV.gender = newPOV.pov_gender
    newPOV.article = newPOV.pov_article
  ]]></function>
  <function name="InitVerbsList">
    game.verbattributes = NewStringList()
    game.verbattributeslookup = NewObjectDictionary()
    foreach (cmd, AllCommands()) {
      if (HasString(cmd, "property")) {
        list add (game.verbattributes, cmd.property)
        dictionary add (game.verbattributeslookup, cmd.property, cmd)
      }
    }
  </function>
  <function name="GetDisplayVerbs" parameters="object" type="stringlist">
    if (Contains(game.pov, object)) {
      baselist = object.inventoryverbs
    }
    else {
      baselist = object.displayverbs
    }
    if (not game.autodisplayverbs or GetBoolean(object, "usestandardverblist")) {
      return (baselist)
    }
    else {
      if (HasAttribute(object, "generatedverbslist")) {
        verbs = object.generatedverbslist
      }
      else {
        verbs = NewStringList()
        foreach (attr, GetAttributeNames(object, false)) {
          if (ListContains(game.verbattributes, attr)) {
            cmd = ObjectDictionaryItem(game.verbattributeslookup, attr)
            if (HasString(cmd, "displayverb")) {
              displayverb = CapFirst(cmd.displayverb)
            }
            else {
              displayverb = CapFirst(attr)
            }
            if (not ListContains(baselist, displayverb)) {
              list add (verbs, displayverb)
            }
          }
        }
        object.generatedverbslist = verbs
      }
      if (GetBoolean(object, "useindividualverblist")) {
        return (verbs)
      }
      else {
        return (ListCombine(baselist, verbs))
      }
    }
  </function>
  <function name="ShowMenu" parameters="caption, options, allowCancel, callback"><![CDATA[
    outputsection = StartNewOutputSection()
    msg (caption)
    count = 0
    game.menuoptionskeys = NewStringList()
    foreach (option, options) {
      list add (game.menuoptionskeys, option)
      count = count + 1
      if (TypeOf(options) = "stringlist") {
        optionText = option
      }
      else {
        optionText = StringDictionaryItem(options, option)
      }
      msg (count + ": <a class=\"cmdlink\" style=\"" + GetCurrentLinkTextFormat() + "\" onclick=\"ASLEvent('ShowMenuResponse','" + option + "')\">" + optionText + "</a>")
    }
    EndOutputSection (outputsection)
    game.menuoptions = options
    game.menuallowcancel = allowCancel
    game.menucallback = callback
    game.menuoutputsection = outputsection
  ]]></function>
  <function name="ShowMenuResponse" parameters="option">
    if (game.menucallback = null) {
      error ("Unexpected menu response")
    }
    else {
      parameters = NewStringDictionary()
      dictionary add (parameters, "result", option)
      script = game.menucallback
      ClearMenu
      invoke (script, parameters)
    }
  </function>
  <function name="HandleMenuTextResponse" parameters="input" type="boolean"><![CDATA[
    handled = false
    if (IsInt(input)) {
      number = ToInt(input)
      if (number > 0 and number <= ListCount(game.menuoptionskeys)) {
        handled = true
        ShowMenuResponse (StringListItem(game.menuoptionskeys, number - 1))
      }
    }
    return (handled)
  ]]></function>
  <function name="ClearMenu">
    HideOutputSection (game.menuoutputsection)
    game.menuoutputsection = null
    game.menuoptions = null
    game.menucallback = null
  </function>
  <function name="StartNewOutputSection" type="string">
    if (not HasInt(game, "lastoutputsection")) {
      game.lastoutputsection = 0
    }
    game.lastoutputsection = game.lastoutputsection + 1
    name = "section" + game.lastoutputsection
    JS.StartOutputSection (name)
    return (name)
  </function>
  <function name="EndOutputSection" parameters="name">
    JS.EndOutputSection (name)
  </function>
  <function name="HideOutputSection" parameters="name">
    JS.HideOutputSection (name)
  </function>
  <function name="StartTurnOutputSection">
    if (HasString(game, "currentturnoutputsection")) {
      game.lastturnoutputsection = game.currentturnoutputsection
      EndOutputSection (game.currentturnoutputsection)
    }
    game.currentturnoutputsection = StartNewOutputSection()
  </function>
  <function name="HidePreviousTurnOutput">
    if (HasString(game, "lastturnoutputsection")) {
      HideOutputSection (game.lastturnoutputsection)
    }
  </function>
  <function name="Ask" parameters="question, callback">
    options = NewStringList()
    list add (options, "Yes")
    list add (options, "No")
    game.askcallback = callback
    ShowMenu (question, options, false) {
      parameters = NewDictionary()
      if (result = "Yes") {
        boolresult = true
      }
      else {
        boolresult = false
      }
      dictionary add (parameters, "result", boolresult)
      callback = game.askcallback
      game.askcallback = null
      invoke (callback, parameters)
    }
  </function>
  <function name="change_rooms">
    change_rooms_snake
    change_rooms_shake_lights (photoreceptor0)
  </function>
  <function name="look_room" parameters="lookRoom"><![CDATA[
    count = 0
    indexHit = 0
    foreach (rm, player.snake_rooms) {
      count = count + 1
      if (rm.name = lookRoom.name) {
        indexHit = count
      }
    }
    if (indexHit = player.length-1) {
      msg ("You've just come from there. You wouldn't want to risk running into anything that may be following you...would you?")
    }
    else if (indexHit > 1) {
      msg ("You see a slimy, scaly body stretching across that room, nearly filling it. What a monstrosity!")
    }
    else if (indexHit = 1) {
      msg ("You see the tip of a slimy, scaly tail. It looks like the monster is passing through. You're probably clear to go this way.")
    }
    else {
      msg ("That way is dark, empty and quiet. Not unlike your heart, you monster!Sorry. That was inappropriate.")
    }
  ]]></function>
  <function name="clear_rooms">
    player.snake_rooms = NewObjectList()
    curRoom = ObjectListItem(ListParents(player),0)
    for (index, 0, player.length-1) {
      list add (player.snake_rooms, curRoom)
    }
  </function>
  <function name="grow_snake">
    player.length = player.length + 1
    curRoom = ObjectListItem(ListParents(player),0)
    curRoomList = NewObjectList()
    list add (curRoomList, curRoom)
    player.snake_rooms = ListCombine (curRoomList, player.snake_rooms)
    list_rooms
  </function>
  <function name="list_rooms">
    if (player.show_debug = 1) {
      msg ("Current rooms in the list are: ")
      msg ("-Tail")
      foreach (rm, player.snake_rooms) {
        msg ("-"+rm.name)
      }
      msg ("-Head")
    }
  </function>
  <function name="game_over">
    msg ("A slimy, scaly body spans the room. The pursuing creature and the one fleeing have come to a head, it seems! It's a flurry of fangs and blood as you try to defend yourself...and you fight valiantly, but are ultimately torn apart.Hint: You can look into a room before entering it.Remember to save!")
    ClearFramePicture
    finish
  </function>
  <function name="game_win">
    msg ("You slither up the beanstalk and out the window—out to freedom in the long, cool grass where you feel most at home.Congratulations: you have won Snake!")
    finish
  </function>
  <function name="humans_caught">
    if (thesis.wasburned = false) {
      msg ("You got caught by the humans in this room! They don't seem very nice...guess you're hooped.Hint: You can look into a room before entering it.Remember to save!")
      finish
    }
  </function>
  <function name="init_photoreceptor" parameters="photoreceptor">
    if (not photoreceptor.initialized) {
      photoreceptor.lights_list = NewObjectList()
      photoreceptor.initialized = true
    }
  </function>
  <function name="change_rooms_snake">
    if (player.game_start = 0) {
      curRoom = ObjectListItem(ListParents(player),0)
      if (not DoesInherit (curRoom, "not_snake_room")) {
        list_rooms
        tailRoom = ObjectListItem(player.snake_rooms, 0)
        list remove (player.snake_rooms, tailRoom)
        count = 0
        indexHit = 0
        foreach (rm, player.snake_rooms) {
          count = count + 1
          if (rm.name = curRoom.name) {
            indexHit = count
          }
        }
        list add (player.snake_rooms, curRoom)
        if (indexHit = player.length-2) {
          msg ("You hear the sound of a heaving body dragging across the floor, but you proceed anyway.")
          game_over
        }
        else if (not indexHit = 0) {
          game_over
        }
        else {
          list_rooms
        }
      }
    }
    else {
      player.game_start = 0
    }
  </function>
  <function name="change_rooms_shake_lights" parameters="photoreceptor"><![CDATA[
    foreach (light, photoreceptor.lights_list) {
      if (light.remaining_dur > 0) {
        light.remaining_dur = (light.remaining_dur - 1)
        if (light.remaining_dur = 0) {
          msg ("A light has turned off.")
        }
      }
    }
  ]]></function>
  <walkthrough name="burnThesisWalk">
    <steps type="simplestringlist">
      go west
      west
      west
      west
      open small cage
      eat hamster
      north
      north
      take thesis
      east
      south
      east
      east
      turn on gas
      hug bunsen burner
      burn thesis
    </steps>
  </walkthrough>
  <walkthrough name="prototypeWalk">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="firstIkeaShelfWalk">
    <steps type="simplestringlist">
      go east
      go south
      go south
    </steps>
  </walkthrough>
  <walkthrough name="secondIkeaShelfWalk">
    <steps type="simplestringlist">
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
  <walkthrough name="twoRoomsWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
    </steps>
  </walkthrough>
  <walkthrough name="torchWalk">
    <steps type="simplestringlist">
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
    </steps>
  </walkthrough>
  <walkthrough name="toFinalLevel">
    <steps type="simplestringlist">
      go north
      go east
      go south
      go south
      eat rat
      go west
      go west
      push box
      go in
      go north
      take key card
      go north
      go out
      go east
      go east
      go south
      use key card on key card reader
      drop key card
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go west
      go west
      go west
      go west
      pick up key card
      go north
      go east
      go east
      go east
      go east
      go south
      go west
      go west
      go west
      use key card on key card reader
      go south
      eat rat
      go south
      go south
      go west
      go north
      go north
      go east
      go north
      go east
      go east
      use key card on key card reader
      go south
      go south
      eat rat
      go south
      go south
      go east
      go north
      go north
      go north
      go west
      go north
      go east
      lie on scale
      drop key card
      go east
      go east
      go east
      go south
      go south
      go south
      go south
      go south
      go south
      go west
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      go north
      go east
      shake flashlight
      go north
      go west
      shake flashlight
      power on door control
      use door control
      go north
      go west
      go west
      go west
      go north
      go north
      go west
      drag shelf
      go north
      go west
      go north
      go west
      go west
      go south
      go south
      go east
      go east
      go north
      go east
      go east
      go south
      go south
      go east
      go east
      go south
      go east
      drop shelf
      climb up shelf
      eat brightly coloured candy
      eat dull boring candy
      go north
    </steps>
  </walkthrough>
  <output>
    <html><![CDATA[
            <div id="outputData" style="display: none" data-divcount="261" data-currentdiv="#divOutputAlign261"></div>
            
        <div id="divOutputAlign1" style="text-align: left" class="section1"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">Groggy, you awaken in an unfamiliar room on a cold tile floor of green. You feel slimy and realize you have no idea how you got here. Your blood runs cold.Pushing away the regret of whatever you may have done last night, you first notice the emptiness of the place, and the foreboding feeling that something is coming after you.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit11" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit12" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit13" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit14" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign2" style="text-align: left" class=""></div><div id="divOutputAlign3" style="text-align: left" class="section2"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit3" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit4" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit5" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign4" style="text-align: left" class=""></div><div id="divOutputAlign5" style="text-align: left" class="section3"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit6" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit7" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign6" style="text-align: left" class=""></div><div id="divOutputAlign7" style="text-align: left" class="section4"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink1" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit15" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit16" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit17" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="prototypeFinishExit" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign8" style="text-align: left" class=""></div><div id="divOutputAlign9" style="text-align: left" class="section5"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink2" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="deadRat" data-verbs="Look at/Eat">dead rat</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit23" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit24" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign10" style="text-align: left" class=""></div><div id="divOutputAlign11" style="text-align: left" class="section6"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; eat rat</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">Delicious! You feel...invigorated. Virile. Voluptuous......you're starting to make yourself uncomfortable.</span><br></div><div id="divOutputAlign12" style="text-align: left" class=""></div><div id="divOutputAlign13" style="text-align: left" class="section7"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit20" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit21" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit22" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign14" style="text-align: left" class=""></div><div id="divOutputAlign15" style="text-align: left" class="section8"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink3" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="box" data-verbs="Look at/Take/Push">box</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit18" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit19" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="vent20in" data-command="go in">in</a>.</span><br></div><div id="divOutputAlign16" style="text-align: left" class=""></div><div id="divOutputAlign17" style="text-align: left" class="section9"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; push box</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You slam into the box with all of your weight, and manage to push it aside. You feel a sense of accomplishment somewhat disproportionate to the task of moving a box.</span><br></div><div id="divOutputAlign18" style="text-align: left" class=""></div><div id="divOutputAlign19" style="text-align: left" class="section10"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go in</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a vent.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit29" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit30" data-command="go out">out</a>.</span><br></div><div id="divOutputAlign20" style="text-align: left" class=""></div><div id="divOutputAlign21" style="text-align: left" class="section11"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a vent.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink4" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard" data-verbs="Look at/Take">Key Card</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit27" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit28" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign22" style="text-align: left" class=""></div><div id="divOutputAlign23" style="text-align: left" class="section12"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; take key card</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You pick up the key card.</span><br></div><div id="divOutputAlign24" style="text-align: left" class=""></div><div id="divOutputAlign25" style="text-align: left" class="section13"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a vent.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit25" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit26" data-command="go out">out</a>.</span><br></div><div id="divOutputAlign26" style="text-align: left" class=""></div><div id="divOutputAlign27" style="text-align: left" class="section14"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go out</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a vent on the wall, but the room is otherwise unremarkable.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit1" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit2" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="Out Vent" data-command="go in">in</a>.</span><br></div><div id="divOutputAlign28" style="text-align: left" class=""></div><div id="divOutputAlign29" style="text-align: left" class="section15"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit3" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit4" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit5" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign30" style="text-align: left" class=""></div><div id="divOutputAlign31" style="text-align: left" class="section16"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit6" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit7" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign32" style="text-align: left" class=""></div><div id="divOutputAlign33" style="text-align: left" class="section17"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink5" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit15" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit16" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit17" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="prototypeFinishExit" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign34" style="text-align: left" class=""></div><div id="divOutputAlign35" style="text-align: left" class="section18"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; use key card on key card reader</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">Bleep, boop, doop! Now that you're done scat singing, you use the key card in the reader, and the door opens silently.</span><br></div><div id="divOutputAlign36" style="text-align: left" class=""></div><div id="divOutputAlign37" style="text-align: left" class="section19"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; drop key card</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You drop it.</span><br></div><div id="divOutputAlign38" style="text-align: left" class=""></div><div id="divOutputAlign39" style="text-align: left" class="section20"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit228" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit229" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit230" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign40" style="text-align: left" class=""></div><div id="divOutputAlign41" style="text-align: left" class="section21"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit231" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit232" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign42" style="text-align: left" class=""></div><div id="divOutputAlign43" style="text-align: left" class="section22"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit235" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit236" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit237" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign44" style="text-align: left" class=""></div><div id="divOutputAlign45" style="text-align: left" class="section23"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start02.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit105" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit106" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit107" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit108" data-command="go north">north</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You hear a noise to the east! Maybe you should check it out.</span><br></div><div id="divOutputAlign46" style="text-align: left" class=""></div><div id="divOutputAlign47" style="text-align: left" class="section24"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start03.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit109" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit110" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit111" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign48" style="text-align: left" class=""></div><div id="divOutputAlign49" style="text-align: left" class="section25"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start04.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit112" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit113" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign50" style="text-align: left" class=""></div><div id="divOutputAlign51" style="text-align: left" class="section26"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start14.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink6" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="scale" data-verbs="Look at/Take/Lie on">scale</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit125" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit126" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start14_to_t_torches00" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign52" style="text-align: left" class=""></div><div id="divOutputAlign53" style="text-align: left" class="section27"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start13.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink7" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader2" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit122" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit123" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit124" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start13_to_tr_large00" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign54" style="text-align: left" class=""></div><div id="divOutputAlign55" style="text-align: left" class="section28"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start12.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit119" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit120" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit121" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign56" style="text-align: left" class=""></div><div id="divOutputAlign57" style="text-align: left" class="section29"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink8" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader1" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit116" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit117" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit118" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_star11_to_tr_small01" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign58" style="text-align: left" class=""></div><div id="divOutputAlign59" style="text-align: left" class="section30"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start10.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink9" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard1" data-verbs="Look at/Take">Key Card</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit114" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit115" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign60" style="text-align: left" class=""></div><div id="divOutputAlign61" style="text-align: left" class="section31"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; pick up key card</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You pick up the key card.</span><br></div><div id="divOutputAlign62" style="text-align: left" class=""></div><div id="divOutputAlign63" style="text-align: left" class="section32"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit100" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit101" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign64" style="text-align: left" class=""></div><div id="divOutputAlign65" style="text-align: left" class="section33"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit102" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit103" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit104" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign66" style="text-align: left" class=""></div><div id="divOutputAlign67" style="text-align: left" class="section34"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start02.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit105" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit106" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit107" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit108" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign68" style="text-align: left" class=""></div><div id="divOutputAlign69" style="text-align: left" class="section35"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start03.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit109" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit110" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit111" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign70" style="text-align: left" class=""></div><div id="divOutputAlign71" style="text-align: left" class="section36"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start04.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit112" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit113" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign72" style="text-align: left" class=""></div><div id="divOutputAlign73" style="text-align: left" class="section37"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start14.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink10" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="scale" data-verbs="Look at/Take/Lie on">scale</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit125" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit126" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start14_to_t_torches00" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign74" style="text-align: left" class=""></div><div id="divOutputAlign75" style="text-align: left" class="section38"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start13.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink11" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader2" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit122" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit123" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit124" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start13_to_tr_large00" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign76" style="text-align: left" class=""></div><div id="divOutputAlign77" style="text-align: left" class="section39"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start12.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit119" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit120" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit121" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign78" style="text-align: left" class=""></div><div id="divOutputAlign79" style="text-align: left" class="section40"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink12" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader1" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit116" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit117" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit118" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_star11_to_tr_small01" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign80" style="text-align: left" class=""></div><div id="divOutputAlign81" style="text-align: left" class="section41"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; use key card on key card reader</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The card reader signals its approval with a noise inimitable through onomatopoeia.</span><br></div><div id="divOutputAlign82" style="text-align: left" class=""></div><div id="divOutputAlign83" style="text-align: left" class="section42"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink13" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="deadRat1" data-verbs="Look at/Eat">dead rat</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit129" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit130" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit131" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign84" style="text-align: left" class=""></div><div id="divOutputAlign85" style="text-align: left" class="section43"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; eat rat</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">Packing on the pounds, there, aren't you? Look, someone had to tell you. Really, you should be thankful. Don't get so damn emotional!</span><br></div><div id="divOutputAlign86" style="text-align: left" class=""></div><div id="divOutputAlign87" style="text-align: left" class="section44"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit135" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit136" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit137" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign88" style="text-align: left" class=""></div><div id="divOutputAlign89" style="text-align: left" class="section45"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small21.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit140" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit141" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign90" style="text-align: left" class=""></div><div id="divOutputAlign91" style="text-align: left" class="section46"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small20.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit138" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit139" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign92" style="text-align: left" class=""></div><div id="divOutputAlign93" style="text-align: left" class="section47"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small10.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit132" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit133" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit134" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign94" style="text-align: left" class=""></div><div id="divOutputAlign95" style="text-align: left" class="section48"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit127" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit128" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign96" style="text-align: left" class=""></div><div id="divOutputAlign97" style="text-align: left" class="section49"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_small01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit129" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit130" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit131" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign98" style="text-align: left" class=""></div><div id="divOutputAlign99" style="text-align: left" class="section50"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink14" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader1" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit116" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit117" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit118" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_star11_to_tr_small01" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign100" style="text-align: left" class=""></div><div id="divOutputAlign101" style="text-align: left" class="section51"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start12.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit119" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit120" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit121" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign102" style="text-align: left" class=""></div><div id="divOutputAlign103" style="text-align: left" class="section52"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start13.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink15" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader2" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit122" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit123" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit124" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start13_to_tr_large00" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign104" style="text-align: left" class=""></div><div id="divOutputAlign105" style="text-align: left" class="section53"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; use key card on key card reader</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The reader accepts the card, sucking it in; out of the slot is unleashed a flood of wailing, tormented screams: the sound of thousands of souls who have died in previous save files, trying in vain to escape the eternal prison that is this puzzle room, never to find solace.No pressure.</span><br></div><div id="divOutputAlign106" style="text-align: left" class=""></div><div id="divOutputAlign107" style="text-align: left" class="section54"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit142" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit143" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit144" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign108" style="text-align: left" class=""></div><div id="divOutputAlign109" style="text-align: left" class="section55"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large10.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink16" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="deadRat2" data-verbs="Look at/Eat">dead rat</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit147" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit148" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit149" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign110" style="text-align: left" class=""></div><div id="divOutputAlign111" style="text-align: left" class="section56"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; eat rat</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The rat goes straight to your ample midsection as you put it out of its misery....or maybe that rat was just getting better, and you've swooped in and taken its life before it could even tell its family it loved them. Looks like you'll just have to spend the rest of your days wondering: what if?</span><br></div><div id="divOutputAlign112" style="text-align: left" class=""></div><div id="divOutputAlign113" style="text-align: left" class="section57"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large20.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit153" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit154" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit155" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign114" style="text-align: left" class=""></div><div id="divOutputAlign115" style="text-align: left" class="section58"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large30.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit159" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit160" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign116" style="text-align: left" class=""></div><div id="divOutputAlign117" style="text-align: left" class="section59"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large31.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit161" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit162" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign118" style="text-align: left" class=""></div><div id="divOutputAlign119" style="text-align: left" class="section60"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large21.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit156" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit157" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit158" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign120" style="text-align: left" class=""></div><div id="divOutputAlign121" style="text-align: left" class="section61"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit150" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit151" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit152" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign122" style="text-align: left" class=""></div><div id="divOutputAlign123" style="text-align: left" class="section62"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit145" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit146" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign124" style="text-align: left" class=""></div><div id="divOutputAlign125" style="text-align: left" class="section63"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_large00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit142" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit143" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit144" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign126" style="text-align: left" class=""></div><div id="divOutputAlign127" style="text-align: left" class="section64"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start13.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink17" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader2" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit122" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit123" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit124" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start13_to_tr_large00" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign128" style="text-align: left" class=""></div><div id="divOutputAlign129" style="text-align: left" class="section65"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start14.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink18" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="scale" data-verbs="Look at/Take/Lie on">scale</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit125" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit126" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start14_to_t_torches00" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign130" style="text-align: left" class=""></div><div id="divOutputAlign131" style="text-align: left" class="section66"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; lie on scale</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The scale beeps. Just as you give up hope and go to look for another dirty rat to eat, you hear the clicking noise of a door unlocking.</span><br></div><div id="divOutputAlign132" style="text-align: left" class=""></div><div id="divOutputAlign133" style="text-align: left" class="section67"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; drop key card</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You drop it.</span><br></div><div id="divOutputAlign134" style="text-align: left" class=""></div><div id="divOutputAlign135" style="text-align: left" class="section68"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink19" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light3_0" data-verbs="Look at/Take">flashlight</a> and a <a id="verblink20" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="photoreceptor0" data-verbs="Look at/Take">door control</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit163" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit164" data-command="go south">south</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit165" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="t_torches00_to_f24" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign136" style="text-align: left" class=""></div><div id="divOutputAlign137" style="text-align: left" class="section69"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit166" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit167" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit168" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign138" style="text-align: left" class=""></div><div id="divOutputAlign139" style="text-align: left" class="section70"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches02.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit169" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit170" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign140" style="text-align: left" class=""></div><div id="divOutputAlign141" style="text-align: left" class="section71"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches12.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink21" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light6_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit178" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit179" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit180" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign142" style="text-align: left" class=""></div><div id="divOutputAlign143" style="text-align: left" class="section72"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches22.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit188" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit189" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit190" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign144" style="text-align: left" class=""></div><div id="divOutputAlign145" style="text-align: left" class="section73"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches32.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink22" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light2_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit198" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit199" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit200" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign146" style="text-align: left" class=""></div><div id="divOutputAlign147" style="text-align: left" class="section74"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches42.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit208" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit209" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit210" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign148" style="text-align: left" class=""></div><div id="divOutputAlign149" style="text-align: left" class="section75"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches52.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink23" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light2_1" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit218" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit219" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit220" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign150" style="text-align: left" class=""></div><div id="divOutputAlign151" style="text-align: left" class="section76"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches62.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit226" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit227" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign152" style="text-align: left" class=""></div><div id="divOutputAlign153" style="text-align: left" class="section77"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches61.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit223" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit224" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit225" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign154" style="text-align: left" class=""></div><div id="divOutputAlign155" style="text-align: left" class="section78"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches60.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink24" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light13_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit221" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit222" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign156" style="text-align: left" class=""></div><div id="divOutputAlign157" style="text-align: left" class="section79"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 13 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign158" style="text-align: left" class=""></div><div id="divOutputAlign159" style="text-align: left" class="section80"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches50.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit211" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit212" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit213" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign160" style="text-align: left" class=""></div><div id="divOutputAlign161" style="text-align: left" class="section81"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches51.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink25" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light11_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit214" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit215" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit216" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit217" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign162" style="text-align: left" class=""></div><div id="divOutputAlign163" style="text-align: left" class="section82"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 11 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign164" style="text-align: left" class=""></div><div id="divOutputAlign165" style="text-align: left" class="section83"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches41.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit204" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit205" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit206" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit207" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign166" style="text-align: left" class=""></div><div id="divOutputAlign167" style="text-align: left" class="section84"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches40.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink26" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light9_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit201" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit202" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit203" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign168" style="text-align: left" class=""></div><div id="divOutputAlign169" style="text-align: left" class="section85"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 9 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign170" style="text-align: left" class=""></div><div id="divOutputAlign171" style="text-align: left" class="section86"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches30.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit191" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit192" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit193" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign172" style="text-align: left" class=""></div><div id="divOutputAlign173" style="text-align: left" class="section87"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches31.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink27" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light7_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit194" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit195" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit196" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit197" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign174" style="text-align: left" class=""></div><div id="divOutputAlign175" style="text-align: left" class="section88"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 7 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign176" style="text-align: left" class=""></div><div id="divOutputAlign177" style="text-align: left" class="section89"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches21.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit184" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit185" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit186" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit187" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign178" style="text-align: left" class=""></div><div id="divOutputAlign179" style="text-align: left" class="section90"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches20.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink28" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light5_0" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit181" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit182" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit183" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign180" style="text-align: left" class=""></div><div id="divOutputAlign181" style="text-align: left" class="section91"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 5 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign182" style="text-align: left" class=""></div><div id="divOutputAlign183" style="text-align: left" class="section92"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches10.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit171" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit172" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit173" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign184" style="text-align: left" class=""></div><div id="divOutputAlign185" style="text-align: left" class="section93"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink29" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light3_1" data-verbs="Look at/Take">flashlight</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit174" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit175" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit176" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit177" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign186" style="text-align: left" class=""></div><div id="divOutputAlign187" style="text-align: left" class="section94"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 3 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign188" style="text-align: left" class=""></div><div id="divOutputAlign189" style="text-align: left" class="section95"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit166" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit167" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit168" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign190" style="text-align: left" class=""></div><div id="divOutputAlign191" style="text-align: left" class="section96"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink30" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light3_0" data-verbs="Look at/Take">flashlight</a> and a <a id="verblink31" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="photoreceptor0" data-verbs="Look at/Take">door control</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit163" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit164" data-command="go south">south</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit165" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="t_torches00_to_f24" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign192" style="text-align: left" class=""></div><div id="divOutputAlign193" style="text-align: left" class="section97"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; shake flashlight</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You shake the flashlight. 3 little lights blink on the side. What could they mean...?</span><br></div><div id="divOutputAlign194" style="text-align: left" class=""></div><div id="divOutputAlign195" style="text-align: left" class="section98"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; power on door control</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">It looks like this unit is powerd by light. Reading the panel, it looks like it requires 6 light sources to fully power on,</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">and there is enought light! It powers on!</span><br></div><div id="divOutputAlign196" style="text-align: left" class=""></div><div id="divOutputAlign197" style="text-align: left" class="section99"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; use door control</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The door control indicates the door is unlocked.</span><br></div><div id="divOutputAlign198" style="text-align: left" class=""></div><div id="divOutputAlign199" style="text-align: left" class="section100"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">The door rattles as you push it, but it's still latched. Oh, there's a handle! It's too bad you can't reach it. Maybe you can find a way to get up there...</span><br></div><div id="divOutputAlign200" style="text-align: left" class=""></div><div id="divOutputAlign201" style="text-align: left" class="section101"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start14.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink32" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard1" data-verbs="Look at/Take">Key Card</a> and a <a id="verblink33" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="scale" data-verbs="Look at/Take/Lie on">scale</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit125" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit126" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start14_to_t_torches00" data-command="go east">east</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br></div><div id="divOutputAlign202" style="text-align: left" class=""></div><div id="divOutputAlign203" style="text-align: left" class="section102"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start13.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink34" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader2" data-verbs="Look at/Take">Key Card Reader</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit122" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit123" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit124" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start13_to_tr_large00" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign204" style="text-align: left" class=""></div><div id="divOutputAlign205" style="text-align: left" class="section103"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start12.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit119" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit120" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit121" data-command="go north">north</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">A light has turned off.</span><br></div><div id="divOutputAlign206" style="text-align: left" class=""></div><div id="divOutputAlign207" style="text-align: left" class="section104"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start02.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit105" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit106" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit107" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit108" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign208" style="text-align: left" class=""></div><div id="divOutputAlign209" style="text-align: left" class="section105"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit235" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit236" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit237" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign210" style="text-align: left" class=""></div><div id="divOutputAlign211" style="text-align: left" class="section106"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i10.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see an <a id="verblink35" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="ikeaShelf" data-verbs="Look at/Take/Open/Close/Drag/Climb up">Ikea shelf</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit233" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit234" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign212" style="text-align: left" class=""></div><div id="divOutputAlign213" style="text-align: left" class="section107"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; drag shelf</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You snatch the shelf and begin to drag it.</span><br></div><div id="divOutputAlign214" style="text-align: left" class=""></div><div id="divOutputAlign215" style="text-align: left" class="section108"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit228" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit229" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit230" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign216" style="text-align: left" class=""></div><div id="divOutputAlign217" style="text-align: left" class="section109"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink36" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader" data-verbs="Look at/Take">Key Card Reader</a> and a <a id="verblink37" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard" data-verbs="Look at/Take">Key Card</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit15" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit16" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit17" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="prototypeFinishExit" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign218" style="text-align: left" class=""></div><div id="divOutputAlign219" style="text-align: left" class="section110"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit6" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit7" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign220" style="text-align: left" class=""></div><div id="divOutputAlign221" style="text-align: left" class="section111"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit3" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit4" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit5" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign222" style="text-align: left" class=""></div><div id="divOutputAlign223" style="text-align: left" class="section112"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go west</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a vent on the wall, but the room is otherwise unremarkable.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit1" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit2" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="Out Vent" data-command="go in">in</a>.</span><br></div><div id="divOutputAlign224" style="text-align: left" class=""></div><div id="divOutputAlign225" style="text-align: left" class="section113"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit8" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit9" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit10" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign226" style="text-align: left" class=""></div><div id="divOutputAlign227" style="text-align: left" class="section114"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit18" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit19" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="vent20in" data-command="go in">in</a>.</span><br></div><div id="divOutputAlign228" style="text-align: left" class=""></div><div id="divOutputAlign229" style="text-align: left" class="section115"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit20" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit21" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit22" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign230" style="text-align: left" class=""></div><div id="divOutputAlign231" style="text-align: left" class="section116"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit23" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit24" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign232" style="text-align: left" class=""></div><div id="divOutputAlign233" style="text-align: left" class="section117"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a room.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink38" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="cardReader" data-verbs="Look at/Take">Key Card Reader</a> and a <a id="verblink39" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard" data-verbs="Look at/Take">Key Card</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit15" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit16" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit17" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="prototypeFinishExit" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign234" style="text-align: left" class=""></div><div id="divOutputAlign235" style="text-align: left" class="section118"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit228" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit229" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit230" data-command="go west">west</a>.</span><br></div><div id="divOutputAlign236" style="text-align: left" class=""></div><div id="divOutputAlign237" style="text-align: left" class="section119"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i01.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit231" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit232" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign238" style="text-align: left" class=""></div><div id="divOutputAlign239" style="text-align: left" class="section120"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in an i11.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit235" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit236" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit237" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign240" style="text-align: left" class=""></div><div id="divOutputAlign241" style="text-align: left" class="section121"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start02.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit105" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit106" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit107" data-command="go south">south</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit108" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign242" style="text-align: left" class=""></div><div id="divOutputAlign243" style="text-align: left" class="section122"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start03.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit109" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit110" data-command="go east">east</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit111" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign244" style="text-align: left" class=""></div><div id="divOutputAlign245" style="text-align: left" class="section123"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start04.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit112" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit113" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign246" style="text-align: left" class=""></div><div id="divOutputAlign247" style="text-align: left" class="section124"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go south</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a tr_start14.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink40" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="keyCard1" data-verbs="Look at/Take">Key Card</a> and a <a id="verblink41" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="scale" data-verbs="Look at/Take/Lie on">scale</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit125" data-command="go west">west</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit126" data-command="go north">north</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="tr_start14_to_t_torches00" data-command="go east">east</a>.</span><br></div><div id="divOutputAlign248" style="text-align: left" class=""></div><div id="divOutputAlign249" style="text-align: left" class="section125"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go east</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a t_torches00.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can see a <a id="verblink42" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="light3_0" data-verbs="Look at/Take">flashlight</a> and a <a id="verblink43" style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink elementmenu disabled" data-elementid="photoreceptor0" data-verbs="Look at/Take">door control</a>.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit163" data-command="go east">east</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit164" data-command="go south">south</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="exit165" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink disabled" data-elementid="t_torches00_to_f24" data-command="go north">north</a>.</span><br></div><div id="divOutputAlign250" style="text-align: left" class=""></div><div id="divOutputAlign251" style="text-align: left" class="section126"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; drop shelf</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You drop it.</span><br></div><div id="divOutputAlign252" style="text-align: left" class=""></div><div id="divOutputAlign253" style="text-align: left" class="section127"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; climb up shelf</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You look at Ikea shelf with the intent to climb it. It is intimidated by your size and collapses immediately. Several wrapped food items fall out of one of the drawers.</span><br></div><div id="divOutputAlign254" style="text-align: left" class=""></div><div id="divOutputAlign255" style="text-align: left" class="section128"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; eat brightly coloured candy</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">It tastes so good, but the shame burns so badly. Not that you care. You're just taking up ever more space as you go.</span><br></div><div id="divOutputAlign256" style="text-align: left" class=""></div><div id="divOutputAlign257" style="text-align: left" class="section129"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; eat dull boring candy</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You down it all like nothing. Did your parents teach you no manners? You are grown now, but only in size.</span><br></div><div id="divOutputAlign258" style="text-align: left" class=""></div><div id="divOutputAlign259" style="text-align: left" class="section130"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; go north</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You are in a f24.</span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">You can go <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink" data-elementid="exit75" data-command="go north">north</a>, <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink" data-elementid="exit76" data-command="go west">west</a> or <a style="font-family:Georgia, serif;color:Blue;font-size:12pt;" class="cmdlink exitlink" data-elementid="exit77" data-command="go south">south</a>.</span><br></div><div id="divOutputAlign260" style="text-align: left" class=""></div><div id="divOutputAlign261" style="text-align: left" class="section131"><span style="font-family:Georgia, serif;color:Black;font-size:12pt;"></span><br><span style="font-family:Georgia, serif;color:Black;font-size:12pt;">&gt; save</span><br></div>]]></html>
  </output>
</asl>